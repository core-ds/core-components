"use strict";(self.webpackChunk_alfalab_core_components=self.webpackChunk_alfalab_core_components||[]).push([[7684],{"./node_modules/@mdx-js/react/lib/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{NF:function(){return withMDXComponents},Zo:function(){return MDXProvider},ah:function(){return useMDXComponents},pC:function(){return MDXContext}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents:allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components:components,children:children,disableParentContext:disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./node_modules/@storybook/addon-docs/dist/chunk-S4VUQJ4A.mjs":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{r:function(){return DocsRenderer}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/react-dom-shim/dist/react-18.mjs"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),defaultComponents={code:_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.bD,a:_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Ct,..._storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.lO},ErrorBoundary=class extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(){super(...arguments),this.state={hasError:!1}}static getDerivedStateFromError(){return{hasError:!0}}componentDidCatch(err){let{showException:showException}=this.props;showException(err)}render(){let{hasError:hasError}=this.state,{children:children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components},TDocs=_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.WI;return new Promise(((resolve,reject)=>{__webpack_require__.e(9433).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@mdx-js/react/index.js")).then((({MDXProvider:MDXProvider})=>(0,_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__.l)(react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorBoundary,{showException:reject,key:Math.random()},react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXProvider,{components:components},react__WEBPACK_IMPORTED_MODULE_0__.createElement(TDocs,{context:context,docsParameter:docsParameter}))),element))).then((()=>resolve()))}))},this.unmount=element=>{(0,_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__.K)(element)}}}},"./node_modules/@storybook/addon-docs/dist/index.mjs":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{$4:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.$4},UG:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.UG},h_:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.h_},oG:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.oG}});__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-S4VUQJ4A.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")},"./docs/22.contributing.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__page:function(){return __page},default:function(){return _22_contributing_stories}});__webpack_require__("./node_modules/react/index.js");var lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),READMEraw_namespaceObject='<div className="github-doc">\n\n## Библиотека React компонентов для создания веб-интерфейсов\n\n[![Release](https://github.com/core-ds/core-components/actions/workflows/release.yml/badge.svg)](https://github.com/core-ds/core-components/actions/workflows/release.yml)\n[![Tests](https://github.com/core-ds/core-components/actions/workflows/build.yml/badge.svg)](https://github.com/core-ds/core-components/actions/workflows/build.yml)\n[![Coverage Status](https://coveralls.io/repos/github/core-ds/core-components/badge.svg)](https://coveralls.io/github/core-ds/core-components)\n[![Demo build](https://github.com/core-ds/core-components/actions/workflows/main.yml/badge.svg)](https://github.com/core-ds/core-components/actions/workflows/main.yml)\n[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/)\n\n[Cторибук](https://core-ds.github.io/core-components/) с документацией и песочницей.\n\n</div>\n\n## Установка\n\nУстановка всех компонентов:\n\n```bash\nyarn add @alfalab/core-components\n```\n\nКаждый компонент публикуется отдельным пакетом, поэтому вы можете подключить только нужный, не устанавливая библиотеку целиком:\n\n```bash\nyarn add @alfalab/core-components-button\n```\n\n## Использование\n\n```jsx\nimport { Button } from \'@alfalab/core-components/button\';\n```\n\n## Темизация\n\n[Гайд по настройке темизации](https://core-ds.github.io/core-components/master/?path=/docs/for-users-темизация--docs)\n\n## Разработка\n\n```bash\n$ git clone git@github.com:core-ds/core-components.git\n$ cd core-components\n$ yarn install\n$ yarn start\n```\n\nСторибук будет доступен по адресу http://localhost:9009/\n\n### Сигнатуры коллбэков\n\n> Компоненты передают в функции обратного вызова два аргумента:\n>\n> 1. `event: SyntheticEvent` - объект события, инициировавшего вызов.\n> 2. `payload: {}` - объект с дополнительными данными. Например `{ amount: 5000 }`\n\n### Импорт компонентов внутри компонентов\n\nТак как у нас монорепозиторий, то все пакеты должны быть независимы. Если при разработке компонента вам потребовался другой компонент, то его нужно добавить как зависимость. Пример можно посмотреть в [Тултипе](https://github.com/core-ds/core-components/tree/master/packages/tooltip). Также нужно добавить пару опций в `tsconfig.json`:\n\n```json\n{\n    "compilerOptions": {\n        "paths": {\n            "@alfalab/core-components-popover": ["../popover/src"] // для корректоной сборки rollup\n        }\n    },\n    "references": [{ "path": "../popover" }] // для корректной работы IDE\n}\n```\n\n### Выставление Pull request-а\n\nДля версионирования и публикации пакетов используется инструмент [Changesets](https://github.com/changesets/changesets).\nЕсли PR затрагивает функциональность одного из пакетов, то он должен включать в себя набор изменений.\nНабор изменений представляет собой файл формата md, который находится внутри директории .changeset и содержит описание сделанных изменений.\n\nФайл с набором изменений можно сгенерировать двумя способами:\n\n1. с помощью CLI команды `yarn changeset add`.\n   После ввода команды будет предложено выбрать пакет, в котором было произведено изменение, тип релиза (major, minor, patch) и ввести описание изменения.\n2. с помощью [changeset bot](https://github.com/changesets/bot).\n   В этом случае на странице с pull request-ом будет отображено сообщение с баннером \'No Changeset\'\n   и ниже ссылка для создания набора изменений - Click here if you\'re a maintainer who wants to add a changeset to this PR.\n   По клику на нее генерируется и открывается на редактирование md-файл. В нем нужно ввести понятное описание сделанных изменений на русском языке,\n   а также добавить или удалить названия пакетов (только в случае если бот неверно их определил).\n\nОписание изменения может состоять из произвольного количества строк в формате md.\nВот несколько особенностей, на которые стоит обращать внимание:\n\n1. форматируется только первая строка описания (добавляется дефис "-", если его не было),\n   вторая и последующие строки попадут в CHANGELOG так, как вы их запишете (сохранится разметка md)\n2. при добавлении нового компонента нужно указать \'0.0.0\' версию пакета в package.json,\n   в наборе изменений указать мажорный (\'major\') тип релиза, а в описание обязательно добавить фразу \'новый компонент ${name}\'.\n   Пример приведен ниже.\n\n    ```\n    ---\n    \'@alfalab/core-components-gap\': major\n    ---\n\n    Добавлен новый компонент Gap\n    ```\n\n## Запуск bash скриптов на Windows\n\nДля запуска bash скриптов на OS Windows необходимо сперва установить WSL\n(как это сделать можно почитать [тут](https://docs.microsoft.com/ru-ru/windows/wsl/)).\nДалее в PowerShell или CMD ввести команду bash, после чего уже запускать npm команды, использующие bash скрипты.\n\n## Релизы\n\nДля выпуска новой версии нужно запустить workflow "Release".\nДля этого нужно перейти во вкладку Actions на Github, выбрать "Release" и нажать "Run", оставив ветку без изменений (master)\n\n### Как выпустить бета-версию:\n\n1. Собираем пакет\n\n```bash\n$ yarn build\n```\n\n2. Переходим в папку с собранным пакетом и обновляем версию\n\n```bash\n$ cd dist\n$ npm version 2.0.0-beta.0 // подставить нужную версию\n```\n\n3. Публикуем пакет\n\n```bash\nnpm publish --tag beta\n```\n\nТакже можно воспользоваться экшеном "Beta release".\nДля этого нужно перейти во вкладку Actions на Github, выбрать workflow "Beta release",\nуказать ветку, из которой будет выпущена бетка, а также версию выпускаемого пакета.\n\n## Коммиты\n\nНа проекте подключен `commitlint` для линтинга коммитов. На основании коммитов формируется `CHANGELOG.MD`.\nМы придерживаемся [AngularJS commit conventions.](https://gist.github.com/stephenparish/9941e89d80e2bc58a153)\nКоммиты можно делать с помощью утилиты `commitizen`:\n\n```bash\n$ git add .\n$ yarn cm # запустит утилиту commitizen для создания коммита\n$ git push\n```\n\n## Сборка компонентов\n\nКомпоненты поставляются в трех видах:\n\n1. `ES5`\n\n2. `ES5 с css-модулями`\n\n3. `ES2020`\n\nИмпорт `ES5`:\n\n```tsx\nimport { Button } from \'@alfalab/core-components/button\';\n// или\nimport { Button } from \'@alfalab/core-components-button\';\n```\n\nИмпорт `ES5` с css-модулями:\n\n```tsx\nimport { Button } from \'@alfalab/core-components/button/cssm\';\n// или\nimport { Button } from \'@alfalab/core-components-button/cssm\';\n```\n\nИмпорт `ES2020`:\n\n```tsx\nimport { Button } from \'@alfalab/core-components/button/modern\';\n// или\nimport { Button } from \'@alfalab/core-components-button/modern\';\n```\n\n## Правила контрибьютинга\n\nМы открыты к любым предложениям по развитию библиотеки.\nОтправляйте свои идеи и вопросы через [pull requests](https://github.com/core-ds/core-components/pulls) или [issues](https://github.com/core-ds/core-components/issues).\n\n-   Уважаем тех, кто видит проблему и кидает PR.\n-   Не знаете что делать – можно брать любую задачу без Assignee, назначив её на себя.\n-   Знаете что делать и есть возможность – кидайте PR.\n-   Знаете что делать, но нет времени – добавьте задачу (issue).\n\n![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)\n\n## Мейнтейнеры\n\n-   [Александр Яценко](https://github.com/reme3d2y)\n-   [Владимир Гевак](https://github.com/Lacronts)\n-   [Евгений Купава](https://github.com/EGNKupava)\n-   [Валерия Чуричева](https://github.com/Valeri8888)\n-   [Евгений Сергеев](https://github.com/SiebenSieben)\n',jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _createMdxContent(props){const _components=Object.assign({h1:"h1"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"For contributors/Создание компонентов",parameters:{previewTabs:{canvas:{hidden:!0}}},id:"Instructions/contributing"}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"создание-компонентов",children:"Создание компонентов"}),"\n",(0,jsx_runtime.jsx)(dist.UG,{children:READMEraw_namespaceObject})]})}const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"For contributors/Создание компонентов",id:"Instructions/contributing",parameters:{previewTabs:{canvas:{hidden:!0}}},tags:["stories-mdx"],includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};var _22_contributing_stories=componentMeta}}]);