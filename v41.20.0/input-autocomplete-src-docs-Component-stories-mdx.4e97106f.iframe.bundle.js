"use strict";(self.webpackChunk_alfalab_core_components=self.webpackChunk_alfalab_core_components||[]).push([[4003],{"./node_modules/@mdx-js/react/lib/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{NF:function(){return withMDXComponents},Zo:function(){return MDXProvider},ah:function(){return useMDXComponents},pC:function(){return MDXContext}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents:allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components:components,children:children,disableParentContext:disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./node_modules/@storybook/addon-docs/dist/chunk-S4VUQJ4A.mjs":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{r:function(){return DocsRenderer}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/react-dom-shim/dist/react-18.mjs"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),defaultComponents={code:_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.bD,a:_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Ct,..._storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.lO},ErrorBoundary=class extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(){super(...arguments),this.state={hasError:!1}}static getDerivedStateFromError(){return{hasError:!0}}componentDidCatch(err){let{showException:showException}=this.props;showException(err)}render(){let{hasError:hasError}=this.state,{children:children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components},TDocs=_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.WI;return new Promise(((resolve,reject)=>{__webpack_require__.e(9433).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@mdx-js/react/index.js")).then((({MDXProvider:MDXProvider})=>(0,_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__.l)(react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorBoundary,{showException:reject,key:Math.random()},react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXProvider,{components:components},react__WEBPACK_IMPORTED_MODULE_0__.createElement(TDocs,{context:context,docsParameter:docsParameter}))),element))).then((()=>resolve()))}))},this.unmount=element=>{(0,_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__.K)(element)}}}},"./node_modules/@storybook/addon-docs/dist/index.mjs":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{$4:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.$4},UG:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.UG},h_:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.h_},oG:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.oG}});__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-S4VUQJ4A.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")},"./packages/input-autocomplete/src/docs/Component.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:function(){return Component_stories},inputAutocomplete:function(){return inputAutocomplete},inputAutocompleteMobile:function(){return inputAutocompleteMobile},inputAutocompleteModalMobile:function(){return inputAutocompleteModalMobile},matchOption:function(){return matchOption},options:function(){return options}});var react=__webpack_require__("./node_modules/react/index.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),addon_knobs_dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),blocks=__webpack_require__("./.storybook/blocks/index.ts"),modern=__webpack_require__("./dist/select/modern/index.js"),input_autocomplete_modern=__webpack_require__("./dist/input-autocomplete/modern/index.js"),mobile=__webpack_require__("./dist/input-autocomplete/modern/mobile.js"),package_namespaceObject={i8:"9.4.6"},jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _createMdxContent(props){const _components=Object.assign({h2:"h2",p:"p",pre:"pre",code:"code",a:"a"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(_components.h2,{id:"шеврон",children:"Шеврон"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Добавляйте шеврон, если пользователю будет удобней выбирать значение, просматривая список, не вводя первые символы.\nЕсли список длинный и вы предполагаете, что пользователь будет вводить значение с клавиатуры, шеврон можно скрыть."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const [shownChevron, setShownChevron] = React.useState(false);\n    const [multiple, setMultiple] = React.useState(false);\n    const [value, setValue] = React.useState('');\n\n    const options = [\n        { key: 'Neptunium' },\n        { key: 'Plutonium' },\n        { key: 'Americium' },\n        { key: 'Curium' },\n        { key: 'Berkelium' },\n        { key: 'Californium' },\n        { key: 'Einsteinium' },\n        { key: 'Fermium' },\n        { key: 'Mendelevium' },\n        { key: 'Nobelium' },\n        { key: 'Lawrencium' },\n        { key: 'Rutherfordium' },\n        { key: 'Dubnium' },\n        { key: 'Seaborgium' },\n        { key: 'Bohrium' },\n    ];\n\n    const matchOption = (option, inputValue) =>\n        option.key.toLowerCase().includes((inputValue || '').toLowerCase());\n\n    const handleInput = (event) => {\n        setValue(event.target.value);\n    };\n\n    const handleChange = ({ selected, selectedMultiple }) => {\n        if (multiple) {\n            const value = selectedMultiple.length\n                ? selectedMultiple.map((option) => option.key).join(', ') + ', '\n                : '';\n            setValue(value);\n\n            return;\n        }\n\n        setValue(selected ? selected.key : '');\n    };\n\n    const inputValues = value.replace(/ /g, '').split(',');\n\n    const selectedOptions = options.filter((option) => inputValues.includes(option.key.trim()));\n\n    const selected = selectedOptions.map((option) => option.key);\n\n    const getFilteredOptions = () => {\n        if (multiple) {\n            return inputValues.length === selected.length\n                ? options\n                : options.filter((option) => {\n                      return (\n                          selectedOptions.includes(option) ||\n                          matchOption(option, inputValues[inputValues.length - 1])\n                      );\n                  });\n        }\n\n        return options.filter((option) => matchOption(option, value));\n    };\n\n    return (\n        <div style={{ width: '100%' }}>\n            <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\n                <InputAutocomplete\n                    size='m'\n                    selected={multiple ? selected : undefined}\n                    block={true}\n                    options={getFilteredOptions()}\n                    label='Инпут с автокомплитом'\n                    onChange={handleChange}\n                    onInput={handleInput}\n                    value={value}\n                    Arrow={shownChevron ? Arrow : undefined}\n                    multiple={multiple}\n                    allowUnselect={true}\n                    Option={BaseOption}\n                    {...(shownChevron\n                        ? {\n                              showEmptyOptionsList: true,\n                              optionsListProps: {\n                                  emptyPlaceholder: (\n                                      <div style={{ display: 'flex', justifyContent: 'center' }}>\n                                          <Typography.Text view='component'>\n                                              Ничего не нашлось\n                                          </Typography.Text>\n                                      </div>\n                                  ),\n                              },\n                          }\n                        : null)}\n                />\n            </div>\n            <Gap size='xl' />\n\n            <Switch\n                checked={shownChevron}\n                label='Шеврон'\n                onChange={() => setShownChevron((prevState) => !prevState)}\n            />\n            <Gap size='m' />\n            <Switch\n                checked={multiple}\n                label='Мультивыбор'\n                onChange={() => {\n                    setMultiple((prevState) => !prevState);\n                    setValue('');\n                }}\n            />\n        </div>\n    );\n});\n//MOBILE\nrender(() => {\n    const [shownChevron, setShownChevron] = React.useState(false);\n    const [multiple, setMultiple] = React.useState(false);\n    const [value, setValue] = React.useState('');\n    const [filter, setFilter] = React.useState('');\n\n    const options = [\n        { key: 'Neptunium' },\n        { key: 'Plutonium' },\n        { key: 'Americium' },\n        { key: 'Curium' },\n        { key: 'Berkelium' },\n        { key: 'Californium' },\n        { key: 'Einsteinium' },\n        { key: 'Fermium' },\n        { key: 'Mendelevium' },\n        { key: 'Nobelium' },\n        { key: 'Lawrencium' },\n        { key: 'Rutherfordium' },\n        { key: 'Dubnium' },\n        { key: 'Seaborgium' },\n        { key: 'Bohrium' },\n    ];\n\n    const matchOption = (option, inputValue) =>\n        option.key.toLowerCase().includes((inputValue || '').toLowerCase());\n\n    const handleFilter = (event) => {\n        setFilter(event.target.value);\n    };\n\n    const filterValues = filter\n        .split(',')\n        .map((v) => v.trim())\n        .filter((v) => v);\n\n    const selectedOptions = options.filter((option) => filterValues.includes(option.key.trim()));\n\n    const selected = selectedOptions.map((option) => option.key);\n\n    const handleChange = (payload) => {\n        let newValue = '';\n\n        if (payload && payload.selectedMultiple) {\n            newValue = payload.selectedMultiple.length\n                ? payload.selectedMultiple.map((option) => option.key).join(', ') +\n                  `${multiple ? `,` : ''}`\n                : '';\n        } else {\n            newValue = payload || '';\n        }\n\n        setValue(newValue);\n        setFilter(newValue);\n    };\n\n    const filteredOptions =\n        filterValues.length === selected.length\n            ? options\n            : options.filter((option) => {\n                  return (\n                      selectedOptions.includes(option) ||\n                      matchOption(option, filterValues[filterValues.length - 1])\n                  );\n              });\n\n    return (\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\n            <InputAutocompleteMobile\n                size='m'\n                block={true}\n                value={value}\n                Arrow={shownChevron ? Arrow : undefined}\n                filter={filter}\n                options={filteredOptions}\n                label='Инпут с автокомплитом'\n                placeholder='Начните вводить название'\n                multiple={multiple}\n                selected={selected}\n                closeOnSelect={!multiple}\n                allowUnselect={true}\n                onChange={handleChange}\n                onFilter={handleFilter}\n                onClearFilter={() => setFilter('')}\n                onCancel={() => setFilter(value)}\n            />\n            <Gap size='m' />\n            <InputAutocompleteModalMobile\n                size='m'\n                block={true}\n                value={value}\n                Arrow={shownChevron ? Arrow : undefined}\n                filter={filter}\n                options={filteredOptions}\n                label='Инпут с автокомплитом'\n                placeholder='Начните вводить название'\n                multiple={multiple}\n                selected={selected}\n                closeOnSelect={!multiple}\n                allowUnselect={true}\n                onChange={handleChange}\n                onFilter={handleFilter}\n                onClearFilter={() => setFilter('')}\n                onCancel={() => setFilter(value)}\n            />\n            <Gap size='xl' />\n\n            <Switch\n                checked={shownChevron}\n                label='Шеврон'\n                onChange={() => setShownChevron((prevState) => !prevState)}\n            />\n            <Gap size='m' />\n            <Switch\n                checked={multiple}\n                label='Мультивыбор'\n                onChange={() => {\n                    setMultiple((prevState) => !prevState);\n                    setValue('');\n                }}\n            />\n        </div>\n    );\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"пустой-список",children:"Пустой список"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Когда по запросу пользователя не находится соответствия в списке, рекомендуется использовать такой шаблон."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    return (\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\n            <InputAutocomplete\n                size='m'\n                block={true}\n                options={[]}\n                label='Пустой список'\n                showEmptyOptionsList={true}\n                optionsListProps={{\n                    emptyPlaceholder: (\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Typography.Text view='component'>Ничего не нашлось</Typography.Text>\n                        </div>\n                    ),\n                }}\n                Option={BaseOption}\n            />\n        </div>\n    );\n});\n//MOBILE\nrender(() => {\n    return (\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\n            <InputAutocompleteMobile\n                size='m'\n                block={true}\n                options={[]}\n                onChange={() => {}}\n                label='Инпут с автокомплитом'\n                placeholder='Начните вводить название'\n                showEmptyOptionsList={true}\n                optionsListProps={{\n                    emptyPlaceholder: (\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Typography.Text view='component'>Ничего не нашлось</Typography.Text>\n                        </div>\n                    ),\n                }}\n                Option={BaseOption}\n            />\n        </div>\n    );\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"кастомизация-инпута",children:"Кастомизация инпута"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"При необходимости можно кастомизировать инпут и выпадающий список."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const matchOption = (option, inputValue) =>\n        option.content.toLowerCase().includes((inputValue || '').toLowerCase());\n\n    const mask = [\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        ' ',\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        ' ',\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        ' ',\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/,\n    ];\n\n    const cards = [\n        {\n            key: 'Карта 1',\n            content: '4035 5010 0000 0008',\n        },\n        {\n            key: 'Карта 2',\n            content: '4360 0000 0100 0005',\n        },\n        {\n            key: 'Карта 3',\n            content: '8171 9999 2766 0000',\n        },\n        {\n            key: 'Карта 4',\n            content: '5204 2477 5000 1471',\n        },\n        {\n            key: 'Карта 5',\n            content: '4111 1111 1111 1111',\n        },\n    ];\n\n    const CardOption = (props) => (\n        <BaseOption {...props}>\n            <div style={{ padding: 'var(--gap-s)' }}>\n                {props.option.key}\n                <br />\n                <sub>{props.option.content}</sub>\n            </div>\n        </BaseOption>\n    );\n\n    const [value, setValue] = React.useState('');\n    const inputRef = React.useRef();\n\n    const handleInput = (event) => {\n        setValue(event.target.value);\n    };\n\n    const handleChange = ({ selected }) => {\n        const value = selected ? selected.content : null\n        setValue(value);\n        if (value && inputRef.current) {\n            requestAnimationFrame(() => inputRef.current.setSelectionRange(value.length, value.length));\n        }\n    };\n\n    const filteredOptions = cards.filter((option) => matchOption(option, value));\n\n    return (\n        <InputAutocomplete\n            size='m'\n            options={filteredOptions}\n            selected={[]}\n            label='Маскированный ввод счёта'\n            onInput={handleInput}\n            onChange={handleChange}\n            value={value}\n            Option={CardOption}\n            Input={MaskedInput}\n            inputProps={{\n                ref: inputRef,\n                mask,\n            }}\n        />\n    );\n});\n@MOBILE@\nrender(() => {\n    const [value, setValue] = React.useState('');\n    const [filter, setFilter] = React.useState('');\n\n    const matchOption = (option, inputValue) =>\n        option.content.toLowerCase().includes((inputValue || '').toLowerCase());\n\n    const mask = [\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        ' ',\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        ' ',\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        ' ',\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/,\n    ];\n\n    const cards = [\n        {\n            key: 'Карта 1',\n            content: '4035 5010 0000 0008',\n        },\n        {\n            key: 'Карта 2',\n            content: '4360 0000 0100 0005',\n        },\n        {\n            key: 'Карта 3',\n            content: '8171 9999 2766 0000',\n        },\n        {\n            key: 'Карта 4',\n            content: '5204 2477 5000 1471',\n        },\n        {\n            key: 'Карта 5',\n            content: '4111 1111 1111 1111',\n        },\n    ];\n\n    const CardOption = (props) => (\n        <BaseOption {...props}>\n            <div style={{ padding: 'var(--gap-s) var(--gap-m)' }}>\n                {props.option.key}\n                <br />\n                <sub>{props.option.content}</sub>\n            </div>\n        </BaseOption>\n    );\n\n    const handleFilter = (event) => {\n        setFilter(event.target.value);\n    };\n\n    const handleChange = (payload) => {\n        const newValue = payload\n            ? isOptionShape(payload.selected)\n                ? payload.selected.content\n                : payload\n            : '';\n\n        setValue(newValue);\n        setFilter(newValue);\n    };\n\n    const filteredOptions = cards.filter((option) => matchOption(option, filter));\n\n    return (\n        <InputAutocompleteMobile\n            size='m'\n            block={true}\n            value={value}\n            filter={filter}\n            options={filteredOptions}\n            label='Счёт'\n            placeholder='Маскированный ввод счёта'\n            onChange={handleChange}\n            onClearFilter={() => setFilter('')}\n            bottomSheetProps={{\n                transitionProps: {\n                    onEnter: () => setFilter(value),\n                },\n            }}\n            Option={CardOption}\n            Input={MaskedInput}\n            bottomSheetHeaderAddonsProps={{ mask, onChange: handleFilter }}\n        />\n    );\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"морфология",children:"Морфология"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Компонент является оберткой над ",(0,jsx_runtime.jsx)(_components.a,{href:"?path=/docs/formcontrol--docs",children:"FormControl"}),",\nпоэтому наследует все доступные для него настройки.\nСписок это кастомизируемый ",(0,jsx_runtime.jsx)(_components.a,{href:"?path=/docs/popover--docs",children:"Popover"}),"\nв десктопной версии и ",(0,jsx_runtime.jsx)(_components.a,{href:"?path=/docs/bottomsheet--docs",children:"Bottomsheet"}),"\nили ",(0,jsx_runtime.jsx)(_components.a,{href:"?path=/docs/modal--docs",children:"Modal"}),"\nв мобильной."]})]})}var description=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)},responsive=__webpack_require__("./packages/input-autocomplete/src/responsive.ts"),Component_mobile=__webpack_require__("./packages/input-autocomplete/src/Component.mobile.tsx");function development_createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(_components.h2,{id:"подключение",children:"Подключение"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"import { InputAutocomplete } from '@alfalab/core-components/input-autocomplete';\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"свойства",children:"Свойства"}),"\n",(0,jsx_runtime.jsx)(dist.$4,{components:{InputAutocomplete:responsive.X,InputAutocompleteMobile:Component_mobile.I}})]})}var development=function development_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(development_createMdxContent,props)})):development_createMdxContent(props)},CHANGELOGraw_namespaceObject='# Change Log\n\n## 9.4.6\n\n### Patch Changes\n\n### [#766](https://github.com/core-ds/core-components/pull/766)\n\n-   Удален скрипт отправки статистики (send-stats)\n\n-   Обновлены зависимости\n    -   button@8.5.1\n    -   form-control@9.0.6\n    -   input@11.1.18\n    -   select@14.3.4\n\n## 9.4.5\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   button@8.5.0\n    -   input@11.1.17\n    -   select@14.3.3\n\n## 9.4.4\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@14.3.2\n\n## 9.4.3\n\n### Patch Changes\n\n### [#736](https://github.com/core-ds/core-components/pull/736)\n\n-   Добавлена возможность переопределять props в компоненте InputAutocompleteModalMobile\n\n## 9.4.2\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@14.3.1\n\n## 9.4.1\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@14.3.0\n\n## 9.4.0\n\n### Minor Changes\n\n### [#678](https://github.com/core-ds/core-components/pull/678)\n\n-   Добавлен компонент InputAutocompleteModalMobile\n\n### [#673](https://github.com/core-ds/core-components/pull/673)\n\n-   В мобильных модальных компонентах кнопка подтверждения теперь находится справа\n\n### Patch Changes\n\n### [#676](https://github.com/core-ds/core-components/pull/676)\n\n-   Обновлена зависимость @alfalab/hooks\n\n-   Обновлены зависимости\n    -   button@8.4.0\n    -   select@14.2.0\n    -   input@11.1.16\n\n## 9.3.26\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   input@11.1.15\n    -   select@14.1.2\n\n## 9.3.25\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   button@8.3.0\n    -   input@11.1.14\n    -   select@14.1.1\n\n## 9.3.24\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   button@8.2.0\n    -   select@14.1.0\n    -   input@11.1.13\n\n## 9.3.23\n\n### Patch Changes\n\n### [#646](https://github.com/core-ds/core-components/pull/646)\n\n-   Исправлена ошибка с типами в responsive компоненте\n\n## 9.3.22\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@14.0.4\n\n## 9.3.21\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   button@8.1.0\n    -   input@11.1.12\n    -   select@14.0.3\n\n## 9.3.20\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@14.0.2\n    -   input@11.1.11\n\n## 9.3.19\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   form-control@9.0.5\n    -   input@11.1.10\n    -   select@14.0.1\n\n## 9.3.18\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@14.0.0\n\n## 9.3.17\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@13.2.20\n\n## 9.3.16\n\n### Patch Changes\n\n### [#588](https://github.com/core-ds/core-components/pull/588)\n\n-   Добавлен \\_\\_esModule в cjs экспорт\n\n-   Обновлены зависимости\n    -   button@8.0.0\n    -   form-control@9.0.4\n    -   input@11.1.9\n    -   select@13.2.19\n\n## 9.3.15\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@13.2.18\n\n## 9.3.14\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@13.2.17\n\n## 9.3.13\n\n### Patch Changes\n\n### [#569](https://github.com/core-ds/core-components/pull/569)\n\n-   Исправлены типы в InputAutocompleteResponsive\n\n-   Обновлены зависимости\n    -   select@13.2.16\n\n## 9.3.12\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@13.2.15\n\n## 9.3.11\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   button@7.1.1\n    -   select@13.2.14\n    -   input@11.1.8\n\n## 9.3.10\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@13.2.13\n\n## 9.3.9\n\n### Patch Changes\n\n### [#526](https://github.com/core-ds/core-components/pull/526)\n\n-   В зависимости добавлена библиотека tslib\n\n### [#522](https://github.com/core-ds/core-components/pull/522)\n\n-   Исправлена TS ошибка "ref does not exist on type"\n\n-   Обновлены зависимости\n    -   select@13.2.12\n    -   button@7.1.0\n    -   form-control@9.0.3\n    -   input@11.1.7\n\n## 9.3.8\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@13.2.11\n    -   button@7.0.5\n    -   input@11.1.6\n\n## 9.3.7\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   button@7.0.4\n    -   input@11.1.5\n    -   select@13.2.10\n\n## 9.3.6\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@13.2.9\n\n## 9.3.5\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@13.2.8\n\n## 9.3.4\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@13.2.7\n    -   button@7.0.3\n    -   input@11.1.4\n\n## 9.3.3\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@13.2.6\n\n## 9.3.2\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   input@11.1.3\n    -   select@13.2.5\n\n## 9.3.1\n\n### Patch Changes\n\n### [#422](https://github.com/core-ds/core-components/pull/422)\n\n-   "export" типов заменен на "export type"\n\n-   Обновлены зависимости\n    -   input@11.1.2\n    -   select@13.2.4\n\n## 9.3.0\n\n### Minor Changes\n\n### [#334](https://github.com/core-ds/core-components/pull/334)\n\n-   В компонентах DateRangeInput, DateTimeInput и CalendarInput добавлены mobile и desktop версии компонентов. Название компонентов было изменено по схеме Component → ComponentDesktop\n-   В компонентах Calendar и InputAutocomplete добавлена responsive версия компонентов. Название компонентов было изменено по схеме Component → ComponentResponsive<br />\n-   В компонентах PickerButton и Tooltip добавлен новый пропс breakpoint. Название компонентов было изменено по схеме Component -→ ComponentResponsive для PickerButton и Component → ComponentDesktop для Tooltip<br />\n-   В компонентах Confirmation и SidePanel добавлен новый пропс breakpoint<br />\n\n### Patch Changes\n\n### [#418](https://github.com/core-ds/core-components/pull/418)\n\n-   Исправлена проблема с default-импортом в cjs форматах\n\n-   Обновлены зависимости\n    -   button@7.0.2\n    -   form-control@9.0.2\n    -   input@11.1.1\n    -   select@13.2.3\n\n## 9.2.0\n\n### Minor Changes\n\n### [#375](https://github.com/core-ds/core-components/pull/375)\n\n-   Добавлен опциональный prop `multiple` в компонент InputAutocompleteMobile. Теперь есть возможность выбрать несколько значений\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@13.2.2\n\n## 9.1.4\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@13.2.1\n\n## 9.1.3\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@13.2.0\n\n## 9.1.2\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@13.1.2\n\n## 9.1.1\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@13.1.1\n\n## 9.1.0\n\n### Minor Changes\n\n### [#342](https://github.com/core-ds/core-components/pull/342)\n\n-   В компонентах Gallery и Input иконки подгружаемые с \'alfabank.servicecdn.ru\' были заменены на иконки из icons-glyph\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@13.1.0\n    -   input@11.1.0\n\n## 9.0.3\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   form-control@9.0.1\n    -   button@7.0.1\n    -   select@13.0.3\n    -   input@11.0.2\n\n## 9.0.2\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@13.0.2\n\n## 9.0.1\n\n### Patch Changes\n\n### [#320](https://github.com/core-ds/core-components/pull/320)\n\n-   Скрыт нативный спиннер (стрелочки) у компонента Input при type=\'number\'\n\n-   Обновлены зависимости\n    -   input@11.0.1\n    -   select@13.0.1\n\n## 9.0.0\n\n### Major Changes\n\n### [#286](https://github.com/core-ds/core-components/pull/286)\n\n-   Новые стили инпутов в теме default (все компоненты на основе FormControl, включая Select)\n-   Исправлен отступ до hint в SliderInput (уменьшился на 2px)<br />\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   button@7.0.0\n    -   input@11.0.0\n    -   form-control@9.0.0\n    -   select@13.0.0\n\n## 8.2.7\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   input@10.2.5\n    -   select@12.4.7\n\n## 8.2.6\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   select@12.4.6\n\n## 8.2.5\n\n### Patch Changes\n\n-   Updated dependencies [[#282](https://github.com/core-ds/core-components/pull/282)]\n    -   @alfalab/core-components-button@6.1.2\n    -   @alfalab/core-components-form-control@8.3.1\n    -   @alfalab/core-components-input@10.2.4\n    -   @alfalab/core-components-select@12.4.5\n\n## 8.2.4\n\n### Patch Changes\n\n-   Updated dependencies [[#208](https://github.com/core-ds/core-components/pull/208)]\n    -   @alfalab/core-components-input@10.2.3\n    -   @alfalab/core-components-select@12.4.4\n\n## 8.2.3\n\n### Patch Changes\n\n-   Updated dependencies [[#189](https://github.com/core-ds/core-components/pull/189)]\n    -   @alfalab/core-components-input@10.2.2\n    -   @alfalab/core-components-select@12.4.3\n\n## 8.2.2\n\n### Patch Changes\n\n-   @alfalab/core-components-select@12.4.2\n\nAll notable changes to this project will be documented in this file.\nSee [Conventional Commits](https://conventionalcommits.org) for commit guidelines.\n\n## [8.2.1](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@8.2.0...@alfalab/core-components-input-autocomplete@8.2.1) (2022-09-13)\n\n### Bug Fixes\n\n-   **base-modal:** fixed scroll to top issues ([#224](https://github.com/core-ds/core-components/issues/224)) ([2e3fdd2](https://github.com/core-ds/core-components/commit/2e3fdd22a4af2b043c428a3ad800b82ac4166d5d))\n\n# [8.2.0](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@8.1.3...@alfalab/core-components-input-autocomplete@8.2.0) (2022-09-12)\n\n### Bug Fixes\n\n-   **input-autocomplete:** add prop for custom input ([#223](https://github.com/core-ds/core-components/issues/223)) ([632cb7f](https://github.com/core-ds/core-components/commit/632cb7fb572366cd42fad1a8741e99098cce1f12))\n\n### Features\n\n-   **form-control:** new input/select label view (outer) ([#177](https://github.com/core-ds/core-components/issues/177)) ([66beb15](https://github.com/core-ds/core-components/commit/66beb15756de97e17a4d1dd4221fa7f401ee8539))\n\n## [8.1.3](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@8.1.2...@alfalab/core-components-input-autocomplete@8.1.3) (2022-09-05)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [8.1.2](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@8.1.1...@alfalab/core-components-input-autocomplete@8.1.2) (2022-09-02)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [8.1.1](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@8.1.0...@alfalab/core-components-input-autocomplete@8.1.1) (2022-09-02)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n# [8.1.0](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@8.0.4...@alfalab/core-components-input-autocomplete@8.1.0) (2022-09-01)\n\n### Features\n\n-   testing-library versions update ([#216](https://github.com/core-ds/core-components/issues/216)) ([33b6225](https://github.com/core-ds/core-components/commit/33b62259a1332f535f367502590ea37e7ad051d4))\n\n## [8.0.4](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@8.0.3...@alfalab/core-components-input-autocomplete@8.0.4) (2022-08-31)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [8.0.3](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@8.0.2...@alfalab/core-components-input-autocomplete@8.0.3) (2022-08-29)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [8.0.2](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@8.0.1...@alfalab/core-components-input-autocomplete@8.0.2) (2022-08-26)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [8.0.1](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@8.0.0...@alfalab/core-components-input-autocomplete@8.0.1) (2022-08-19)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n# [8.0.0](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.6.1...@alfalab/core-components-input-autocomplete@8.0.0) (2022-08-17)\n\n### Features\n\n-   removed dist directory in published packages ([#200](https://github.com/core-ds/core-components/issues/200)) ([8af8fee](https://github.com/core-ds/core-components/commit/8af8fee53ca0bd19fa2d1ca1422e0df23096e2c8))\n\n### BREAKING CHANGES\n\n-   Изменена директория расположения индексных файлов в опубликованных пакетах (удалена\n    директория dist)\n\nCo-authored-by: Vladimir Gevak <VGevak@alfabank.ru>\n\n## [7.6.1](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.6.0...@alfalab/core-components-input-autocomplete@7.6.1) (2022-08-17)\n\n### Bug Fixes\n\n-   returned dist directory ([#199](https://github.com/core-ds/core-components/issues/199)) ([fabc15e](https://github.com/core-ds/core-components/commit/fabc15effa1457ca65ec7238206f1b1fc2a2a613))\n\n# [7.6.0](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.5.2...@alfalab/core-components-input-autocomplete@7.6.0) (2022-08-12)\n\n### Features\n\n-   **BottonSheet:** improved bottomSheet component ([#185](https://github.com/core-ds/core-components/issues/185)) ([ba5fa06](https://github.com/core-ds/core-components/commit/ba5fa06d5f342ac5e04adadb72fd21e1f699c00a))\n\n## [7.5.2](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.5.1...@alfalab/core-components-input-autocomplete@7.5.2) (2022-08-11)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.5.1](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.5.0...@alfalab/core-components-input-autocomplete@7.5.1) (2022-08-09)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n# [7.5.0](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.4.9...@alfalab/core-components-input-autocomplete@7.5.0) (2022-08-04)\n\n### Features\n\n-   react 18 support ([#159](https://github.com/core-ds/core-components/issues/159)) ([2e6693c](https://github.com/core-ds/core-components/commit/2e6693c62f534e333aadb7d3fff4ffd78ac84c63))\n\n## [7.4.9](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.4.8...@alfalab/core-components-input-autocomplete@7.4.9) (2022-07-25)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.4.8](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.4.7...@alfalab/core-components-input-autocomplete@7.4.8) (2022-07-25)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.4.7](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.4.6...@alfalab/core-components-input-autocomplete@7.4.7) (2022-07-18)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.4.6](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.4.5...@alfalab/core-components-input-autocomplete@7.4.6) (2022-07-18)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.4.5](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.4.4...@alfalab/core-components-input-autocomplete@7.4.5) (2022-07-15)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.4.4](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.4.3...@alfalab/core-components-input-autocomplete@7.4.4) (2022-07-15)\n\n### Bug Fixes\n\n-   bump packages version ([#153](https://github.com/core-ds/core-components/issues/153)) ([fd3e082](https://github.com/core-ds/core-components/commit/fd3e08205672129cdce04e1000c673f2cd9c10da))\n\n## [7.4.3](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.4.2...@alfalab/core-components-input-autocomplete@7.4.3) (2022-07-14)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.4.2](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.4.1...@alfalab/core-components-input-autocomplete@7.4.2) (2022-07-14)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.4.1](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.4.0...@alfalab/core-components-input-autocomplete@7.4.1) (2022-07-11)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n# [7.4.0](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.3.5...@alfalab/core-components-input-autocomplete@7.4.0) (2022-07-01)\n\n### Features\n\n-   **select:** add select-modal-mobile ([#47](https://github.com/core-ds/core-components/issues/47)) ([5ec4268](https://github.com/core-ds/core-components/commit/5ec42688065bb279d721541ec21bde242675ab8a))\n\n## [7.3.5](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.3.4...@alfalab/core-components-input-autocomplete@7.3.5) (2022-06-30)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.3.4](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.3.3...@alfalab/core-components-input-autocomplete@7.3.4) (2022-06-29)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.3.3](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.3.2...@alfalab/core-components-input-autocomplete@7.3.3) (2022-06-28)\n\n### Bug Fixes\n\n-   **input-autocomplete:** fixed onChange type ([#110](https://github.com/core-ds/core-components/issues/110)) ([c994661](https://github.com/core-ds/core-components/commit/c9946615af9aecb3f1974c887bdd6686708ac18e))\n\n## [7.3.2](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.3.1...@alfalab/core-components-input-autocomplete@7.3.2) (2022-06-24)\n\n### Bug Fixes\n\n-   **icon-button:** fix disabled colors ([#104](https://github.com/core-ds/core-components/issues/104)) ([3f03849](https://github.com/core-ds/core-components/commit/3f038495bb63f72cd81ceeedbe55b52119581d57))\n\n## [7.3.1](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.3.0...@alfalab/core-components-input-autocomplete@7.3.1) (2022-06-23)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n# [7.3.0](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.2.7...@alfalab/core-components-input-autocomplete@7.3.0) (2022-06-20)\n\n### Features\n\n-   **input-autocomplete:** add new component InputAutocompleteMobile ([#96](https://github.com/core-ds/core-components/issues/96)) ([a0e9f95](https://github.com/core-ds/core-components/commit/a0e9f95edbfcd6722e99647d75a262805e81a4a7))\n\n## [7.2.7](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.2.6...@alfalab/core-components-input-autocomplete@7.2.7) (2022-06-20)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.2.6](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.2.5...@alfalab/core-components-input-autocomplete@7.2.6) (2022-06-16)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.2.5](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.2.4...@alfalab/core-components-input-autocomplete@7.2.5) (2022-06-08)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.2.4](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.2.3...@alfalab/core-components-input-autocomplete@7.2.4) (2022-06-03)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.1.6](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.1.5...@alfalab/core-components-input-autocomplete@7.1.6) (2022-03-29)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.1.5](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.1.4...@alfalab/core-components-input-autocomplete@7.1.5) (2022-03-24)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.1.4](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.1.3...@alfalab/core-components-input-autocomplete@7.1.4) (2022-03-04)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.1.3](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.1.2...@alfalab/core-components-input-autocomplete@7.1.3) (2022-03-04)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.1.2](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.1.1...@alfalab/core-components-input-autocomplete@7.1.2) (2022-03-03)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.1.1](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.1.0...@alfalab/core-components-input-autocomplete@7.1.1) (2022-03-01)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n# [7.1.0](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.32...@alfalab/core-components-input-autocomplete@7.1.0) (2022-02-21)\n\n### Features\n\n-   Исправить импорты в сторях. ([#998](https://github.com/core-ds/core-components/issues/998)) ([e6a654a](https://github.com/core-ds/core-components/commit/e6a654a0599451c7d149484cb61d8067eed083b7))\n\n## [7.0.32](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.31...@alfalab/core-components-input-autocomplete@7.0.32) (2022-02-17)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.31](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.30...@alfalab/core-components-input-autocomplete@7.0.31) (2022-02-15)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.30](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.29...@alfalab/core-components-input-autocomplete@7.0.30) (2022-02-09)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.29](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.28...@alfalab/core-components-input-autocomplete@7.0.29) (2022-02-03)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.28](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.27...@alfalab/core-components-input-autocomplete@7.0.28) (2022-02-02)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.27](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.26...@alfalab/core-components-input-autocomplete@7.0.27) (2022-01-27)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.26](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.25...@alfalab/core-components-input-autocomplete@7.0.26) (2021-12-29)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.25](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.24...@alfalab/core-components-input-autocomplete@7.0.25) (2021-12-14)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.24](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.23...@alfalab/core-components-input-autocomplete@7.0.24) (2021-12-08)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.23](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.22...@alfalab/core-components-input-autocomplete@7.0.23) (2021-12-08)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.22](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.21...@alfalab/core-components-input-autocomplete@7.0.22) (2021-12-08)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.21](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.20...@alfalab/core-components-input-autocomplete@7.0.21) (2021-12-01)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.20](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.19...@alfalab/core-components-input-autocomplete@7.0.20) (2021-11-26)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.19](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.18...@alfalab/core-components-input-autocomplete@7.0.19) (2021-11-16)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.18](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.17...@alfalab/core-components-input-autocomplete@7.0.18) (2021-11-08)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.17](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.16...@alfalab/core-components-input-autocomplete@7.0.17) (2021-10-15)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.16](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.15...@alfalab/core-components-input-autocomplete@7.0.16) (2021-10-15)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.15](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.14...@alfalab/core-components-input-autocomplete@7.0.15) (2021-10-11)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.14](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.13...@alfalab/core-components-input-autocomplete@7.0.14) (2021-09-27)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.13](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.12...@alfalab/core-components-input-autocomplete@7.0.13) (2021-09-14)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.12](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.11...@alfalab/core-components-input-autocomplete@7.0.12) (2021-09-08)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.11](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.10...@alfalab/core-components-input-autocomplete@7.0.11) (2021-09-06)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.10](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.9...@alfalab/core-components-input-autocomplete@7.0.10) (2021-08-27)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.9](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.8...@alfalab/core-components-input-autocomplete@7.0.9) (2021-08-23)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.8](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.7...@alfalab/core-components-input-autocomplete@7.0.8) (2021-08-23)\n\n### Bug Fixes\n\n-   **input:** smart error icon ([#746](https://github.com/core-ds/core-components/issues/746)) ([f1950d6](https://github.com/core-ds/core-components/commit/f1950d6d516d17d993f0865c10390b6301bb2707)), closes [#782](https://github.com/core-ds/core-components/issues/782)\n\n## [7.0.7](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.6...@alfalab/core-components-input-autocomplete@7.0.7) (2021-08-13)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.6](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.5...@alfalab/core-components-input-autocomplete@7.0.6) (2021-08-11)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.5](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.4...@alfalab/core-components-input-autocomplete@7.0.5) (2021-08-04)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.4](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.3...@alfalab/core-components-input-autocomplete@7.0.4) (2021-08-03)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.3](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.2...@alfalab/core-components-input-autocomplete@7.0.3) (2021-07-23)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.2](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.1...@alfalab/core-components-input-autocomplete@7.0.2) (2021-07-19)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [7.0.1](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@7.0.0...@alfalab/core-components-input-autocomplete@7.0.1) (2021-07-09)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n# [7.0.0](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.1.8...@alfalab/core-components-input-autocomplete@7.0.0) (2021-07-08)\n\n### Features\n\n-   upgrade storybook ([#696](https://github.com/core-ds/core-components/issues/696))\n\n## [6.1.8](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.1.7...@alfalab/core-components-input-autocomplete@6.1.8) (2021-06-28)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.1.7](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.1.6...@alfalab/core-components-input-autocomplete@6.1.7) (2021-06-22)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.1.6](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.1.5...@alfalab/core-components-input-autocomplete@6.1.6) (2021-06-08)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.1.5](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.1.4...@alfalab/core-components-input-autocomplete@6.1.5) (2021-06-04)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.1.4](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.1.3...@alfalab/core-components-input-autocomplete@6.1.4) (2021-05-31)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.1.3](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.1.2...@alfalab/core-components-input-autocomplete@6.1.3) (2021-05-25)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.1.2](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.1.1...@alfalab/core-components-input-autocomplete@6.1.2) (2021-05-25)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.1.1](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.1.0...@alfalab/core-components-input-autocomplete@6.1.1) (2021-05-18)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n# [6.1.0](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.0.19...@alfalab/core-components-input-autocomplete@6.1.0) (2021-05-07)\n\n### Features\n\n-   **intl-phone-input:** add autocomplete ([#630](https://github.com/core-ds/core-components/issues/630)) ([18b5714](https://github.com/core-ds/core-components/commit/18b57143ede6bf5e9fcd7d460b4859c6d86c026b))\n\n## [6.0.19](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.0.18...@alfalab/core-components-input-autocomplete@6.0.19) (2021-04-28)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.0.18](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.0.17...@alfalab/core-components-input-autocomplete@6.0.18) (2021-04-26)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.0.17](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.0.16...@alfalab/core-components-input-autocomplete@6.0.17) (2021-04-26)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.0.16](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.0.15...@alfalab/core-components-input-autocomplete@6.0.16) (2021-04-26)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.0.15](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.0.14...@alfalab/core-components-input-autocomplete@6.0.15) (2021-04-09)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.0.14](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.0.13...@alfalab/core-components-input-autocomplete@6.0.14) (2021-04-01)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.0.13](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.0.12...@alfalab/core-components-input-autocomplete@6.0.13) (2021-03-30)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.0.12](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.0.11...@alfalab/core-components-input-autocomplete@6.0.12) (2021-03-24)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.0.11](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.0.10...@alfalab/core-components-input-autocomplete@6.0.11) (2021-03-24)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.0.10](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.0.9...@alfalab/core-components-input-autocomplete@6.0.10) (2021-03-19)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.0.9](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.0.7...@alfalab/core-components-input-autocomplete@6.0.9) (2021-03-18)\n\n### Bug Fixes\n\n-   one more sborka bug ([#579](https://github.com/core-ds/core-components/issues/579)) ([9fbe0be](https://github.com/core-ds/core-components/commit/9fbe0beca56ec5971de78b3f6cda25305b260efc))\n\n## [6.0.7](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.0.5...@alfalab/core-components-input-autocomplete@6.0.7) (2021-03-16)\n\n### Bug Fixes\n\n-   border-radius in packages ([781749e](https://github.com/core-ds/core-components/commit/781749ef38aefd5a6707ac56d2e297dce9f3e073))\n\n## [6.0.5](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.0.4...@alfalab/core-components-input-autocomplete@6.0.5) (2021-03-15)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.0.4](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.0.3...@alfalab/core-components-input-autocomplete@6.0.4) (2021-03-14)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.0.3](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.0.2...@alfalab/core-components-input-autocomplete@6.0.3) (2021-03-11)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.0.2](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.0.1...@alfalab/core-components-input-autocomplete@6.0.2) (2021-03-10)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [6.0.1](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@6.0.0...@alfalab/core-components-input-autocomplete@6.0.1) (2021-03-05)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n# [6.0.0](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@5.2.9...@alfalab/core-components-input-autocomplete@6.0.0) (2021-03-04)\n\n### Features\n\n-   **input-autocomplete:** changed size L (72 → 64), added size XL (72) ([858359a](https://github.com/core-ds/core-components/commit/858359a0dab558113fe1d225d839eb97acd5c917))\n\n### BREAKING CHANGES\n\n-   **input-autocomplete:** size L changed to size XL\n\n## [5.2.9](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@5.2.8...@alfalab/core-components-input-autocomplete@5.2.9) (2021-03-03)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [5.2.8](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@5.2.7...@alfalab/core-components-input-autocomplete@5.2.8) (2021-03-03)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [5.2.7](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@5.2.6...@alfalab/core-components-input-autocomplete@5.2.7) (2021-03-03)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [5.2.6](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@5.2.5...@alfalab/core-components-input-autocomplete@5.2.6) (2021-02-20)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [5.2.5](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@5.2.4...@alfalab/core-components-input-autocomplete@5.2.5) (2021-02-20)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [5.2.4](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@5.2.3...@alfalab/core-components-input-autocomplete@5.2.4) (2021-02-19)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [5.2.3](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@5.2.2...@alfalab/core-components-input-autocomplete@5.2.3) (2021-02-19)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [5.2.2](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@5.2.1...@alfalab/core-components-input-autocomplete@5.2.2) (2021-02-18)\n\n**Note:** Version bump only for package @alfalab/core-components-input-autocomplete\n\n## [5.2.1](https://github.com/core-ds/core-components/compare/@alfalab/core-components-input-autocomplete@5.2.0...@alfalab/core-components-input-autocomplete@5.2.1) (2021-02-18)\n\n### Bug Fixes\n\n-   update versions ([#525](https://github.com/core-ds/core-components/issues/525)) ([31b2e4c](https://github.com/core-ds/core-components/commit/31b2e4c92fde6e2b63a3391a4e053cd328e93e70))\n';const options=[{key:"Neptunium"},{key:"Plutonium"},{key:"Americium"},{key:"Curium"},{key:"Berkelium"},{key:"Californium"},{key:"Einsteinium"},{key:"Fermium"},{key:"Mendelevium"},{key:"Nobelium"},{key:"Lawrencium"},{key:"Rutherfordium"},{key:"Dubnium"},{key:"Seaborgium"},{key:"Bohrium"}],matchOption=(option,inputValue)=>option.key.toLowerCase().includes((inputValue||"").toLowerCase());function Component_stories_createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Components/InputAutocomplete",component:input_autocomplete_modern.InputAutocomplete,id:"InputAutocomplete"}),"\n","\n",(0,jsx_runtime.jsx)(dist.oG,{name:"InputAutocomplete",children:react.createElement((()=>{const[value,setValue]=react.useState(""),filteredOptions=options.filter((option=>matchOption(option,value)));return(0,jsx_runtime.jsx)(input_autocomplete_modern.InputAutocomplete,{options:filteredOptions,selected:(0,addon_knobs_dist.boolean)("prevent select",!0)?[]:void 0,block:(0,addon_knobs_dist.boolean)("block",!1),size:(0,addon_knobs_dist.select)("size",["s","m","l","xl"],"s"),disabled:(0,addon_knobs_dist.boolean)("disabled",!1),error:(0,addon_knobs_dist.text)("error",""),success:(0,addon_knobs_dist.boolean)("success",!1),hint:(0,addon_knobs_dist.text)("hint",""),allowUnselect:(0,addon_knobs_dist.boolean)("allowUnselect",!0),closeOnSelect:(0,addon_knobs_dist.boolean)("closeOnSelect",!1),Arrow:(0,addon_knobs_dist.boolean)("Arrow",!1)?modern.Arrow:void 0,circularNavigation:(0,addon_knobs_dist.boolean)("circularNavigation",!1),placeholder:(0,addon_knobs_dist.text)("placeholder","Введите элемент"),label:(0,addon_knobs_dist.text)("label","Элемент"),labelView:(0,addon_knobs_dist.select)("labelView",["inner","outer"],"inner"),onChange:({selected:selected})=>{setValue(selected?selected.key:"")},onInput:event=>{setValue(event.target.value)},value:value})}))}),"\n",(0,jsx_runtime.jsx)(dist.oG,{name:"InputAutocompleteMobile",children:react.createElement((()=>{const[value,setValue]=react.useState(""),[filter,setFilter]=react.useState(""),filteredOptions=[{key:"1",content:"Neptunium"},{key:"2",content:"Plutonium"},{key:"3",content:"Americium"},{key:"4",content:"Curium"},{key:"5",content:"Berkelium"},{key:"6",content:"Californium"},{key:"7",content:"Einsteinium"},{key:"8",content:"Fermium"},{key:"9",content:"Hydrogenium"},{key:"10",content:"Helium"},{key:"11",content:"Lithium"},{key:"12",content:"Beryllium"},{key:"13",content:"Borum"},{key:"14",content:"Carboneum"},{key:"15",content:"Nitrogenium"},{key:"16",content:"Oxygenium"}].filter((option=>((option,inputValue)=>option.content.toLowerCase().includes((inputValue||"").toLowerCase()))(option,filter)));return(0,jsx_runtime.jsx)(mobile.InputAutocompleteMobile,{dataTestId:"asfa fs asf afa",block:(0,addon_knobs_dist.boolean)("block",!1),size:(0,addon_knobs_dist.select)("size",["s","m","l","xl"],"s"),disabled:(0,addon_knobs_dist.boolean)("disabled",!1),error:(0,addon_knobs_dist.text)("error",""),hint:(0,addon_knobs_dist.text)("hint",""),closeOnSelect:(0,addon_knobs_dist.boolean)("closeOnSelect",!0),value:value,filter:filter,options:filteredOptions,placeholder:(0,addon_knobs_dist.text)("placeholder","Выберите элемент"),label:(0,addon_knobs_dist.text)("label","Элемент"),labelView:(0,addon_knobs_dist.select)("labelView",["inner","outer"],"inner"),onChange:payload=>{const newValue=payload?(0,modern.isOptionShape)(payload.selected)?payload.selected.content:payload:"";setValue(newValue),setFilter(newValue)},onFilter:event=>{setFilter(event.target.value)},onClearFilter:()=>setFilter(""),continueButtonProps:{dataTestId:"continue"},cancelButtonProps:{dataTestId:"cancel"},bottomSheetProps:{transitionProps:{onEnter:()=>setFilter(value)}}})}))}),"\n",(0,jsx_runtime.jsx)(dist.oG,{name:"InputAutocompleteModalMobile",children:react.createElement((()=>{const[value,setValue]=react.useState(""),[filter,setFilter]=react.useState(""),filteredOptions=[{key:"1",content:"Neptunium"},{key:"2",content:"Plutonium"},{key:"3",content:"Americium"},{key:"4",content:"Curium"},{key:"5",content:"Berkelium"},{key:"6",content:"Californium"},{key:"7",content:"Einsteinium"},{key:"8",content:"Fermium"},{key:"9",content:"Hydrogenium"},{key:"10",content:"Helium"},{key:"11",content:"Lithium"},{key:"12",content:"Beryllium"},{key:"13",content:"Borum"},{key:"14",content:"Carboneum"},{key:"15",content:"Nitrogenium"},{key:"16",content:"Oxygenium"}].filter((option=>((option,inputValue)=>option.content.toLowerCase().includes((inputValue||"").toLowerCase()))(option,filter)));return(0,jsx_runtime.jsx)(mobile.InputAutocompleteModalMobile,{dataTestId:"iamm",block:(0,addon_knobs_dist.boolean)("block",!1),size:(0,addon_knobs_dist.select)("size",["s","m","l","xl"],"s"),disabled:(0,addon_knobs_dist.boolean)("disabled",!1),error:(0,addon_knobs_dist.text)("error",""),hint:(0,addon_knobs_dist.text)("hint",""),closeOnSelect:(0,addon_knobs_dist.boolean)("closeOnSelect",!0),value:value,filter:filter,options:filteredOptions,placeholder:(0,addon_knobs_dist.text)("placeholder","Выберите элемент"),label:(0,addon_knobs_dist.text)("label","Элемент"),labelView:(0,addon_knobs_dist.select)("labelView",["inner","outer"],"inner"),onChange:payload=>{const newValue=payload?(0,modern.isOptionShape)(payload.selected)?payload.selected.content:payload:"";setValue(newValue),setFilter(newValue)},onFilter:event=>{setFilter(event.target.value)},onClearFilter:()=>setFilter(""),continueButtonProps:{dataTestId:"continue"},cancelButtonProps:{dataTestId:"cancel"}})}))}),"\n","\n",(0,jsx_runtime.jsx)(blocks.yt,{name:"InputAutocomplete",version:package_namespaceObject.i8,package:"@alfalab/core-components/input-autocomplete",design:"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?node-id=58839%3A63017",children:"Дает возможность выбрать значение из списка доступных, либо ввести своё с помощью клавиатуры."}),"\n",(0,jsx_runtime.jsx)(blocks.mQ,{description:(0,jsx_runtime.jsx)(description,{}),changelog:(0,jsx_runtime.jsx)(dist.UG,{children:CHANGELOGraw_namespaceObject}),development:(0,jsx_runtime.jsx)(development,{})})]})}const inputAutocomplete=()=>react.createElement((()=>{const[value,setValue]=react.useState(""),filteredOptions=options.filter((option=>matchOption(option,value)));return(0,jsx_runtime.jsx)(input_autocomplete_modern.InputAutocomplete,{options:filteredOptions,selected:(0,addon_knobs_dist.boolean)("prevent select",!0)?[]:void 0,block:(0,addon_knobs_dist.boolean)("block",!1),size:(0,addon_knobs_dist.select)("size",["s","m","l","xl"],"s"),disabled:(0,addon_knobs_dist.boolean)("disabled",!1),error:(0,addon_knobs_dist.text)("error",""),success:(0,addon_knobs_dist.boolean)("success",!1),hint:(0,addon_knobs_dist.text)("hint",""),allowUnselect:(0,addon_knobs_dist.boolean)("allowUnselect",!0),closeOnSelect:(0,addon_knobs_dist.boolean)("closeOnSelect",!1),Arrow:(0,addon_knobs_dist.boolean)("Arrow",!1)?modern.Arrow:void 0,circularNavigation:(0,addon_knobs_dist.boolean)("circularNavigation",!1),placeholder:(0,addon_knobs_dist.text)("placeholder","Введите элемент"),label:(0,addon_knobs_dist.text)("label","Элемент"),labelView:(0,addon_knobs_dist.select)("labelView",["inner","outer"],"inner"),onChange:({selected:selected})=>{setValue(selected?selected.key:"")},onInput:event=>{setValue(event.target.value)},value:value})}));inputAutocomplete.storyName="InputAutocomplete",inputAutocomplete.parameters={storySource:{source:'React.createElement(() => {\n  const [value, setValue] = React.useState("");\n  const handleInput = event => {\n    setValue(event.target.value);\n  };\n  const handleChange = ({\n    selected\n  }) => {\n    setValue(selected ? selected.key : "");\n  };\n  const filteredOptions = options.filter(option => matchOption(option, value));\n  return <InputAutocomplete options={filteredOptions} selected={boolean("prevent select", true) ? [] : undefined} block={boolean("block", false)} size={select("size", ["s", "m", "l", "xl"], "s")} disabled={boolean("disabled", false)} error={text("error", "")} success={boolean("success", false)} hint={text("hint", "")} allowUnselect={boolean("allowUnselect", true)} closeOnSelect={boolean("closeOnSelect", false)} Arrow={boolean("Arrow", false) ? Arrow : undefined} circularNavigation={boolean("circularNavigation", false)} placeholder={text("placeholder", "\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442")} label={text("label", "\\u042D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442")} labelView={select("labelView", ["inner", "outer"], "inner")} onChange={handleChange} onInput={handleInput} value={value} />;\n})'}};const inputAutocompleteMobile=()=>react.createElement((()=>{const[value,setValue]=react.useState(""),[filter,setFilter]=react.useState(""),filteredOptions=[{key:"1",content:"Neptunium"},{key:"2",content:"Plutonium"},{key:"3",content:"Americium"},{key:"4",content:"Curium"},{key:"5",content:"Berkelium"},{key:"6",content:"Californium"},{key:"7",content:"Einsteinium"},{key:"8",content:"Fermium"},{key:"9",content:"Hydrogenium"},{key:"10",content:"Helium"},{key:"11",content:"Lithium"},{key:"12",content:"Beryllium"},{key:"13",content:"Borum"},{key:"14",content:"Carboneum"},{key:"15",content:"Nitrogenium"},{key:"16",content:"Oxygenium"}].filter((option=>((option,inputValue)=>option.content.toLowerCase().includes((inputValue||"").toLowerCase()))(option,filter)));return(0,jsx_runtime.jsx)(mobile.InputAutocompleteMobile,{dataTestId:"asfa fs asf afa",block:(0,addon_knobs_dist.boolean)("block",!1),size:(0,addon_knobs_dist.select)("size",["s","m","l","xl"],"s"),disabled:(0,addon_knobs_dist.boolean)("disabled",!1),error:(0,addon_knobs_dist.text)("error",""),hint:(0,addon_knobs_dist.text)("hint",""),closeOnSelect:(0,addon_knobs_dist.boolean)("closeOnSelect",!0),value:value,filter:filter,options:filteredOptions,placeholder:(0,addon_knobs_dist.text)("placeholder","Выберите элемент"),label:(0,addon_knobs_dist.text)("label","Элемент"),labelView:(0,addon_knobs_dist.select)("labelView",["inner","outer"],"inner"),onChange:payload=>{const newValue=payload?(0,modern.isOptionShape)(payload.selected)?payload.selected.content:payload:"";setValue(newValue),setFilter(newValue)},onFilter:event=>{setFilter(event.target.value)},onClearFilter:()=>setFilter(""),continueButtonProps:{dataTestId:"continue"},cancelButtonProps:{dataTestId:"cancel"},bottomSheetProps:{transitionProps:{onEnter:()=>setFilter(value)}}})}));inputAutocompleteMobile.storyName="InputAutocompleteMobile",inputAutocompleteMobile.parameters={storySource:{source:'React.createElement(() => {\n  const options = [{\n    key: "1",\n    content: "Neptunium"\n  }, {\n    key: "2",\n    content: "Plutonium"\n  }, {\n    key: "3",\n    content: "Americium"\n  }, {\n    key: "4",\n    content: "Curium"\n  }, {\n    key: "5",\n    content: "Berkelium"\n  }, {\n    key: "6",\n    content: "Californium"\n  }, {\n    key: "7",\n    content: "Einsteinium"\n  }, {\n    key: "8",\n    content: "Fermium"\n  }, {\n    key: "9",\n    content: "Hydrogenium"\n  }, {\n    key: "10",\n    content: "Helium"\n  }, {\n    key: "11",\n    content: "Lithium"\n  }, {\n    key: "12",\n    content: "Beryllium"\n  }, {\n    key: "13",\n    content: "Borum"\n  }, {\n    key: "14",\n    content: "Carboneum"\n  }, {\n    key: "15",\n    content: "Nitrogenium"\n  }, {\n    key: "16",\n    content: "Oxygenium"\n  }];\n  const matchOption = (option, inputValue) => option.content.toLowerCase().includes((inputValue || "").toLowerCase());\n  const [value, setValue] = React.useState("");\n  const [filter, setFilter] = React.useState("");\n  const handleFilter = event => {\n    setFilter(event.target.value);\n  };\n  const handleChange = payload => {\n    const newValue = payload ? isOptionShape(payload.selected) ? payload.selected.content : payload : "";\n    setValue(newValue);\n    setFilter(newValue);\n  };\n  const filteredOptions = options.filter(option => matchOption(option, filter));\n  return <InputAutocompleteMobile dataTestId={"asfa fs asf afa"} block={boolean("block", false)} size={select("size", ["s", "m", "l", "xl"], "s")} disabled={boolean("disabled", false)} error={text("error", "")} hint={text("hint", "")} closeOnSelect={boolean("closeOnSelect", true)} value={value} filter={filter} options={filteredOptions} placeholder={text("placeholder", "\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442")} label={text("label", "\\u042D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442")} labelView={select("labelView", ["inner", "outer"], "inner")} onChange={handleChange} onFilter={handleFilter} onClearFilter={() => setFilter("")} continueButtonProps={{\n    dataTestId: "continue"\n  }} cancelButtonProps={{\n    dataTestId: "cancel"\n  }} bottomSheetProps={{\n    transitionProps: {\n      onEnter: () => setFilter(value)\n    }\n  }} />;\n})'}};const inputAutocompleteModalMobile=()=>react.createElement((()=>{const[value,setValue]=react.useState(""),[filter,setFilter]=react.useState(""),filteredOptions=[{key:"1",content:"Neptunium"},{key:"2",content:"Plutonium"},{key:"3",content:"Americium"},{key:"4",content:"Curium"},{key:"5",content:"Berkelium"},{key:"6",content:"Californium"},{key:"7",content:"Einsteinium"},{key:"8",content:"Fermium"},{key:"9",content:"Hydrogenium"},{key:"10",content:"Helium"},{key:"11",content:"Lithium"},{key:"12",content:"Beryllium"},{key:"13",content:"Borum"},{key:"14",content:"Carboneum"},{key:"15",content:"Nitrogenium"},{key:"16",content:"Oxygenium"}].filter((option=>((option,inputValue)=>option.content.toLowerCase().includes((inputValue||"").toLowerCase()))(option,filter)));return(0,jsx_runtime.jsx)(mobile.InputAutocompleteModalMobile,{dataTestId:"iamm",block:(0,addon_knobs_dist.boolean)("block",!1),size:(0,addon_knobs_dist.select)("size",["s","m","l","xl"],"s"),disabled:(0,addon_knobs_dist.boolean)("disabled",!1),error:(0,addon_knobs_dist.text)("error",""),hint:(0,addon_knobs_dist.text)("hint",""),closeOnSelect:(0,addon_knobs_dist.boolean)("closeOnSelect",!0),value:value,filter:filter,options:filteredOptions,placeholder:(0,addon_knobs_dist.text)("placeholder","Выберите элемент"),label:(0,addon_knobs_dist.text)("label","Элемент"),labelView:(0,addon_knobs_dist.select)("labelView",["inner","outer"],"inner"),onChange:payload=>{const newValue=payload?(0,modern.isOptionShape)(payload.selected)?payload.selected.content:payload:"";setValue(newValue),setFilter(newValue)},onFilter:event=>{setFilter(event.target.value)},onClearFilter:()=>setFilter(""),continueButtonProps:{dataTestId:"continue"},cancelButtonProps:{dataTestId:"cancel"}})}));inputAutocompleteModalMobile.storyName="InputAutocompleteModalMobile",inputAutocompleteModalMobile.parameters={storySource:{source:'React.createElement(() => {\n  const options = [{\n    key: "1",\n    content: "Neptunium"\n  }, {\n    key: "2",\n    content: "Plutonium"\n  }, {\n    key: "3",\n    content: "Americium"\n  }, {\n    key: "4",\n    content: "Curium"\n  }, {\n    key: "5",\n    content: "Berkelium"\n  }, {\n    key: "6",\n    content: "Californium"\n  }, {\n    key: "7",\n    content: "Einsteinium"\n  }, {\n    key: "8",\n    content: "Fermium"\n  }, {\n    key: "9",\n    content: "Hydrogenium"\n  }, {\n    key: "10",\n    content: "Helium"\n  }, {\n    key: "11",\n    content: "Lithium"\n  }, {\n    key: "12",\n    content: "Beryllium"\n  }, {\n    key: "13",\n    content: "Borum"\n  }, {\n    key: "14",\n    content: "Carboneum"\n  }, {\n    key: "15",\n    content: "Nitrogenium"\n  }, {\n    key: "16",\n    content: "Oxygenium"\n  }];\n  const matchOption = (option, inputValue) => option.content.toLowerCase().includes((inputValue || "").toLowerCase());\n  const [value, setValue] = React.useState("");\n  const [filter, setFilter] = React.useState("");\n  const handleFilter = event => {\n    setFilter(event.target.value);\n  };\n  const handleChange = payload => {\n    const newValue = payload ? isOptionShape(payload.selected) ? payload.selected.content : payload : "";\n    setValue(newValue);\n    setFilter(newValue);\n  };\n  const filteredOptions = options.filter(option => matchOption(option, filter));\n  return <InputAutocompleteModalMobile dataTestId="iamm" block={boolean("block", false)} size={select("size", ["s", "m", "l", "xl"], "s")} disabled={boolean("disabled", false)} error={text("error", "")} hint={text("hint", "")} closeOnSelect={boolean("closeOnSelect", true)} value={value} filter={filter} options={filteredOptions} placeholder={text("placeholder", "\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442")} label={text("label", "\\u042D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442")} labelView={select("labelView", ["inner", "outer"], "inner")} onChange={handleChange} onFilter={handleFilter} onClearFilter={() => setFilter("")} continueButtonProps={{\n    dataTestId: "continue"\n  }} cancelButtonProps={{\n    dataTestId: "cancel"\n  }} />;\n})'}};const componentMeta={title:"Components/InputAutocomplete",id:"InputAutocomplete",component:input_autocomplete_modern.InputAutocomplete,tags:["stories-mdx"],includeStories:["inputAutocomplete","inputAutocompleteMobile","inputAutocompleteModalMobile"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function Component_stories_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(Component_stories_createMdxContent,{...props})}):Component_stories_createMdxContent()}};var Component_stories=componentMeta},"./.storybook/blocks/index.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Eg:function(){return Changelog},yt:function(){return ComponentHeader},ZV:function(){return CssVars},mQ:function(){return Tabs}});var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),index_module_changelog="changelog_UmYwo",index_module_root="root_GgHKe",jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),Changelog=function Changelog(_ref){var content=_ref.content,_ref$root=_ref.root,root=void 0!==_ref$root&&_ref$root;return(0,jsx_runtime.jsx)("div",{className:classnames_default()(index_module_changelog,root&&index_module_root,"sb-unstyled"),children:content})};try{Changelog.displayName="Changelog",Changelog.__docgenInfo={description:"",displayName:"Changelog",props:{content:{defaultValue:null,description:"",name:"content",required:!0,type:{name:"ReactNode"}},root:{defaultValue:{value:"false"},description:"",name:"root",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[".storybook/blocks/changelog/changelog.tsx#Changelog"]={docgenInfo:Changelog.__docgenInfo,name:"Changelog",path:".storybook/blocks/changelog/changelog.tsx#Changelog"})}catch(__react_docgen_typescript_loader_error){}var slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),modern=__webpack_require__("./dist/link/modern/index.js"),esm=__webpack_require__("./node_modules/storybook-addon-live-examples/dist/esm/index.js"),css_vars_module_cssVars="cssVars_OsBA8",rootBlockRegexp=/:root {([^}]*)}/g,mixinRegexp=/(?:@define-mixin)(.*{[^}]*})/g,CssVars=function CssVars(_ref){var css=_ref.css,title=_ref.title,expandable=_ref.expandable,_ref$type=_ref.type,type=void 0===_ref$type?"vars":_ref$type,_useState=(0,react.useState)(""),_useState2=(0,slicedToArray.Z)(_useState,2),vars=_useState2[0],setVars=_useState2[1],_useState3=(0,react.useState)(!expandable),_useState4=(0,slicedToArray.Z)(_useState3,2),open=_useState4[0],setOpen=_useState4[1],isVars="vars"===type,regexp=isVars?rootBlockRegexp:mixinRegexp;return(0,react.useEffect)((function(){for(var rootBlockMatch=regexp.exec(css),rootBlocks=[];rootBlockMatch;)rootBlocks.push(rootBlockMatch[1]),rootBlockMatch=regexp.exec(css);var result=rootBlocks.reduce((function(acc,item,index){var divider=index===rootBlocks.length-1?"":"\n";return"".concat(acc).concat(item).concat(divider)}),isVars?":root {":"");isVars&&(result+="}"),setVars(result)}),[]),(0,jsx_runtime.jsxs)("div",{className:classnames_default()("sb-unstyled",css_vars_module_cssVars),children:[title&&(0,jsx_runtime.jsx)("h2",{className:classnames_default()("sbdocs","sbdocs-h2"),children:title}),vars&&(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[expandable&&(0,jsx_runtime.jsx)(modern.Link,{view:"default",onClick:function onClick(){return setOpen(!open)},pseudo:!0,children:open?"Скрыть":"Показать"}),open&&(0,jsx_runtime.jsx)(esm.en,{language:"css",code:vars,live:!1})]})]})};try{CssVars.displayName="CssVars",CssVars.__docgenInfo={description:"",displayName:"CssVars",props:{css:{defaultValue:null,description:"",name:"css",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},expandable:{defaultValue:null,description:"",name:"expandable",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:"vars"},description:"",name:"type",required:!1,type:{name:"enum",value:[{value:'"vars"'},{value:'"mixins"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[".storybook/blocks/css-vars/css-vars.tsx#CssVars"]={docgenInfo:CssVars.__docgenInfo,name:"CssVars",path:".storybook/blocks/css-vars/css-vars.tsx#CssVars"})}catch(__react_docgen_typescript_loader_error){}var defineProperty=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),typography_modern=__webpack_require__("./dist/typography/modern/index.js"),space_modern=__webpack_require__("./dist/space/modern/index.js"),dist_esm=__webpack_require__("./node_modules/@alfalab/utils/dist/esm/index.js"),GithubIcon=__webpack_require__("./.storybook/components/icons/GithubIcon.jsx"),usages_namespaceObject=JSON.parse('{"updatedAt":1671683530526,"withSuffix":{"projects":0,"imports":0,"search":"withSuffix"},"Typography":{"projects":149,"imports":3111,"search":"Typography"},"Tooltip":{"projects":106,"imports":288,"search":"Tooltip*"},"ToastPlate":{"projects":1,"imports":1,"search":"ToastPlate"},"Toast":{"projects":14,"imports":27,"search":"Toast"},"TimeInput":{"projects":0,"imports":0,"search":"TimeInput"},"Textarea":{"projects":45,"imports":74,"search":"Textarea"},"Tag":{"projects":77,"imports":211,"search":"Tag"},"Tabs":{"projects":60,"imports":89,"search":"Tabs*"},"Table":{"projects":34,"imports":134,"search":"Table"},"Switch":{"projects":40,"imports":87,"search":"Switch"},"Steps":{"projects":1,"imports":2,"search":"Steps"},"SteppedProgressBar":{"projects":2,"imports":2,"search":"SteppedProgressBar"},"Status":{"projects":39,"imports":84,"search":"Status"},"Stack":{"projects":1,"imports":1,"search":"Stack"},"Spinner":{"projects":87,"imports":227,"search":"Spinner"},"Space":{"projects":69,"imports":315,"search":"Space"},"SliderInput":{"projects":15,"imports":19,"search":"SliderInput"},"Slider":{"projects":1,"imports":1,"search":"Slider"},"Skeleton":{"projects":68,"imports":354,"search":"Skeleton"},"SidePanel":{"projects":7,"imports":17,"search":"SidePanel*"},"SelectWithTags":{"projects":10,"imports":12,"search":"SelectWithTags"},"Select":{"projects":97,"imports":263,"search":"Select*"},"Scrollbar":{"projects":2,"imports":5,"search":"Scrollbar"},"Radio":{"projects":47,"imports":105,"search":"Radio"},"RadioGroup":{"projects":64,"imports":191,"search":"RadioGroup"},"PureInput":{"projects":0,"imports":0,"search":"PureInput"},"PureCell":{"projects":12,"imports":65,"search":"PureCell"},"ProgressBar":{"projects":11,"imports":12,"search":"ProgressBar"},"Portal":{"projects":4,"imports":5,"search":"Portal"},"Popover":{"projects":20,"imports":45,"search":"Popover"},"Plate":{"projects":63,"imports":214,"search":"Plate"},"PickerButton":{"projects":20,"imports":24,"search":"PickerButton*"},"PhoneInput":{"projects":30,"imports":50,"search":"PhoneInput"},"PasswordInput":{"projects":5,"imports":9,"search":"PasswordInput"},"PatternLock":{"projects":0,"imports":0,"search":"PatternLock"},"PassCode":{"projects":0,"imports":0,"search":"PassCode"},"Pagination":{"projects":7,"imports":8,"search":"Pagination"},"NotificationManager":{"projects":22,"imports":22,"search":"NotificationManager"},"Notification":{"projects":36,"imports":48,"search":"Notification"},"Mq":{"projects":9,"imports":21,"search":"Mq"},"Modal":{"projects":123,"imports":346,"search":"Modal*"},"MaskedInput":{"projects":39,"imports":106,"search":"MaskedInput"},"Loader":{"projects":34,"imports":63,"search":"Loader"},"ListHeader":{"projects":7,"imports":8,"search":"ListHeader"},"List":{"projects":51,"imports":140,"search":"List"},"Link":{"projects":113,"imports":535,"search":"Link"},"KeyboardFocusable":{"projects":3,"imports":3,"search":"KeyboardFocusable"},"IntlPhoneInput":{"projects":1,"imports":1,"search":"IntlPhoneInput"},"InputAutocomplete":{"projects":62,"imports":126,"search":"InputAutocomplete*"},"Input":{"projects":89,"imports":361,"search":"Input"},"IconView":{"projects":0,"imports":0,"search":"IconView"},"IconButton":{"projects":76,"imports":227,"search":"IconButton"},"HatchingProgressBar":{"projects":1,"imports":1,"search":"HatchingProgressBar"},"Grid":{"projects":61,"imports":445,"search":"Grid"},"Gap":{"projects":0,"imports":0,"search":"Gap"},"Gallery":{"projects":2,"imports":4,"search":"Gallery"},"FormControl":{"projects":3,"imports":3,"search":"FormControl"},"FilterTag":{"projects":4,"imports":16,"search":"FilterTag"},"FileUploadItem":{"projects":17,"imports":20,"search":"FileUploadItem"},"Dropzone":{"projects":9,"imports":11,"search":"Dropzone"},"Drawer":{"projects":18,"imports":25,"search":"Drawer"},"Divider":{"projects":48,"imports":131,"search":"Divider"},"DateTimeInput":{"projects":0,"imports":0,"search":"DateTimeInput"},"DateRangeInput":{"projects":0,"imports":0,"search":"DateRangeInput"},"DateInput":{"projects":5,"imports":5,"search":"DateInput"},"CustomButton":{"projects":1,"imports":2,"search":"CustomButton"},"ConfirmationV1":{"projects":1,"imports":1,"search":"ConfirmationV1"},"Confirmation":{"projects":17,"imports":29,"search":"Confirmation*"},"Comment":{"projects":1,"imports":3,"search":"Comment"},"Collapse":{"projects":44,"imports":66,"search":"Collapse"},"CodeInput":{"projects":1,"imports":1,"search":"CodeInput"},"CircularProgressBar":{"projects":11,"imports":16,"search":"CircularProgressBar"},"CheckboxGroup":{"projects":21,"imports":37,"search":"CheckboxGroup"},"Checkbox":{"projects":74,"imports":197,"search":"Checkbox"},"Chart":{"projects":1,"imports":1,"search":"Chart"},"CDNIcon":{"projects":13,"imports":55,"search":"CDNIcon"},"CardImage":{"projects":4,"imports":4,"search":"CardImage"},"CalendarWithSkeleton":{"projects":1,"imports":1,"search":"CalendarWithSkeleton"},"CalendarRange":{"projects":10,"imports":17,"search":"CalendarRange"},"CalendarInput":{"projects":40,"imports":92,"search":"CalendarInput*"},"Calendar":{"projects":9,"imports":19,"search":"Calendar*"},"Button":{"projects":155,"imports":1690,"search":"Button"},"BottomSheet":{"projects":22,"imports":43,"search":"BottomSheet"},"BaseModal":{"projects":2,"imports":2,"search":"BaseModal"},"BankCard":{"projects":1,"imports":1,"search":"BankCard"},"Badge":{"projects":66,"imports":168,"search":"Badge"},"AmountInput":{"projects":36,"imports":63,"search":"AmountInput"},"Backdrop":{"projects":4,"imports":4,"search":"Backdrop"},"Amount":{"projects":40,"imports":143,"search":"Amount"},"Alert":{"projects":60,"imports":182,"search":"Alert"},"Attach":{"projects":12,"imports":13,"search":"Attach"},"ActionButton":{"projects":1,"imports":1,"search":"ActionButton"}}'),ComponentHeader_module_component="component_qx5zQ",ComponentHeader_module_text="text_TIocB",ComponentHeader_module_textMobile="textMobile_d_rnY",ComponentHeader_module_info="info_iGRHP",ComponentHeader_module_commonLink="commonLink_WJRCZ",ComponentHeader_module_links="links_kuMT8",ComponentHeader_module_usageLink="usageLink_ilI5I",ComponentHeader_module_github="github_ks4z8",ComponentHeader_module_design="design_NpKuj",mq_modern=__webpack_require__("./dist/mq/modern/index.js"),ComponentHeader=function ComponentHeader(_ref){var _usages$name,_usages$name2,_usages$name3,_usages$name4,_usages$name5,_usages$name6,name=_ref.name,design=_ref.design,children=_ref.children,_useMatchMedia=(0,mq_modern.useMatchMedia)("--tablet-m"),isDesktop=(0,slicedToArray.Z)(_useMatchMedia,1)[0],packageName=name.replace(/([a-z0-9])([A-Z])/g,"$1-$2").replace(/([A-Z])([A-Z])(?=[a-z])/g,"$1-$2").toLowerCase(),githubLink="https://github.com/core-ds/core-components/tree/master/packages/".concat(packageName),Title=isDesktop?typography_modern.Typography.Title:typography_modern.Typography.TitleMobile;return(0,jsx_runtime.jsxs)("div",{className:classnames_default()("sb-unstyled",ComponentHeader_module_component),children:[(0,jsx_runtime.jsx)(Title,{tag:"h1",view:"xlarge",children:name}),children&&(0,jsx_runtime.jsx)(typography_modern.Typography.Text,{tag:"p",view:"primary-medium",className:classnames_default()(ComponentHeader_module_text,(0,defineProperty.Z)({},ComponentHeader_module_textMobile,!isDesktop)),children:children}),(0,jsx_runtime.jsxs)("div",{className:ComponentHeader_module_links,children:[(0,jsx_runtime.jsx)("a",{className:classnames_default()(ComponentHeader_module_design,(0,defineProperty.Z)({},ComponentHeader_module_commonLink,!design)),href:design||"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components",target:"_blank",children:"Figma"}),(0,jsx_runtime.jsxs)("a",{className:ComponentHeader_module_github,href:githubLink,target:"_blank",children:[(0,jsx_runtime.jsx)(GithubIcon.E,{fill:"var(--color-light-graphic-primary)"}),"Github"]})]}),(0,jsx_runtime.jsx)(space_modern.Space,{direction:"horizontal",align:"center",className:ComponentHeader_module_info,children:(null===(_usages$name=usages_namespaceObject[name])||void 0===_usages$name?void 0:_usages$name.projects)>0&&(0,jsx_runtime.jsxs)(typography_modern.Typography.Text,{view:"primary-small",color:"secondary",children:["Используется в"," ",(0,jsx_runtime.jsxs)(modern.Link,{href:"http://design/design-system-usage/usage-chart?component=".concat(null===(_usages$name2=usages_namespaceObject[name])||void 0===_usages$name2?void 0:_usages$name2.search),target:"_blank",view:"secondary",underline:!1,title:"Необходимо подключение к VPN",className:ComponentHeader_module_usageLink,children:[null===(_usages$name3=usages_namespaceObject[name])||void 0===_usages$name3?void 0:_usages$name3.projects," ",(0,dist_esm._6)(null===(_usages$name4=usages_namespaceObject[name])||void 0===_usages$name4?void 0:_usages$name4.projects,"проекте","проектах","проектах")]})," и ","~",null===(_usages$name5=usages_namespaceObject[name])||void 0===_usages$name5?void 0:_usages$name5.imports," ",(0,dist_esm._6)(null===(_usages$name6=usages_namespaceObject[name])||void 0===_usages$name6?void 0:_usages$name6.imports,"файле","файлах","файлах")]})})]})};try{ComponentHeader.displayName="ComponentHeader",ComponentHeader.__docgenInfo={description:"",displayName:"ComponentHeader",props:{name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},version:{defaultValue:null,description:"",name:"version",required:!1,type:{name:"string"}},design:{defaultValue:null,description:"",name:"design",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[".storybook/blocks/component-header/ComponentHeader.tsx#ComponentHeader"]={docgenInfo:ComponentHeader.__docgenInfo,name:"ComponentHeader",path:".storybook/blocks/component-header/ComponentHeader.tsx#ComponentHeader"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__("./.storybook/blocks/grid/index.ts");var _TabTitle,tabs_modern=__webpack_require__("./dist/tabs/modern/index.js"),tabs_index_module_tabs="tabs_BRA6G",TabName=function(TabName){return TabName.DESCRIPTION="DESCRIPTION",TabName.PROPS="PROPS",TabName.CSS_VARS="CSS_VARS",TabName.CHANGELOG="CHANGELOG",TabName.DEVELOPMENT="DEVELOPMENT",TabName}(TabName||{}),TabTitle=(_TabTitle={},(0,defineProperty.Z)(_TabTitle,TabName.DESCRIPTION,"Описание"),(0,defineProperty.Z)(_TabTitle,TabName.PROPS,"Свойства"),(0,defineProperty.Z)(_TabTitle,TabName.CSS_VARS,"CSS-переменные"),(0,defineProperty.Z)(_TabTitle,TabName.CHANGELOG,"Обновления"),(0,defineProperty.Z)(_TabTitle,TabName.DEVELOPMENT,"Разработчику"),_TabTitle),Tabs=function Tabs(_ref){var description=_ref.description,props=_ref.props,cssVars=_ref.cssVars,changelog=_ref.changelog,_ref$defaultSelected=_ref.defaultSelected,defaultSelected=void 0===_ref$defaultSelected?TabName.DESCRIPTION:_ref$defaultSelected,development=_ref.development,_useState=(0,react.useState)(defaultSelected),_useState2=(0,slicedToArray.Z)(_useState,2),selected=_useState2[0],setSelected=_useState2[1],handleChange=(0,react.useCallback)((function(_,_ref2){var selectedId=_ref2.selectedId;setSelected(selectedId)}),[]),tabs=(0,react.useMemo)((function(){return function renderTabs(){return[(0,jsx_runtime.jsx)(tabs_modern.Tab,{title:TabTitle[TabName.DESCRIPTION],id:TabName.DESCRIPTION,children:description},"description"),props?(0,jsx_runtime.jsx)(tabs_modern.Tab,{title:TabTitle[TabName.PROPS],id:TabName.PROPS,children:props},"props"):null,cssVars?(0,jsx_runtime.jsx)(tabs_modern.Tab,{title:TabTitle[TabName.CSS_VARS],id:TabName.CSS_VARS,children:cssVars},"css-vars"):null,development?(0,jsx_runtime.jsx)(tabs_modern.Tab,{title:TabTitle[TabName.DEVELOPMENT],id:TabName.DEVELOPMENT,children:development},"development"):null,changelog?(0,jsx_runtime.jsx)(tabs_modern.Tab,{title:TabTitle[TabName.CHANGELOG],id:TabName.CHANGELOG,children:(0,jsx_runtime.jsx)("div",{style:{marginTop:"32px"},children:(0,jsx_runtime.jsx)(Changelog,{content:changelog})})},"changelog"):null].filter(react.isValidElement)}()}),[description,props,cssVars]);return(0,jsx_runtime.jsx)(tabs_modern.TabsResponsive,{className:"sb-unstyled",selectedId:selected,onChange:handleChange,containerClassName:tabs_index_module_tabs,children:tabs})};try{Tabs.displayName="Tabs",Tabs.__docgenInfo={description:"",displayName:"Tabs",props:{description:{defaultValue:null,description:"",name:"description",required:!0,type:{name:"ReactNode"}},props:{defaultValue:null,description:"",name:"props",required:!0,type:{name:"ReactNode"}},cssVars:{defaultValue:null,description:"",name:"cssVars",required:!1,type:{name:"ReactNode"}},changelog:{defaultValue:null,description:"",name:"changelog",required:!1,type:{name:"string"}},defaultSelected:{defaultValue:{value:"TabName.DESCRIPTION"},description:"",name:"defaultSelected",required:!1,type:{name:"enum",value:[{value:'"DESCRIPTION"'},{value:'"PROPS"'},{value:'"CSS_VARS"'},{value:'"CHANGELOG"'},{value:'"DEVELOPMENT"'}]}},development:{defaultValue:null,description:"",name:"development",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[".storybook/blocks/tabs/component.tsx#Tabs"]={docgenInfo:Tabs.__docgenInfo,name:"Tabs",path:".storybook/blocks/tabs/component.tsx#Tabs"})}catch(__react_docgen_typescript_loader_error){}},"./.storybook/components/icons/GithubIcon.jsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{E:function(){return GithubIcon}});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),GithubIcon=function GithubIcon(_ref){var _ref$fill=_ref.fill,fill=void 0===_ref$fill?"#24292E":_ref$fill,_ref$width=_ref.width,width=void 0===_ref$width?32:_ref$width,_ref$height=_ref.height,height=void 0===_ref$height?32:_ref$height;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:width,height:height,viewBox:"0 0 32 32",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z",fill:fill})})};GithubIcon.__docgenInfo={description:"",methods:[],displayName:"GithubIcon",props:{fill:{defaultValue:{value:"'#24292E'",computed:!1},required:!1},width:{defaultValue:{value:"32",computed:!1},required:!1},height:{defaultValue:{value:"32",computed:!1},required:!1}}}},"./packages/input-autocomplete/src/Component.desktop.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{$:function(){return InputAutocompleteDesktop}});var objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react=__webpack_require__("./node_modules/react/index.js"),modern=__webpack_require__("./dist/select/modern/index.js"),defineProperty=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),react_merge_refs_esm=__webpack_require__("./node_modules/react-merge-refs/dist/react-merge-refs.esm.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),input_modern=__webpack_require__("./dist/input/modern/index.js"),index_module_arrow="arrow_RWc1Z",index_module_error="error_HXxNm",jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),AutocompleteField=function AutocompleteField(_ref){var label=_ref.label,_ref$labelView=_ref.labelView,labelView=void 0===_ref$labelView?"inner":_ref$labelView,placeholder=_ref.placeholder,size=_ref.size,Arrow=_ref.Arrow,_ref$Input=_ref.Input,Input=void 0===_ref$Input?input_modern.Input:_ref$Input,value=_ref.value,error=_ref.error,success=_ref.success,hint=_ref.hint,disabled=_ref.disabled,readOnly=_ref.readOnly,onInput=_ref.onInput,_ref$inputProps=_ref.inputProps,inputProps=void 0===_ref$inputProps?{}:_ref$inputProps,innerProps=_ref.innerProps,inputRef=(0,react.useRef)(null),onClick=innerProps.onClick,onFocus=innerProps.onFocus,inputDisabled=disabled||readOnly,handleClick=(0,react.useCallback)((function(event){onClick&&onClick(event),inputRef.current&&inputRef.current.focus()}),[onClick]);return(0,jsx_runtime.jsx)(Input,(0,objectSpread2.Z)((0,objectSpread2.Z)((0,objectSpread2.Z)({},inputProps),innerProps),{},{wrapperRef:(0,react_merge_refs_esm.Z)([innerProps.ref,inputProps.wrapperRef]),ref:(0,react_merge_refs_esm.Z)([inputRef,inputProps.ref]),disabled:disabled,readOnly:readOnly,block:!0,label:label,labelView:labelView,placeholder:placeholder,size:size,error:error,success:success,hint:hint,onChange:onInput,onClick:inputDisabled?void 0:handleClick,onFocus:inputDisabled?void 0:onFocus,autoComplete:"off",value:value,rightAddons:(Arrow||inputProps.rightAddons)&&(0,jsx_runtime.jsxs)(react.Fragment,{children:[inputProps.rightAddons,Arrow&&(0,jsx_runtime.jsx)("span",{className:classnames_default()(index_module_arrow,(0,defineProperty.Z)({},index_module_error,error)),children:Arrow})]})}))};try{AutocompleteField.displayName="AutocompleteField",AutocompleteField.__docgenInfo={description:"",displayName:"AutocompleteField",props:{className:{defaultValue:null,description:"Дополнительный класс",name:"className",required:!1,type:{name:"string"}},selected:{defaultValue:null,description:"Выбранный пункт",name:"selected",required:!1,type:{name:"OptionShape"}},selectedMultiple:{defaultValue:null,description:"Список выбранных пунктов",name:"selectedMultiple",required:!1,type:{name:"OptionShape[]"}},setSelectedItems:{defaultValue:null,description:"Метод для ручной установки выбранных пунктов",name:"setSelectedItems",required:!0,type:{name:"(selected: OptionShape[]) => void"}},toggleMenu:{defaultValue:null,description:"Метод переключающий видимость выпадающего списка",name:"toggleMenu",required:!0,type:{name:"() => void"}},multiple:{defaultValue:null,description:"Флаг, можно ли выбрать несколько значений",name:"multiple",required:!1,type:{name:"boolean"}},open:{defaultValue:null,description:"Флаг, открыто ли меню",name:"open",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Флаг, поле заблокировано",name:"disabled",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Лейбл поля",name:"label",required:!1,type:{name:"ReactNode"}},labelView:{defaultValue:{value:"inner"},description:"Вид лейбла внутри / снаружи",name:"labelView",required:!1,type:{name:"enum",value:[{value:'"inner"'},{value:'"outer"'}]}},placeholder:{defaultValue:null,description:"Плейсхолдер поля",name:"placeholder",required:!1,type:{name:"string"}},error:{defaultValue:null,description:"Отображение ошибки",name:"error",required:!1,type:{name:"ReactNode"}},success:{defaultValue:null,description:"Отображение иконки успеха",name:"success",required:!1,type:{name:"boolean"}},hint:{defaultValue:null,description:"Подсказка под полем",name:"hint",required:!1,type:{name:"ReactNode"}},Arrow:{defaultValue:null,description:"Компонент стрелки",name:"Arrow",required:!1,type:{name:"false | ReactElement<any, string | JSXElementConstructor<any>> | null"}},valueRenderer:{defaultValue:null,description:"Кастомный рендер выбранного пункта",name:"valueRenderer",required:!1,type:{name:"(({ selected, selectedMultiple, }: { selected?: OptionShape; selectedMultiple: OptionShape[]; }) => ReactNode)"}},innerProps:{defaultValue:null,description:"Внутренние свойства, которые должны быть установлены компоненту.",name:"innerProps",required:!0,type:{name:"{ onBlur?: ((event: FocusEvent<HTMLDivElement | HTMLInputElement, Element>) => void) | undefined; onFocus?: ((event: FocusEvent<HTMLDivElement | HTMLInputElement, Element>) => void) | undefined; onClick?: ((event: MouseEvent<...>) => void) | undefined; tabIndex?: number | undefined; id: string; } & RefAttributes<......"}},dataTestId:{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования",name:"dataTestId",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"Значение поля ввода",name:"value",required:!1,type:{name:"string"}},onInput:{defaultValue:null,description:"Обработчик ввода",name:"onInput",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>) => void)"}},inputProps:{defaultValue:{value:"{}"},description:"Пропсы, которые будут прокинуты в инпут",name:"inputProps",required:!1,type:{name:'(Omit<InputHTMLAttributes<HTMLInputElement>, "value" | "size" | "defaultValue" | "onChange" | "onClick" | "onMouseDown" | "type" | "enterKeyHint"> & { ...; } & Record<...>)'}},readOnly:{defaultValue:null,description:"Поле доступно только для чтения",name:"readOnly",required:!1,type:{name:"boolean"}},Input:{defaultValue:{value:"React.forwardRef<HTMLInputElement, InputProps>(\n    (\n        {\n            size = 's',\n            type = 'text',\n            block = false,\n            colors = 'default',\n            bottomAddons,\n            dataTestId,\n            clear = false,\n            disabled,\n            error,\n            success,\n            hint,\n            className,\n            fieldClassName,\n            inputClassName,\n            labelClassName,\n            addonsClassName,\n            focusedClassName,\n            filledClassName,\n            label,\n            labelView = 'inner',\n            leftAddons,\n            onFocus,\n            onBlur,\n            onChange,\n            onClear,\n            onClick,\n            onMouseDown,\n            onMouseUp,\n            onAnimationStart,\n            rightAddons,\n            value,\n            defaultValue,\n            wrapperRef,\n            readOnly,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const uncontrolled = value === undefined;\n\n        const inputRef = useRef<HTMLInputElement>(null);\n\n        const [focusVisible] = useFocus(inputRef, 'keyboard');\n\n        const [focused, setFocused] = useState(restProps.autoFocus);\n        const [stateValue, setStateValue] = useState(defaultValue || '');\n\n        const filled = Boolean(uncontrolled ? stateValue : value);\n        const [autofilled, setAutofilled] = useState(false);\n\n        // отображаем крестик только для заполненного и активного инпута\n        const clearButtonVisible = clear && filled && !disabled && !readOnly;\n        const hasInnerLabel = label && labelView === 'inner';\n\n        const handleInputFocus = useCallback(\n            (event: React.FocusEvent<HTMLInputElement>) => {\n                if (!readOnly) {\n                    setFocused(true);\n                }\n\n                if (onFocus) {\n                    onFocus(event);\n                }\n            },\n            [onFocus, readOnly],\n        );\n\n        const handleInputBlur = useCallback(\n            (event: React.FocusEvent<HTMLInputElement>) => {\n                setFocused(false);\n\n                if (onBlur) {\n                    onBlur(event);\n                }\n            },\n            [onBlur],\n        );\n\n        const handleInputChange = useCallback(\n            (event: React.ChangeEvent<HTMLInputElement>) => {\n                if (onChange) {\n                    onChange(event, { value: event.target.value });\n                }\n\n                if (uncontrolled) {\n                    setStateValue(event.target.value);\n                }\n            },\n            [onChange, uncontrolled],\n        );\n\n        const handleClear = useCallback(\n            (event: MouseEvent<HTMLButtonElement>) => {\n                if (!clearButtonVisible) return;\n\n                if (uncontrolled) {\n                    setStateValue('');\n                }\n\n                if (onClear) {\n                    onClear(event);\n                }\n\n                if (inputRef.current && !focused) {\n                    inputRef.current.focus();\n                }\n            },\n            [clearButtonVisible, focused, onClear, uncontrolled],\n        );\n\n        const handleAnimationStart = useCallback(\n            (event: AnimationEvent<HTMLInputElement>) => {\n                if (onAnimationStart) {\n                    onAnimationStart(event);\n                }\n\n                setAutofilled(event.animationName.includes('start'));\n            },\n            [onAnimationStart],\n        );\n\n        const renderRightAddons = () => {\n            const addonsVisible = clearButtonVisible || rightAddons || error || success;\n\n            return (\n                addonsVisible && (\n                    <Fragment>\n                        {clearButtonVisible && (\n                            <Button\n                                type='button'\n                                view='ghost'\n                                disabled={disabled}\n                                aria-label='Очистить'\n                                className={styles.clearButton}\n                                onClick={handleClear}\n                                tabIndex={-1}\n                            >\n                                <CrossCircleMIcon\n                                    className={cn(styles.clearIcon, colorStyles[colors].clearIcon)}\n                                />\n                            </Button>\n                        )}\n                        {rightAddons}\n                        {error && (\n                            <div className={styles.errorIcon}>\n                                <Badge\n                                    view='icon'\n                                    size='m'\n                                    iconColor='negative'\n                                    content={\n                                        <ExclamationCircleMIcon className={styles.errorColorIcon} />\n                                    }\n                                />\n                            </div>\n                        )}\n                        {success && !error && (\n                            <div className={styles.successIcon}>\n                                <Badge\n                                    view='icon'\n                                    size='m'\n                                    iconColor='positive'\n                                    content={\n                                        <CheckmarkCircleMIcon className={styles.successColorIcon} />\n                                    }\n                                />\n                            </div>\n                        )}\n                    </Fragment>\n                )\n            );\n        };\n\n        return (\n            <FormControl\n                ref={wrapperRef}\n                className={cn(className, focused && focusedClassName, filled && filledClassName)}\n                fieldClassName={cn(fieldClassName, {\n                    [styles.focusVisible]: focusVisible,\n                })}\n                labelClassName={labelClassName}\n                addonsClassName={addonsClassName}\n                size={size}\n                colors={colors}\n                block={block}\n                disabled={disabled}\n                readOnly={readOnly}\n                filled={filled || autofilled || focused}\n                focused={focused}\n                error={error}\n                label={label}\n                labelView={labelView}\n                hint={hint}\n                leftAddons={leftAddons}\n                rightAddons={renderRightAddons()}\n                bottomAddons={bottomAddons}\n                onClick={onClick}\n                onMouseDown={onMouseDown}\n                onMouseUp={onMouseUp}\n            >\n                <input\n                    {...restProps}\n                    className={cn(\n                        styles.input,\n                        colorStyles[colors].input,\n                        {\n                            [styles.error]: error,\n                            [colorStyles[colors].error]: error,\n                            [styles[size]]: hasInnerLabel,\n                            [styles.hasInnerLabel]: hasInnerLabel,\n                            [colorStyles[colors].hasInnerLabel]: hasInnerLabel,\n                        },\n                        inputClassName,\n                    )}\n                    disabled={disabled}\n                    onBlur={handleInputBlur}\n                    onFocus={handleInputFocus}\n                    onChange={handleInputChange}\n                    onAnimationStart={handleAnimationStart}\n                    ref={mergeRefs([ref, inputRef])}\n                    type={type}\n                    value={uncontrolled ? stateValue : value}\n                    readOnly={readOnly}\n                    data-test-id={dataTestId}\n                    aria-label={typeof label === 'string' ? label : undefined}\n                />\n            </FormControl>\n        );\n    },\n)"},description:"Компонент ввода значения",name:"Input",required:!1,type:{name:'FC<Omit<InputHTMLAttributes<HTMLInputElement>, "value" | "size" | "defaultValue" | "onChange" | "onClick" | "onMouseDown" | "type" | "enterKeyHint"> & { ...; } & RefAttributes<...>>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/input-autocomplete/src/autocomplete-field/Component.tsx#AutocompleteField"]={docgenInfo:AutocompleteField.__docgenInfo,name:"AutocompleteField",path:"packages/input-autocomplete/src/autocomplete-field/Component.tsx#AutocompleteField"})}catch(__react_docgen_typescript_loader_error){}var _excluded=["OptionsList","Optgroup","Option","Input","inputProps","onInput","value","success","readOnly","closeOnSelect","options"],InputAutocompleteDesktop=(0,react.forwardRef)((function(_ref,ref){var _ref$OptionsList=_ref.OptionsList,OptionsList=void 0===_ref$OptionsList?modern.OptionsList:_ref$OptionsList,_ref$Optgroup=_ref.Optgroup,Optgroup=void 0===_ref$Optgroup?modern.Optgroup:_ref$Optgroup,_ref$Option=_ref.Option,Option=void 0===_ref$Option?modern.Option:_ref$Option,Input=_ref.Input,_ref$inputProps=_ref.inputProps,inputProps=void 0===_ref$inputProps?{}:_ref$inputProps,onInput=_ref.onInput,value=_ref.value,success=_ref.success,readOnly=_ref.readOnly,_ref$closeOnSelect=_ref.closeOnSelect,closeOnSelect=void 0!==_ref$closeOnSelect&&_ref$closeOnSelect,options=_ref.options,restProps=(0,objectWithoutProperties.Z)(_ref,_excluded);return(0,jsx_runtime.jsx)(modern.BaseSelect,(0,objectSpread2.Z)({ref:ref,autocomplete:!0,options:options,closeOnSelect:closeOnSelect,Option:Option,Field:AutocompleteField,fieldProps:{Input:Input,onInput:onInput,value:value,inputProps:inputProps,readOnly:readOnly,success:success},Optgroup:Optgroup,OptionsList:OptionsList},restProps))}));try{InputAutocompleteDesktop.displayName="InputAutocompleteDesktop",InputAutocompleteDesktop.__docgenInfo={description:"",displayName:"InputAutocompleteDesktop",props:{className:{defaultValue:null,description:"Дополнительный класс",name:"className",required:!1,type:{name:"string"}},dataTestId:{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования",name:"dataTestId",required:!1,type:{name:"string"}},size:{defaultValue:null,description:"Размер компонента",name:"size",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'}]}},id:{defaultValue:null,description:"Атрибут id",name:"id",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"Плейсхолдер поля",name:"placeholder",required:!1,type:{name:"string"}},onFocus:{defaultValue:null,description:"Обработчик блюра поля",name:"onFocus",required:!1,type:{name:"((event: FocusEvent<HTMLDivElement | HTMLInputElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"Обработчик фокуса поля",name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLDivElement | HTMLInputElement, Element>) => void)"}},onChange:{defaultValue:null,description:"Обработчик выбора",name:"onChange",required:!1,type:{name:"((payload: BaseSelectChangePayload) => void)"}},onScroll:{defaultValue:null,description:"Обработчик скрола",name:"onScroll",required:!1,type:{name:"((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)"}},name:{defaultValue:null,description:"Атрибут name",name:"name",required:!1,type:{name:"string"}},onOpen:{defaultValue:null,description:"Обработчик открытия\\закрытия селекта",name:"onOpen",required:!1,type:{name:"((payload: { open?: boolean; name?: string; }) => void) | undefined"}},open:{defaultValue:null,description:"Управление открытием",name:"open",required:!1,type:{name:"boolean"}},updatePopover:{defaultValue:null,description:"Хранит функцию, с помощью которой можно обновить положение поповера",name:"updatePopover",required:!1,type:{name:"MutableRefObject<() => void>"}},hint:{defaultValue:null,description:"Подсказка под полем",name:"hint",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"Лейбл поля",name:"label",required:!1,type:{name:"ReactNode"}},block:{defaultValue:null,description:"Растягивает компонент на ширину контейнера",name:"block",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Управление возможностью выбора значения",name:"disabled",required:!1,type:{name:"boolean"}},preventFlip:{defaultValue:null,description:"Запрещает поповеру менять свою позицию.\nНапример, если места снизу недостаточно,то он все равно будет показан снизу",name:"preventFlip",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Возможность выбрать несколько значений",name:"multiple",required:!1,type:{name:"boolean"}},selected:{defaultValue:null,description:"Список value выбранных пунктов (controlled-селект)",name:"selected",required:!1,type:{name:"string | OptionShape | (string | OptionShape)[] | null"}},autocomplete:{defaultValue:null,description:"Возможность использовать селект как input-autocomplete",name:"autocomplete",required:!1,type:{name:"boolean"}},fieldClassName:{defaultValue:null,description:"Дополнительный класс для поля",name:"fieldClassName",required:!1,type:{name:"string"}},optionsListClassName:{defaultValue:null,description:"Дополнительный класс выпадающего меню",name:"optionsListClassName",required:!1,type:{name:"string"}},optionClassName:{defaultValue:null,description:"Дополнительный класс для пункта меню",name:"optionClassName",required:!1,type:{name:"string"}},optionGroupClassName:{defaultValue:null,description:"Дополнительный класс для компонента группы пунктов",name:"optionGroupClassName",required:!1,type:{name:"string"}},popperClassName:{defaultValue:null,description:"Дополнительный класс для поповера",name:"popperClassName",required:!1,type:{name:"string"}},options:{defaultValue:null,description:"Список вариантов выбора",name:"options",required:!0,type:{name:"(OptionShape | GroupShape)[]"}},defaultOpen:{defaultValue:null,description:"Начальное состояние селекта",name:"defaultOpen",required:!1,type:{name:"boolean"}},optionsSize:{defaultValue:null,description:"Размер пунктов меню",name:"optionsSize",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'}]}},optionsListWidth:{defaultValue:null,description:"Управляет шириной выпадающего меню.\nШирину определяет контент, либо ширина равна ширине поля",name:"optionsListWidth",required:!1,type:{name:"enum",value:[{value:'"content"'},{value:'"field"'}]}},labelView:{defaultValue:null,description:"Вид лейбла внутри / снаружи",name:"labelView",required:!1,type:{name:"enum",value:[{value:'"inner"'},{value:'"outer"'}]}},error:{defaultValue:null,description:"Отображение ошибки",name:"error",required:!1,type:{name:"ReactNode"}},allowUnselect:{defaultValue:null,description:"Позволяет снять выбранное значение",name:"allowUnselect",required:!1,type:{name:"boolean"}},closeOnSelect:{defaultValue:{value:"false"},description:"Закрывать меню после выбора?",name:"closeOnSelect",required:!1,type:{name:"boolean"}},circularNavigation:{defaultValue:null,description:"При навигации с клавиатуры переходить от последнего пункта меню к первому и наоборот.",name:"circularNavigation",required:!1,type:{name:"boolean"}},popoverPosition:{defaultValue:null,description:"Позиционирование выпадающего списка",name:"popoverPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"right"'},{value:'"left"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},visibleOptions:{defaultValue:null,description:"Количество видимых пунктов меню (5 = 5.5)",name:"visibleOptions",required:!1,type:{name:"number"}},valueRenderer:{defaultValue:null,description:"Кастомный рендер выбранного пункта",name:"valueRenderer",required:!1,type:{name:"(({ selected, selectedMultiple, }: { selected?: OptionShape; selectedMultiple: OptionShape[]; }) => ReactNode)"}},Arrow:{defaultValue:null,description:"Компонент стрелки",name:"Arrow",required:!1,type:{name:"false | FC<ArrowProps> | null"}},fieldProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент поля",name:"fieldProps",required:!1,type:{name:"unknown"}},optionsListProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент списка",name:"optionsListProps",required:!1,type:{name:"unknown"}},optionProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент пункта меню",name:"optionProps",required:!1,type:{name:"unknown"}},OptionsList:{defaultValue:{value:"forwardRef<HTMLDivElement, OptionsListProps>(\n    (\n        {\n            size = 's',\n            className,\n            optionGroupClassName,\n            Option,\n            getOptionProps,\n            options = [],\n            Optgroup = DefaultOptgroup,\n            dataTestId,\n            emptyPlaceholder,\n            visibleOptions = DEFAULT_VISIBLE_OPTIONS,\n            onScroll,\n            open,\n            header,\n            footer,\n            showFooter = true,\n            optionsListWidth,\n            nativeScrollbar: nativeScrollbarProp,\n            flatOptions = [],\n        },\n        ref,\n    ) => {\n        let [nativeScrollbar] = useMedia<boolean>([[true, '(max-width: 1023px)']], false);\n\n        nativeScrollbar = Boolean(nativeScrollbarProp ?? nativeScrollbar);\n\n        const renderOption = (option: OptionShape, index: number) => (\n            <Option key={option.key} {...getOptionProps(option, index)} />\n        );\n\n        const listRef = useRef<HTMLDivElement>(null);\n        const scrollbarRef = useRef<HTMLDivElement>(null);\n        const counter = createCounter();\n        const renderGroup = (group: GroupShape) => (\n            <Optgroup\n                className={optionGroupClassName}\n                label={group.label}\n                key={group.label}\n                size={size}\n            >\n                {group.options.map((option) => renderOption(option, counter()))}\n            </Optgroup>\n        );\n\n        useVisibleOptions({\n            ...(!nativeScrollbar && { styleTargetRef: scrollbarRef }),\n            visibleOptions,\n            listRef,\n            open,\n            invalidate: options,\n        });\n\n        if (options.length === 0 && !emptyPlaceholder) {\n            return null;\n        }\n\n        const renderListItems = () => (\n            <React.Fragment>\n                {options.map((option) =>\n                    isGroup(option) ? renderGroup(option) : renderOption(option, counter()),\n                )}\n\n                {emptyPlaceholder && options.length === 0 && (\n                    <div className={styles.emptyPlaceholder}>{emptyPlaceholder}</div>\n                )}\n            </React.Fragment>\n        );\n\n        const renderWithCustomScrollbar = () => {\n            const scrollableNodeProps = {\n                onScroll,\n                'data-test-id': dataTestId,\n                ref: ref as React.RefObject<HTMLDivElement>,\n            };\n\n            return (\n                <Scrollbar\n                    className={styles.scrollable}\n                    ref={scrollbarRef}\n                    horizontalAutoStretch={optionsListWidth === 'content'}\n                    scrollableNodeProps={scrollableNodeProps}\n                    contentNodeProps={{ ref: listRef }}\n                >\n                    {renderListItems()}\n                </Scrollbar>\n            );\n        };\n\n        const renderWithNativeScrollbar = () => (\n            <div className={styles.scrollable} ref={mergeRefs([listRef, ref])} onScroll={onScroll}>\n                {renderListItems()}\n            </div>\n        );\n\n        return (\n            <div\n                {...(nativeScrollbar && { 'data-test-id': dataTestId })}\n                className={cn(styles.optionsList, styles[size], className)}\n            >\n                {header && <div className={styles.optionsListHeader}>{header}</div>}\n\n                {nativeScrollbar ? renderWithNativeScrollbar() : renderWithCustomScrollbar()}\n\n                {showFooter && footer && (\n                    <div\n                        className={cn(styles.optionsListFooter, {\n                            [styles.withBorder]:\n                                visibleOptions && flatOptions.length > visibleOptions,\n                        })}\n                    >\n                        {footer}\n                    </div>\n                )}\n            </div>\n        );\n    },\n)"},description:"Компонент выпадающего меню",name:"OptionsList",required:!1,type:{name:"FC<OptionsListProps & RefAttributes<HTMLDivElement>>"}},Optgroup:{defaultValue:{value:"({ children, className, label, size = 's' }: OptgroupProps) => (\n    <React.Fragment>\n        <div className={cn(styles.optgroup, className, styles[size])}>\n            <span className={styles.label}>{label}</span>\n        </div>\n        {children}\n    </React.Fragment>\n)"},description:"Компонент группы",name:"Optgroup",required:!1,type:{name:"FC<OptgroupProps>"}},Option:{defaultValue:{value:"({\n    size = 's',\n    className,\n    option,\n    children,\n    selected,\n    highlighted,\n    disabled,\n    multiple,\n    mobile,\n    Checkmark = mobile ? DefaultMobileCheckmark : DefaultCheckMark,\n    innerProps,\n    dataTestId,\n}) => {\n    const content = children || option.content || option.key;\n    const { showCheckMark = true } = option;\n\n    return (\n        <div\n            {...innerProps}\n            className={cn(styles.option, styles[size], className, {\n                [styles.highlighted]: !mobile && highlighted,\n                [styles.selected]: selected,\n                [styles.disabled]: disabled,\n            })}\n            data-test-id={dataTestId}\n        >\n            {Checkmark && showCheckMark && (\n                <Checkmark\n                    disabled={disabled}\n                    selected={selected}\n                    multiple={multiple}\n                    position='before'\n                />\n            )}\n\n            <div\n                className={cn(styles.content, {\n                    [styles.textContent]: !isValidElement(content),\n                })}\n            >\n                {content}\n            </div>\n\n            {/** Workaround чтобы для клика показывать отметку справа и всегда в виде иконки */}\n            {Checkmark && showCheckMark && (\n                <Checkmark\n                    disabled={disabled}\n                    selected={selected}\n                    multiple={multiple}\n                    position='after'\n                />\n            )}\n        </div>\n    );\n}"},description:"Компонент пункта меню",name:"Option",required:!1,type:{name:"FC<OptionProps>"}},zIndexPopover:{defaultValue:null,description:"z-index поповера",name:"zIndexPopover",required:!1,type:{name:"number"}},showEmptyOptionsList:{defaultValue:null,description:"Показывать OptionsList, если он пустой",name:"showEmptyOptionsList",required:!1,type:{name:"boolean"}},Input:{defaultValue:null,description:"Компонент ввода значения",name:"Input",required:!1,type:{name:'FC<Omit<InputHTMLAttributes<HTMLInputElement>, "value" | "size" | "defaultValue" | "onChange" | "onClick" | "onMouseDown" | "type" | "enterKeyHint"> & { ...; } & RefAttributes<...>>'}},inputProps:{defaultValue:{value:"{}"},description:"Пропсы, которые будут прокинуты в инпут",name:"inputProps",required:!1,type:{name:'(Omit<InputHTMLAttributes<HTMLInputElement>, "value" | "size" | "defaultValue" | "onChange" | "onClick" | "onMouseDown" | "type" | "enterKeyHint"> & { ...; } & Record<...>)'}},value:{defaultValue:null,description:"Значение поля ввода",name:"value",required:!1,type:{name:"string"}},readOnly:{defaultValue:null,description:"Поле доступно только для чтения",name:"readOnly",required:!1,type:{name:"boolean"}},success:{defaultValue:null,description:"Отображение иконки успеха",name:"success",required:!1,type:{name:"boolean"}},onInput:{defaultValue:null,description:"Обработчик ввода",name:"onInput",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/input-autocomplete/src/Component.desktop.tsx#InputAutocompleteDesktop"]={docgenInfo:InputAutocompleteDesktop.__docgenInfo,name:"InputAutocompleteDesktop",path:"packages/input-autocomplete/src/Component.desktop.tsx#InputAutocompleteDesktop"})}catch(__react_docgen_typescript_loader_error){}},"./packages/input-autocomplete/src/Component.mobile.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{I:function(){return InputAutocompleteMobile}});var objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react=__webpack_require__("./node_modules/react/index.js"),react_merge_refs_esm=__webpack_require__("./node_modules/react-merge-refs/dist/react-merge-refs.esm.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),lodash_throttle=__webpack_require__("./node_modules/lodash.throttle/index.js"),lodash_throttle_default=__webpack_require__.n(lodash_throttle),modern=__webpack_require__("./dist/button/modern/index.js"),input_modern=__webpack_require__("./dist/input/modern/index.js"),select_modern=__webpack_require__("./dist/select/modern/index.js"),defineProperty=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),form_control_modern=__webpack_require__("./dist/form-control/modern/index.js"),esm=__webpack_require__("./node_modules/@alfalab/hooks/dist/esm/index.js"),index_module_component="component_shmZr",index_module_field="field_lHc4C",index_module_disabled="disabled_fvYlN",index_module_placeholder="placeholder__30Tu",index_module_contentWrapper="contentWrapper_sbKRl",index_module_value="value_GSNlj",index_module_focusVisible="focusVisible_lmfo8",jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["size","open","error","hint","disabled","label","labelView","placeholder","value","innerProps","dataTestId","fieldClassName","Arrow","valueRenderer","toggleMenu","setSelectedItems","selectedMultiple"],AutocompleteMobileField=function AutocompleteMobileField(_ref){var _cn,_ref$size=_ref.size,size=void 0===_ref$size?"m":_ref$size,error=(_ref.open,_ref.error),hint=_ref.hint,disabled=_ref.disabled,label=_ref.label,_ref$labelView=_ref.labelView,labelView=void 0===_ref$labelView?"inner":_ref$labelView,placeholder=_ref.placeholder,value=_ref.value,innerProps=_ref.innerProps,dataTestId=_ref.dataTestId,fieldClassName=_ref.fieldClassName,Arrow=_ref.Arrow,restProps=(_ref.valueRenderer,_ref.toggleMenu,_ref.setSelectedItems,_ref.selectedMultiple,(0,objectWithoutProperties.Z)(_ref,_excluded)),_useState=(0,react.useState)(!1),_useState2=(0,slicedToArray.Z)(_useState,2),focused=_useState2[0],setFocused=_useState2[1],wrapperRef=(0,react.useRef)(null),_useFocus=(0,esm.KK)(wrapperRef,"keyboard"),focusVisible=(0,slicedToArray.Z)(_useFocus,1)[0],filled=Boolean(value),showLabel=!!label&&(filled||!placeholder||"outer"===labelView);return(0,jsx_runtime.jsx)("div",{className:index_module_component,ref:wrapperRef,onFocus:function onFocus(){return setFocused(!0)},onBlur:function onBlur(){return setFocused(!1)},children:(0,jsx_runtime.jsx)(form_control_modern.FormControl,(0,objectSpread2.Z)((0,objectSpread2.Z)((0,objectSpread2.Z)({fieldClassName:classnames_default()(index_module_field,fieldClassName,(_cn={},(0,defineProperty.Z)(_cn,index_module_disabled,disabled),(0,defineProperty.Z)(_cn,index_module_focusVisible,focusVisible),_cn)),block:!0,size:size,focused:focused,disabled:disabled,filled:filled,label:showLabel&&label,labelView:labelView,error:error,hint:hint,rightAddons:Arrow,"data-test-id":dataTestId},restProps),innerProps),{},{children:(0,jsx_runtime.jsxs)("div",{className:index_module_contentWrapper,children:[placeholder&&!filled&&(0,jsx_runtime.jsx)("span",{className:index_module_placeholder,children:placeholder}),filled&&(0,jsx_runtime.jsx)("div",{className:index_module_value,children:value})]})}))})};try{AutocompleteMobileField.displayName="AutocompleteMobileField",AutocompleteMobileField.__docgenInfo={description:"",displayName:"AutocompleteMobileField",props:{block:{defaultValue:null,description:"Растягивает компонент на ширину контейнера",name:"block",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"m"},description:"Размер компонента",name:"size",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'}]}},colors:{defaultValue:null,description:"Набор цветов для компонента",name:"colors",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"inverted"'}]}},disabled:{defaultValue:null,description:"Заблокированное состояние",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"Cостояние только для чтения",name:"readOnly",required:!1,type:{name:"boolean"}},filled:{defaultValue:null,description:"Заполненное состояние",name:"filled",required:!1,type:{name:"boolean"}},focused:{defaultValue:null,description:"Выбранное (фокус) состояние",name:"focused",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"Отображение ошибки",name:"error",required:!1,type:{name:"ReactNode"}},hint:{defaultValue:null,description:"Текст подсказки",name:"hint",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"Лейбл компонента",name:"label",required:!1,type:{name:"ReactNode"}},labelView:{defaultValue:{value:"inner"},description:"Вид лейбла внутри / снаружи",name:"labelView",required:!1,type:{name:"enum",value:[{value:'"inner"'},{value:'"outer"'}]}},leftAddons:{defaultValue:null,description:"Слот слева",name:"leftAddons",required:!1,type:{name:"ReactNode"}},rightAddons:{defaultValue:null,description:"Слот справа",name:"rightAddons",required:!1,type:{name:"ReactNode"}},bottomAddons:{defaultValue:null,description:"Слот под полем",name:"bottomAddons",required:!1,type:{name:"ReactNode"}},fieldClassName:{defaultValue:null,description:"Дополнительный класс для поля",name:"fieldClassName",required:!1,type:{name:"string"}},inputWrapperClassName:{defaultValue:null,description:"Дополнительный класс для поля",name:"inputWrapperClassName",required:!1,type:{name:"string"}},labelClassName:{defaultValue:null,description:"Дополнительный класс для лейбла",name:"labelClassName",required:!1,type:{name:"string"}},addonsClassName:{defaultValue:null,description:"Дополнительный класс для аддонов",name:"addonsClassName",required:!1,type:{name:"string"}},dataTestId:{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования",name:"dataTestId",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"Значение поля ввода",name:"value",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/input-autocomplete/src/autocomplete-mobile-field/Component.tsx#AutocompleteMobileField"]={docgenInfo:AutocompleteMobileField.__docgenInfo,name:"AutocompleteMobileField",path:"packages/input-autocomplete/src/autocomplete-mobile-field/Component.tsx#AutocompleteMobileField"})}catch(__react_docgen_typescript_loader_error){}var mobile_module_bottomAddonInput="bottomAddonInput_nFDlu",mobile_module_footer="footer_WM8GQ",Component_mobile_excluded=["Input","bottomSheetProps","bottomSheetHeaderAddonsProps","value","filter","name","Arrow","label","placeholder","size","open","onFilter","onChange","onOpen","onCancel","onClearFilter","continueButtonProps","cancelButtonProps","selected","multiple"],SELECTED=[],InputAutocompleteMobile=react.forwardRef((function(_ref,ref){var Input=_ref.Input,_ref$bottomSheetProps=_ref.bottomSheetProps,bottomSheetProps=void 0===_ref$bottomSheetProps?{}:_ref$bottomSheetProps,_ref$bottomSheetHeade=_ref.bottomSheetHeaderAddonsProps,bottomSheetHeaderAddonsProps=void 0===_ref$bottomSheetHeade?{}:_ref$bottomSheetHeade,_ref$value=_ref.value,value=void 0===_ref$value?"":_ref$value,_ref$filter=_ref.filter,filter=void 0===_ref$filter?"":_ref$filter,name=_ref.name,_ref$Arrow=_ref.Arrow,Arrow=void 0===_ref$Arrow?null:_ref$Arrow,label=_ref.label,placeholder=_ref.placeholder,_ref$size=_ref.size,size=void 0===_ref$size?"s":_ref$size,openProp=_ref.open,onFilter=_ref.onFilter,onChange=_ref.onChange,onOpen=_ref.onOpen,onCancel=_ref.onCancel,onClearFilter=_ref.onClearFilter,continueButtonProps=_ref.continueButtonProps,cancelButtonProps=_ref.cancelButtonProps,selected=_ref.selected,multiple=_ref.multiple,restProps=(0,objectWithoutProperties.Z)(_ref,Component_mobile_excluded),_useState=(0,react.useState)(!1),_useState2=(0,slicedToArray.Z)(_useState,2),open=_useState2[0],setOpen=_useState2[1],bottomSheetInputRef=(0,react.useRef)(null),targetRef=(0,react.useRef)(null),setBottomSheetVisibility=function setBottomSheetVisibility(isOpen){void 0===openProp&&setOpen(isOpen),onOpen&&onOpen({open:isOpen,name:name})},handleOptionsListTouchMove=(0,react.useMemo)((function(){return lodash_throttle_default()((function(){var input=bottomSheetInputRef.current;input&&document.activeElement===input&&input.blur()}),300)}),[]),handleApply=function handleApply(){setBottomSheetVisibility(!1),onChange(filter)},handleCancel=function handleCancel(){setBottomSheetVisibility(!1),onCancel&&onCancel()},handleInputFocus=function handleInputFocus(event){var input=bottomSheetInputRef.current;event.relatedTarget===targetRef.current&&input&&input===document.activeElement&&input.blur()};return(0,jsx_runtime.jsx)(select_modern.SelectMobile,(0,objectSpread2.Z)({ref:(0,react_merge_refs_esm.Z)([targetRef,ref]),selected:selected||SELECTED,open:Boolean(open||openProp),onOpen:function handleOpen(payload){setBottomSheetVisibility(Boolean(payload.open))},onChange:function handleChange(payload){var _bottomSheetInputRef$;(onChange(payload),multiple)&&(null===(_bottomSheetInputRef$=bottomSheetInputRef.current)||void 0===_bottomSheetInputRef$||_bottomSheetInputRef$.focus())},Arrow:Arrow,Field:AutocompleteMobileField,fieldProps:{value:value},placeholder:placeholder,label:label,size:size,name:name,multiple:multiple,useWithApplyHook:!1,bottomSheetProps:function getBottomSheetProps(){var Component=Input||input_modern.Input;return(0,objectSpread2.Z)((0,objectSpread2.Z)({actionButton:(0,jsx_runtime.jsxs)("div",{className:mobile_module_footer,children:[(0,jsx_runtime.jsx)(modern.Button,(0,objectSpread2.Z)((0,objectSpread2.Z)({block:!0,view:"secondary",size:"s",onClick:handleCancel},cancelButtonProps),{},{children:"Отмена"})),(0,jsx_runtime.jsx)(modern.Button,(0,objectSpread2.Z)((0,objectSpread2.Z)({block:!0,view:"primary",size:"s",onClick:handleApply},continueButtonProps),{},{children:"Продолжить"}))]}),title:label||placeholder,bottomAddons:(0,jsx_runtime.jsx)(Component,(0,objectSpread2.Z)((0,objectSpread2.Z)({block:!0,clear:!!onClearFilter,onClear:onClearFilter,value:filter,onInput:onFilter,placeholder:placeholder,onFocus:handleInputFocus},bottomSheetHeaderAddonsProps),{},{className:classnames_default()(mobile_module_bottomAddonInput,bottomSheetHeaderAddonsProps.className),ref:(0,react_merge_refs_esm.Z)([bottomSheetInputRef,bottomSheetHeaderAddonsProps.ref])})),initialHeight:"full"},bottomSheetProps),{},{containerProps:(0,objectSpread2.Z)({onTouchMove:handleOptionsListTouchMove},bottomSheetProps.containerProps)})}(),optionsListProps:{showFooter:!1}},restProps))}));try{InputAutocompleteMobile.displayName="InputAutocompleteMobile",InputAutocompleteMobile.__docgenInfo={description:"",displayName:"InputAutocompleteMobile",props:{className:{defaultValue:null,description:"Дополнительный класс",name:"className",required:!1,type:{name:"string"}},dataTestId:{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования",name:"dataTestId",required:!1,type:{name:"string"}},size:{defaultValue:{value:"s"},description:"Размер компонента",name:"size",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'}]}},id:{defaultValue:null,description:"Атрибут id",name:"id",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"Плейсхолдер поля",name:"placeholder",required:!1,type:{name:"string"}},onFocus:{defaultValue:null,description:"Обработчик блюра поля",name:"onFocus",required:!1,type:{name:"((event: FocusEvent<HTMLDivElement | HTMLInputElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"Обработчик фокуса поля",name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLDivElement | HTMLInputElement, Element>) => void)"}},onChange:{defaultValue:null,description:"Обработчик выбора",name:"onChange",required:!1,type:{name:"((payload: BaseSelectChangePayload) => void) & ((payload: string | BaseSelectChangePayload) => void)"}},name:{defaultValue:null,description:"Атрибут name",name:"name",required:!1,type:{name:"string"}},onOpen:{defaultValue:null,description:"Обработчик открытия\\закрытия селекта",name:"onOpen",required:!1,type:{name:"((payload: { open?: boolean; name?: string; }) => void) | undefined"}},open:{defaultValue:null,description:"Управление открытием",name:"open",required:!1,type:{name:"boolean"}},updatePopover:{defaultValue:null,description:"Хранит функцию, с помощью которой можно обновить положение поповера",name:"updatePopover",required:!1,type:{name:"MutableRefObject<() => void>"}},hint:{defaultValue:null,description:"Подсказка под полем",name:"hint",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"Лейбл поля",name:"label",required:!1,type:{name:"ReactNode"}},block:{defaultValue:null,description:"Растягивает компонент на ширину контейнера",name:"block",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Управление возможностью выбора значения",name:"disabled",required:!1,type:{name:"boolean"}},preventFlip:{defaultValue:null,description:"Запрещает поповеру менять свою позицию.\nНапример, если места снизу недостаточно,то он все равно будет показан снизу",name:"preventFlip",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Возможность выбрать несколько значений",name:"multiple",required:!1,type:{name:"boolean"}},selected:{defaultValue:null,description:"Список value выбранных пунктов (controlled-селект)",name:"selected",required:!1,type:{name:"string | OptionShape | (string | OptionShape)[] | null"}},Field:{defaultValue:null,description:"Компонент поля",name:"Field",required:!1,type:{name:"FC<FieldProps>"}},fieldClassName:{defaultValue:null,description:"Дополнительный класс для поля",name:"fieldClassName",required:!1,type:{name:"string"}},optionsListClassName:{defaultValue:null,description:"Дополнительный класс выпадающего меню",name:"optionsListClassName",required:!1,type:{name:"string"}},optionClassName:{defaultValue:null,description:"Дополнительный класс для пункта меню",name:"optionClassName",required:!1,type:{name:"string"}},optionGroupClassName:{defaultValue:null,description:"Дополнительный класс для компонента группы пунктов",name:"optionGroupClassName",required:!1,type:{name:"string"}},popperClassName:{defaultValue:null,description:"Дополнительный класс для поповера",name:"popperClassName",required:!1,type:{name:"string"}},options:{defaultValue:null,description:"Список вариантов выбора",name:"options",required:!0,type:{name:"(OptionShape | GroupShape)[]"}},defaultOpen:{defaultValue:null,description:"Начальное состояние селекта",name:"defaultOpen",required:!1,type:{name:"boolean"}},optionsSize:{defaultValue:null,description:"Размер пунктов меню",name:"optionsSize",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'}]}},optionsListWidth:{defaultValue:null,description:"Управляет шириной выпадающего меню.\nШирину определяет контент, либо ширина равна ширине поля",name:"optionsListWidth",required:!1,type:{name:"enum",value:[{value:'"content"'},{value:'"field"'}]}},labelView:{defaultValue:null,description:"Вид лейбла внутри / снаружи",name:"labelView",required:!1,type:{name:"enum",value:[{value:'"inner"'},{value:'"outer"'}]}},error:{defaultValue:null,description:"Отображение ошибки",name:"error",required:!1,type:{name:"ReactNode"}},allowUnselect:{defaultValue:null,description:"Позволяет снять выбранное значение",name:"allowUnselect",required:!1,type:{name:"boolean"}},closeOnSelect:{defaultValue:null,description:"Закрывать меню после выбора?",name:"closeOnSelect",required:!1,type:{name:"boolean"}},circularNavigation:{defaultValue:null,description:"При навигации с клавиатуры переходить от последнего пункта меню к первому и наоборот.",name:"circularNavigation",required:!1,type:{name:"boolean"}},popoverPosition:{defaultValue:null,description:"Позиционирование выпадающего списка",name:"popoverPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"right"'},{value:'"left"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},visibleOptions:{defaultValue:null,description:"Количество видимых пунктов меню (5 = 5.5)",name:"visibleOptions",required:!1,type:{name:"number"}},Arrow:{defaultValue:{value:"null"},description:"Компонент стрелки",name:"Arrow",required:!1,type:{name:"false | FC<ArrowProps> | null"}},fieldProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент поля",name:"fieldProps",required:!1,type:{name:"unknown"}},optionsListProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент списка",name:"optionsListProps",required:!1,type:{name:"unknown"}},optionProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент пункта меню",name:"optionProps",required:!1,type:{name:"unknown"}},Optgroup:{defaultValue:null,description:"Компонент группы",name:"Optgroup",required:!1,type:{name:"FC<OptgroupProps>"}},Option:{defaultValue:null,description:"Компонент пункта меню",name:"Option",required:!1,type:{name:"FC<OptionProps>"}},zIndexPopover:{defaultValue:null,description:"z-index поповера",name:"zIndexPopover",required:!1,type:{name:"number"}},showEmptyOptionsList:{defaultValue:null,description:"Показывать OptionsList, если он пустой",name:"showEmptyOptionsList",required:!1,type:{name:"boolean"}},onFilter:{defaultValue:null,description:"Обработчик ввода фильтра.",name:"onFilter",required:!0,type:{name:"(event: ChangeEvent<HTMLInputElement>) => void"}},value:{defaultValue:{value:""},description:"Значение поля ввода",name:"value",required:!1,type:{name:"string"}},filter:{defaultValue:{value:""},description:"Значение фильтра.",name:"filter",required:!1,type:{name:"string"}},onCancel:{defaultValue:null,description:'Обработчик нажатия на кнопку "Отмена".',name:"onCancel",required:!1,type:{name:"(() => void)"}},onClearFilter:{defaultValue:null,description:"Обработчик нажатия на крестик в инпуте фильтра.",name:"onClearFilter",required:!1,type:{name:"(() => void)"}},bottomSheetProps:{defaultValue:{value:"{}"},description:"Дополнительные пропсы компонента BottomSheet",name:"bottomSheetProps",required:!1,type:{name:"Partial<BottomSheetProps>"}},bottomSheetHeaderAddonsProps:{defaultValue:{value:"{}"},description:"Дополнительные пропсы на слот под заголовком компонента BottomSheet",name:"bottomSheetHeaderAddonsProps",required:!1,type:{name:"Record<string, unknown>"}},continueButtonProps:{defaultValue:null,description:'Дополнительные пропсы на кнопку "продолжить"',name:"continueButtonProps",required:!1,type:{name:"ButtonProps"}},cancelButtonProps:{defaultValue:null,description:'Дополнительные пропсы на кнопку "отмена"',name:"cancelButtonProps",required:!1,type:{name:"ButtonProps"}},Input:{defaultValue:null,description:"Кастомный инпут",name:"Input",required:!1,type:{name:"ElementType<any>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/input-autocomplete/src/Component.mobile.tsx#InputAutocompleteMobile"]={docgenInfo:InputAutocompleteMobile.__docgenInfo,name:"InputAutocompleteMobile",path:"packages/input-autocomplete/src/Component.mobile.tsx#InputAutocompleteMobile"})}catch(__react_docgen_typescript_loader_error){}},"./packages/input-autocomplete/src/responsive.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{X:function(){return InputAutocompleteResponsive}});var objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react=__webpack_require__("./node_modules/react/index.js"),esm=__webpack_require__("./node_modules/@alfalab/hooks/dist/esm/index.js"),Component_desktop=__webpack_require__("./packages/input-autocomplete/src/Component.desktop.tsx"),Component_mobile=__webpack_require__("./packages/input-autocomplete/src/Component.mobile.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["breakpoint"],InputAutocompleteResponsive=(0,react.forwardRef)((function(_ref,ref){var _ref$breakpoint=_ref.breakpoint,breakpoint=void 0===_ref$breakpoint?1024:_ref$breakpoint,restProps=(0,objectWithoutProperties.Z)(_ref,_excluded),_useMedia=(0,esm.GS)([["mobile","(max-width: ".concat(breakpoint-1,"px)")],["desktop","(min-width: ".concat(breakpoint,"px)")]],"desktop");return"desktop"===(0,slicedToArray.Z)(_useMedia,1)[0]?(0,jsx_runtime.jsx)(Component_desktop.$,(0,objectSpread2.Z)((0,objectSpread2.Z)({},restProps),{},{ref:ref})):(0,jsx_runtime.jsx)(Component_mobile.I,(0,objectSpread2.Z)((0,objectSpread2.Z)({},restProps),{},{ref:ref}))}));try{InputAutocompleteResponsive.displayName="InputAutocompleteResponsive",InputAutocompleteResponsive.__docgenInfo={description:"",displayName:"InputAutocompleteResponsive",props:{className:{defaultValue:null,description:"Дополнительный класс",name:"className",required:!1,type:{name:"string"}},dataTestId:{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования",name:"dataTestId",required:!1,type:{name:"string"}},size:{defaultValue:null,description:"Размер компонента",name:"size",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'}]}},id:{defaultValue:null,description:"Атрибут id",name:"id",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"Плейсхолдер поля",name:"placeholder",required:!1,type:{name:"string"}},onFocus:{defaultValue:null,description:"Обработчик блюра поля",name:"onFocus",required:!1,type:{name:"((event: FocusEvent<HTMLDivElement | HTMLInputElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"Обработчик фокуса поля",name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLDivElement | HTMLInputElement, Element>) => void)"}},onChange:{defaultValue:null,description:"Обработчик выбора",name:"onChange",required:!1,type:{name:"((payload: BaseSelectChangePayload) => void) & ((payload: string | BaseSelectChangePayload) => void)"}},onScroll:{defaultValue:null,description:"Обработчик скрола",name:"onScroll",required:!1,type:{name:"((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)"}},name:{defaultValue:null,description:"Атрибут name",name:"name",required:!1,type:{name:"string"}},onOpen:{defaultValue:null,description:"Обработчик открытия\\закрытия селекта",name:"onOpen",required:!1,type:{name:"((payload: { open?: boolean; name?: string; }) => void) | undefined"}},open:{defaultValue:null,description:"Управление открытием",name:"open",required:!1,type:{name:"boolean"}},updatePopover:{defaultValue:null,description:"Хранит функцию, с помощью которой можно обновить положение поповера",name:"updatePopover",required:!1,type:{name:"MutableRefObject<() => void>"}},hint:{defaultValue:null,description:"Подсказка под полем",name:"hint",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"Лейбл поля",name:"label",required:!1,type:{name:"ReactNode"}},block:{defaultValue:null,description:"Растягивает компонент на ширину контейнера",name:"block",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Управление возможностью выбора значения",name:"disabled",required:!1,type:{name:"boolean"}},preventFlip:{defaultValue:null,description:"Запрещает поповеру менять свою позицию.\nНапример, если места снизу недостаточно,то он все равно будет показан снизу",name:"preventFlip",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Возможность выбрать несколько значений",name:"multiple",required:!1,type:{name:"boolean"}},selected:{defaultValue:null,description:"Список value выбранных пунктов (controlled-селект)",name:"selected",required:!1,type:{name:"string | OptionShape | (string | OptionShape)[] | null"}},autocomplete:{defaultValue:null,description:"Возможность использовать селект как input-autocomplete",name:"autocomplete",required:!1,type:{name:"boolean"}},fieldClassName:{defaultValue:null,description:"Дополнительный класс для поля",name:"fieldClassName",required:!1,type:{name:"string"}},optionsListClassName:{defaultValue:null,description:"Дополнительный класс выпадающего меню",name:"optionsListClassName",required:!1,type:{name:"string"}},optionClassName:{defaultValue:null,description:"Дополнительный класс для пункта меню",name:"optionClassName",required:!1,type:{name:"string"}},optionGroupClassName:{defaultValue:null,description:"Дополнительный класс для компонента группы пунктов",name:"optionGroupClassName",required:!1,type:{name:"string"}},popperClassName:{defaultValue:null,description:"Дополнительный класс для поповера",name:"popperClassName",required:!1,type:{name:"string"}},options:{defaultValue:null,description:"Список вариантов выбора",name:"options",required:!0,type:{name:"(OptionShape | GroupShape)[]"}},defaultOpen:{defaultValue:null,description:"Начальное состояние селекта",name:"defaultOpen",required:!1,type:{name:"boolean"}},optionsSize:{defaultValue:null,description:"Размер пунктов меню",name:"optionsSize",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'}]}},optionsListWidth:{defaultValue:null,description:"Управляет шириной выпадающего меню.\nШирину определяет контент, либо ширина равна ширине поля",name:"optionsListWidth",required:!1,type:{name:"enum",value:[{value:'"content"'},{value:'"field"'}]}},labelView:{defaultValue:null,description:"Вид лейбла внутри / снаружи",name:"labelView",required:!1,type:{name:"enum",value:[{value:'"inner"'},{value:'"outer"'}]}},error:{defaultValue:null,description:"Отображение ошибки",name:"error",required:!1,type:{name:"ReactNode"}},allowUnselect:{defaultValue:null,description:"Позволяет снять выбранное значение",name:"allowUnselect",required:!1,type:{name:"boolean"}},closeOnSelect:{defaultValue:null,description:"Закрывать меню после выбора?",name:"closeOnSelect",required:!1,type:{name:"boolean"}},circularNavigation:{defaultValue:null,description:"При навигации с клавиатуры переходить от последнего пункта меню к первому и наоборот.",name:"circularNavigation",required:!1,type:{name:"boolean"}},popoverPosition:{defaultValue:null,description:"Позиционирование выпадающего списка",name:"popoverPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"right"'},{value:'"left"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},visibleOptions:{defaultValue:null,description:"Количество видимых пунктов меню (5 = 5.5)",name:"visibleOptions",required:!1,type:{name:"number"}},valueRenderer:{defaultValue:null,description:"Кастомный рендер выбранного пункта",name:"valueRenderer",required:!1,type:{name:"(({ selected, selectedMultiple, }: { selected?: OptionShape; selectedMultiple: OptionShape[]; }) => ReactNode)"}},Arrow:{defaultValue:null,description:"Компонент стрелки",name:"Arrow",required:!1,type:{name:"false | FC<ArrowProps> | null"}},fieldProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент поля",name:"fieldProps",required:!1,type:{name:"unknown"}},optionsListProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент списка",name:"optionsListProps",required:!1,type:{name:"unknown"}},optionProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент пункта меню",name:"optionProps",required:!1,type:{name:"unknown"}},OptionsList:{defaultValue:null,description:"Компонент выпадающего меню",name:"OptionsList",required:!1,type:{name:"FC<OptionsListProps & RefAttributes<HTMLDivElement>>"}},Optgroup:{defaultValue:null,description:"Компонент группы",name:"Optgroup",required:!1,type:{name:"FC<OptgroupProps>"}},Option:{defaultValue:null,description:"Компонент пункта меню",name:"Option",required:!1,type:{name:"FC<OptionProps>"}},zIndexPopover:{defaultValue:null,description:"z-index поповера",name:"zIndexPopover",required:!1,type:{name:"number"}},showEmptyOptionsList:{defaultValue:null,description:"Показывать OptionsList, если он пустой",name:"showEmptyOptionsList",required:!1,type:{name:"boolean"}},Input:{defaultValue:null,description:"Компонент ввода значения\nКастомный инпут",name:"Input",required:!1,type:{name:'(FC<Omit<InputHTMLAttributes<HTMLInputElement>, "value" | "size" | "defaultValue" | "onChange" | "onClick" | "onMouseDown" | "type" | "enterKeyHint"> & { ...; } & RefAttributes<...>> & ElementType<...>)'}},inputProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в инпут",name:"inputProps",required:!1,type:{name:'(Omit<InputHTMLAttributes<HTMLInputElement>, "value" | "size" | "defaultValue" | "onChange" | "onClick" | "onMouseDown" | "type" | "enterKeyHint"> & { ...; } & Record<...>)'}},value:{defaultValue:null,description:"Значение поля ввода",name:"value",required:!1,type:{name:"string"}},readOnly:{defaultValue:null,description:"Поле доступно только для чтения",name:"readOnly",required:!1,type:{name:"boolean"}},success:{defaultValue:null,description:"Отображение иконки успеха",name:"success",required:!1,type:{name:"boolean"}},onInput:{defaultValue:null,description:"Обработчик ввода",name:"onInput",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>) => void)"}},Field:{defaultValue:null,description:"Компонент поля",name:"Field",required:!1,type:{name:"FC<FieldProps>"}},onFilter:{defaultValue:null,description:"Обработчик ввода фильтра.",name:"onFilter",required:!0,type:{name:"(event: ChangeEvent<HTMLInputElement>) => void"}},filter:{defaultValue:null,description:"Значение фильтра.",name:"filter",required:!1,type:{name:"string"}},onCancel:{defaultValue:null,description:'Обработчик нажатия на кнопку "Отмена".',name:"onCancel",required:!1,type:{name:"(() => void)"}},onClearFilter:{defaultValue:null,description:"Обработчик нажатия на крестик в инпуте фильтра.",name:"onClearFilter",required:!1,type:{name:"(() => void)"}},bottomSheetProps:{defaultValue:null,description:"Дополнительные пропсы компонента BottomSheet",name:"bottomSheetProps",required:!1,type:{name:"Partial<BottomSheetProps>"}},bottomSheetHeaderAddonsProps:{defaultValue:null,description:"Дополнительные пропсы на слот под заголовком компонента BottomSheet",name:"bottomSheetHeaderAddonsProps",required:!1,type:{name:"Record<string, unknown>"}},continueButtonProps:{defaultValue:null,description:'Дополнительные пропсы на кнопку "продолжить"',name:"continueButtonProps",required:!1,type:{name:"ButtonProps"}},cancelButtonProps:{defaultValue:null,description:'Дополнительные пропсы на кнопку "отмена"',name:"cancelButtonProps",required:!1,type:{name:"ButtonProps"}},breakpoint:{defaultValue:{value:"1024"},description:"Контрольная точка, с нее начинается desktop версия",name:"breakpoint",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/input-autocomplete/src/Component.responsive.tsx#InputAutocompleteResponsive"]={docgenInfo:InputAutocompleteResponsive.__docgenInfo,name:"InputAutocompleteResponsive",path:"packages/input-autocomplete/src/Component.responsive.tsx#InputAutocompleteResponsive"})}catch(__react_docgen_typescript_loader_error){}}}]);