"use strict";(self.webpackChunk_alfalab_core_components=self.webpackChunk_alfalab_core_components||[]).push([[4613,3168,1341],{"./node_modules/@mdx-js/react/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{MDXContext:function(){return MDXContext},MDXProvider:function(){return MDXProvider},useMDXComponents:function(){return useMDXComponents},withMDXComponents:function(){return withMDXComponents}});var react=__webpack_require__("./node_modules/react/index.js");let MDXContext=react.createContext({});function withMDXComponents(Component){return boundMDXComponent;function boundMDXComponent(props){let allComponents=useMDXComponents(props.components);return react.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){let contextComponents=react.useContext(MDXContext);return react.useMemo(()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components},[contextComponents,components])}let emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react.createElement(MDXContext.Provider,{value:allComponents},children)}},"./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{r:function(){return DocsRenderer}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/react-dom-shim/dist/react-18.mjs"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),defaultComponents={code:_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.bD,a:_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Ct,..._storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.lO},ErrorBoundary=class extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(){super(...arguments),this.state={hasError:!1}}static getDerivedStateFromError(){return{hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err)}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,children)}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components},TDocs=_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.WI;return new Promise((resolve,reject)=>{__webpack_require__.e(1341).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@mdx-js/react/index.js")).then(({MDXProvider})=>(0,_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__.l)(react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorBoundary,{showException:reject,key:Math.random()},react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXProvider,{components},react__WEBPACK_IMPORTED_MODULE_0__.createElement(TDocs,{context,docsParameter}))),element)).then(()=>resolve())})},this.unmount=element=>{(0,_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__.K)(element)}}}},"./node_modules/@storybook/addon-docs/dist/index.mjs":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{$4:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.$4},Ed:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Ed},UG:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.UG},h_:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.h_},oG:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.oG}}),__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")},"./node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.js":function(module,__unused_webpack_exports,__webpack_require__){var mod,secondTarget,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to},mdx_react_shim_exports={};module.exports=__copyProps(__defProp({},"__esModule",{value:!0}),mdx_react_shim_exports),mod=__webpack_require__("./node_modules/@mdx-js/react/index.js"),secondTarget=module.exports,__copyProps(mdx_react_shim_exports,mod,"default"),secondTarget&&__copyProps(secondTarget,mod,"default")},"./packages/universal-modal/src/docs/Component.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},mobile:function(){return mobile},modal:function(){return modal},side_panel:function(){return side_panel}});var _modal$parameters,_modal$parameters2,_modal$parameters2$do,_side_panel$parameter,_side_panel$parameter2,_side_panel$parameter3,_mobile$parameters,_mobile$parameters2,_mobile$parameters2$d,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),_alfalab_core_components_button__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./dist/button/modern/index.js"),_alfalab_core_components_button_desktop__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./dist/button/modern/desktop/index.js"),_alfalab_core_components_button_mobile__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./dist/button/modern/mobile/index.js"),_desktop__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/universal-modal/src/desktop/index.ts"),_mobile__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./packages/universal-modal/src/mobile/index.ts"),_Component_responsive__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./packages/universal-modal/src/Component.responsive.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/react/jsx-runtime.js"),meta={title:"Components/UniversalModal",component:_Component_responsive__WEBPACK_IMPORTED_MODULE_8__.V,id:"UniversalModal"},Text=function(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("p",{style:{margin:"0 0 16px"},children:"Сейчас много говорят об отказах банков в проведении операций, блокировках интернет-банка. Это связано с тем, что Центральный банк РФ обязывает банки выявлять операции своих клиентов, потенциально нарушающие требования Федерального закона \xabО противодействии легализации (отмыванию) доходов, полученных преступным путем, и финансированию терроризма\xbb — 115-ФЗ"})},Content=function(){var _React$useState=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1),_React$useState2=(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_9__.Z)(_React$useState,2),showMore=_React$useState2[0],setShowMore=_React$useState2[1];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Text,{}),(showMore||(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("showMore"))&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Text,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Text,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Text,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Text,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Text,{})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_button__WEBPACK_IMPORTED_MODULE_2__.Button,{size:"xs",type:"Button",onClick:function onClick(){return setShowMore(!showMore)},children:showMore?"Скрыть":"Показать еще"})]})},modal={name:"Modal",render:function render(){var _useState=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),_useState2=(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_9__.Z)(_useState,2),isOpen=_useState2[0],setOpen=_useState2[1],verticalAlign=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("verticalAlign",["top","center","bottom"],"center"),width=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("width","500"),height=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("height","500"),overlay=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("overlay",!0),header=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("header",!0),headerTitle=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("header.title",""),headerAlign=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("header.align",["left","center"],"left"),stickyHeader=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("header.sticky",!1),stickyFooter=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("footer.sticky",!1),footerLayout=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("footer.layout",["start","center","space-between","column"],"start"),bigTitle=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("bigTitle",!1),margin=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.object)("margin",{}),open=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("open",!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{style:{display:"inline-block",background:"transparent"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_button__WEBPACK_IMPORTED_MODULE_2__.Button,{type:"button",size:"xs",onClick:function onClick(){return setOpen(!0)},children:"Открыть"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(_desktop__WEBPACK_IMPORTED_MODULE_5__.UniversalModalDesktop,{open:isOpen||open,horizontalAlign:"center",verticalAlign:verticalAlign,width:width,height:height,overlay:overlay,margin:margin,onClose:function onClose(){return setOpen(!1)},children:[header&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_desktop__WEBPACK_IMPORTED_MODULE_5__.UniversalModalDesktop.Header,{sticky:stickyHeader,title:headerTitle,align:headerAlign,bigTitle:bigTitle}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_desktop__WEBPACK_IMPORTED_MODULE_5__.UniversalModalDesktop.Content,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Content,{})}),stickyFooter&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(_desktop__WEBPACK_IMPORTED_MODULE_5__.UniversalModalDesktop.Footer,{sticky:stickyFooter,layout:footerLayout,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_button_desktop__WEBPACK_IMPORTED_MODULE_3__.ButtonDesktop,{size:48,view:"primary",children:"Сохранить"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_button_desktop__WEBPACK_IMPORTED_MODULE_3__.ButtonDesktop,{size:48,view:"secondary",children:"Отмена"})]})]})]})}},side_panel={name:"SidePanel",render:function render(){var _useState3=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),_useState4=(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_9__.Z)(_useState3,2),isOpen=_useState4[0],setOpen=_useState4[1],horizontalAlign=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("horizontalAlign",["start","end"],"start"),verticalAlign=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("verticalAlign",["top","center","bottom"],"center"),width=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("width","500"),height=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("height","500"),overlay=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("overlay",!0),header=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("header",!0),headerTitle=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("header.title",""),headerAlign=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("header.align",["left","center"],"left"),stickyHeader=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("header.sticky",!1),stickyFooter=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("footer.sticky",!1),footerLayout=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("footer.layout",["start","center","space-between","column"],"start"),bigTitle=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("bigTitle",!1),margin=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.object)("margin",{}),open=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("open",!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{style:{display:"inline-block",background:"transparent"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_button__WEBPACK_IMPORTED_MODULE_2__.Button,{type:"button",size:"xs",onClick:function onClick(){return setOpen(!0)},children:"Открыть"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(_desktop__WEBPACK_IMPORTED_MODULE_5__.UniversalModalDesktop,{open:isOpen||open,horizontalAlign:horizontalAlign,verticalAlign:verticalAlign,width:width,height:height,overlay:overlay,margin:margin,onClose:function onClose(){return setOpen(!1)},children:[header&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_desktop__WEBPACK_IMPORTED_MODULE_5__.UniversalModalDesktop.Header,{sticky:stickyHeader,title:headerTitle,align:headerAlign,bigTitle:bigTitle}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_desktop__WEBPACK_IMPORTED_MODULE_5__.UniversalModalDesktop.Content,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Content,{})}),stickyFooter&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(_desktop__WEBPACK_IMPORTED_MODULE_5__.UniversalModalDesktop.Footer,{sticky:stickyFooter,layout:footerLayout,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_button_desktop__WEBPACK_IMPORTED_MODULE_3__.ButtonDesktop,{size:48,view:"primary",children:"Сохранить"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_button_desktop__WEBPACK_IMPORTED_MODULE_3__.ButtonDesktop,{size:48,view:"secondary",children:"Отмена"})]})]})]})}},mobile={name:"Mobile",render:function render(){var _useState5=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),_useState6=(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_9__.Z)(_useState5,2),isOpen=_useState6[0],setOpen=_useState6[1],header=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("header",!0),headerTitle=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("header.title",""),headerAlign=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("header.align",["left","center"],"left"),stickyHeader=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("header.sticky",!1),stickyFooter=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("footer.sticky",!1),footerLayout=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("footer.layout",["start","center","space-between","column"],"start"),bigTitle=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("bigTitle",!1),open=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("open",!1),appearance=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("appearance",["bottom","right"],"bottom");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{style:{display:"inline-block",background:"transparent"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_button__WEBPACK_IMPORTED_MODULE_2__.Button,{type:"button",size:"xs",onClick:function onClick(){return setOpen(!0)},children:"Открыть"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(_mobile__WEBPACK_IMPORTED_MODULE_6__.UniversalModalMobile,{open:isOpen||open,appearance:appearance,onClose:function onClose(){return setOpen(!1)},children:[header&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_desktop__WEBPACK_IMPORTED_MODULE_5__.UniversalModalDesktop.Header,{sticky:stickyHeader,title:headerTitle,align:headerAlign,bigTitle:bigTitle}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_desktop__WEBPACK_IMPORTED_MODULE_5__.UniversalModalDesktop.Content,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Content,{})}),stickyFooter&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(_desktop__WEBPACK_IMPORTED_MODULE_5__.UniversalModalDesktop.Footer,{sticky:stickyFooter,layout:footerLayout,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_button_mobile__WEBPACK_IMPORTED_MODULE_4__.ButtonMobile,{size:56,view:"primary",children:"Сохранить"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_button_mobile__WEBPACK_IMPORTED_MODULE_4__.ButtonMobile,{size:56,view:"secondary",children:"Отмена"})]})]})]})}};__webpack_exports__.default=meta,modal.parameters=(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_10__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_10__.Z)({},modal.parameters),{},{docs:(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_10__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_10__.Z)({},null===(_modal$parameters=modal.parameters)||void 0===_modal$parameters?void 0:_modal$parameters.docs),{},{source:(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_10__.Z)({originalSource:"{\n  name: 'Modal',\n  render: () => {\n    const [isOpen, setOpen] = useState(false);\n    const verticalAlign = select('verticalAlign', ['top', 'center', 'bottom'], 'center');\n    const width = text('width', '500');\n    const height = text('height', '500');\n    const overlay = boolean('overlay', true);\n    const header = boolean('header', true);\n    const headerTitle = text('header.title', '');\n    const headerAlign = select('header.align', ['left', 'center'], 'left');\n    const stickyHeader = boolean('header.sticky', false);\n    const stickyFooter = boolean('footer.sticky', false);\n    const footerLayout = select('footer.layout', ['start', 'center', 'space-between', 'column'], 'start');\n    const bigTitle = boolean('bigTitle', false);\n    const margin = object('margin', {});\n    const open = boolean('open', false);\n    return <div style={{\n      display: 'inline-block',\n      background: 'transparent'\n    }}>\n                <Button type='button' size='xs' onClick={() => setOpen(true)}>\n                    Открыть\n                </Button>\n                <UniversalModalDesktop open={isOpen || open} horizontalAlign='center' verticalAlign={verticalAlign} width={width} height={height} overlay={overlay} margin={margin} onClose={() => setOpen(false)}>\n                    {header && <UniversalModalDesktop.Header sticky={stickyHeader} title={headerTitle} align={headerAlign} bigTitle={bigTitle} />}\n                    <UniversalModalDesktop.Content>\n                        <Content />\n                    </UniversalModalDesktop.Content>\n\n                    {stickyFooter && <UniversalModalDesktop.Footer sticky={stickyFooter} layout={footerLayout}>\n                            <ButtonDesktop size={48} view='primary'>\n                                Сохранить\n                            </ButtonDesktop>\n                            <ButtonDesktop size={48} view='secondary'>\n                                Отмена\n                            </ButtonDesktop>\n                        </UniversalModalDesktop.Footer>}\n                </UniversalModalDesktop>\n            </div>;\n  }\n}"},null===(_modal$parameters2=modal.parameters)||void 0===_modal$parameters2?void 0:null===(_modal$parameters2$do=_modal$parameters2.docs)||void 0===_modal$parameters2$do?void 0:_modal$parameters2$do.source)})}),side_panel.parameters=(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_10__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_10__.Z)({},side_panel.parameters),{},{docs:(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_10__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_10__.Z)({},null===(_side_panel$parameter=side_panel.parameters)||void 0===_side_panel$parameter?void 0:_side_panel$parameter.docs),{},{source:(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_10__.Z)({originalSource:"{\n  name: 'SidePanel',\n  render: () => {\n    const [isOpen, setOpen] = useState(false);\n    const horizontalAlign = select('horizontalAlign', ['start', 'end'], 'start');\n    const verticalAlign = select('verticalAlign', ['top', 'center', 'bottom'], 'center');\n    const width = text('width', '500');\n    const height = text('height', '500');\n    const overlay = boolean('overlay', true);\n    const header = boolean('header', true);\n    const headerTitle = text('header.title', '');\n    const headerAlign = select('header.align', ['left', 'center'], 'left');\n    const stickyHeader = boolean('header.sticky', false);\n    const stickyFooter = boolean('footer.sticky', false);\n    const footerLayout = select('footer.layout', ['start', 'center', 'space-between', 'column'], 'start');\n    const bigTitle = boolean('bigTitle', false);\n    const margin = object('margin', {});\n    const open = boolean('open', false);\n    return <div style={{\n      display: 'inline-block',\n      background: 'transparent'\n    }}>\n                <Button type='button' size='xs' onClick={() => setOpen(true)}>\n                    Открыть\n                </Button>\n                <UniversalModalDesktop open={isOpen || open} horizontalAlign={horizontalAlign} verticalAlign={verticalAlign} width={width} height={height} overlay={overlay} margin={margin} onClose={() => setOpen(false)}>\n                    {header && <UniversalModalDesktop.Header sticky={stickyHeader} title={headerTitle} align={headerAlign} bigTitle={bigTitle} />}\n                    <UniversalModalDesktop.Content>\n                        <Content />\n                    </UniversalModalDesktop.Content>\n\n                    {stickyFooter && <UniversalModalDesktop.Footer sticky={stickyFooter} layout={footerLayout}>\n                            <ButtonDesktop size={48} view='primary'>\n                                Сохранить\n                            </ButtonDesktop>\n                            <ButtonDesktop size={48} view='secondary'>\n                                Отмена\n                            </ButtonDesktop>\n                        </UniversalModalDesktop.Footer>}\n                </UniversalModalDesktop>\n            </div>;\n  }\n}"},null===(_side_panel$parameter2=side_panel.parameters)||void 0===_side_panel$parameter2?void 0:null===(_side_panel$parameter3=_side_panel$parameter2.docs)||void 0===_side_panel$parameter3?void 0:_side_panel$parameter3.source)})}),mobile.parameters=(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_10__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_10__.Z)({},mobile.parameters),{},{docs:(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_10__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_10__.Z)({},null===(_mobile$parameters=mobile.parameters)||void 0===_mobile$parameters?void 0:_mobile$parameters.docs),{},{source:(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_10__.Z)({originalSource:"{\n  name: 'Mobile',\n  render: () => {\n    const [isOpen, setOpen] = useState(false);\n    const header = boolean('header', true);\n    const headerTitle = text('header.title', '');\n    const headerAlign = select('header.align', ['left', 'center'], 'left');\n    const stickyHeader = boolean('header.sticky', false);\n    const stickyFooter = boolean('footer.sticky', false);\n    const footerLayout = select('footer.layout', ['start', 'center', 'space-between', 'column'], 'start');\n    const bigTitle = boolean('bigTitle', false);\n    const open = boolean('open', false);\n    const appearance = select('appearance', ['bottom', 'right'], 'bottom');\n    return <div style={{\n      display: 'inline-block',\n      background: 'transparent'\n    }}>\n                <Button type='button' size='xs' onClick={() => setOpen(true)}>\n                    Открыть\n                </Button>\n                <UniversalModalMobile open={isOpen || open} appearance={appearance} onClose={() => setOpen(false)}>\n                    {header && <UniversalModalDesktop.Header sticky={stickyHeader} title={headerTitle} align={headerAlign} bigTitle={bigTitle} />}\n                    <UniversalModalDesktop.Content>\n                        <Content />\n                    </UniversalModalDesktop.Content>\n\n                    {stickyFooter && <UniversalModalDesktop.Footer sticky={stickyFooter} layout={footerLayout}>\n                            <ButtonMobile size={56} view='primary'>\n                                Сохранить\n                            </ButtonMobile>\n                            <ButtonMobile size={56} view='secondary'>\n                                Отмена\n                            </ButtonMobile>\n                        </UniversalModalDesktop.Footer>}\n                </UniversalModalMobile>\n            </div>;\n  }\n}"},null===(_mobile$parameters2=mobile.parameters)||void 0===_mobile$parameters2?void 0:null===(_mobile$parameters2$d=_mobile$parameters2.docs)||void 0===_mobile$parameters2$d?void 0:_mobile$parameters2$d.source)})});let __namedExportsOrder=["modal","side_panel","mobile"]},"./packages/universal-modal/src/docs/Component.docs.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:function(){return Component_docs}}),__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mdx_react_shim=__webpack_require__("./node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),blocks=__webpack_require__("./.storybook/blocks/index.ts"),Component_stories=__webpack_require__("./packages/universal-modal/src/docs/Component.stories.tsx");function _createMdxContent(props){let _components=Object.assign({h2:"h2",p:"p",pre:"pre",code:"code"},(0,mdx_react_shim.useMDXComponents)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(_components.h2,{id:"анатомия",children:"Анатомия"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Modal построен как Compound Components. Состоит из компонентов Header, Content и Footer, содержащих в себе кастомизируемые слоты."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,mobileHeight:640,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"const dashedBackground = {\n    boxSizing: 'border-box',\n    border: '1px dashed #2288FA',\n    backgroundColor: '#D8EAFF',\n    borderRadius: 8,\n};\n\nconst headerAnatomyStyles = {\n    padding: '20px 20px 0',\n    display: 'flex',\n    addonStyles: {\n        width: 48,\n        height: 48,\n        ...dashedBackground,\n    },\n    titleStyles: {\n        flexGrow: 1,\n        height: 48,\n        ...dashedBackground,\n    },\n};\n\nconst contentAnatomyStyles = {\n    padding: '0 32px',\n    height: 336,\n    content: {\n        height: '100%',\n        ...dashedBackground,\n    },\n    flex: 1,\n};\n\nconst footerAnatomyStyles = {\n    boxSizing: 'border-box',\n    padding: '16px 32px 32px',\n    footer: {\n        height: 48,\n        ...dashedBackground,\n    },\n};\nrender(() => {\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <React.Fragment>\n            <Button onClick={() => setOpen((prev) => !prev)}>Показать анатомию</Button>\n            <UniversalModalDesktop\n                open={open}\n                width={500}\n                height={500}\n                onClose={() => setOpen(false)}\n            >\n                <div style={{ ...headerAnatomyStyles }}>\n                    <div style={{ ...headerAnatomyStyles.addonStyles }} />\n                    <div style={{ ...headerAnatomyStyles.titleStyles }} />\n                    <div style={{ ...headerAnatomyStyles.addonStyles }} />\n                </div>\n                <div style={{ ...contentAnatomyStyles }}>\n                    <div style={{ ...contentAnatomyStyles.content }}></div>\n                </div>\n                <div style={{ ...footerAnatomyStyles }}>\n                    <div style={{ ...footerAnatomyStyles.footer }}></div>\n                </div>\n            </UniversalModalDesktop>\n        </React.Fragment>\n    );\n});\n\n//MOBILE\nconst dashedBackground = {\n    boxSizing: 'border-box',\n    border: '1px dashed #2288FA',\n    backgroundColor: '#D8EAFF',\n    borderRadius: 8,\n};\n\nconst headerAnatomyStyles = {\n    padding: '20px 20px 0',\n    display: 'flex',\n    addonStyles: {\n        width: 48,\n        height: 48,\n        ...dashedBackground,\n    },\n    titleStyles: {\n        flexGrow: 1,\n        height: 48,\n        ...dashedBackground,\n    },\n};\n\nconst contentAnatomyStyles = {\n    padding: '0 32px',\n    height: 336,\n    content: {\n        height: '100%',\n        ...dashedBackground,\n    },\n    flex: 1,\n};\n\nconst footerAnatomyStyles = {\n    boxSizing: 'border-box',\n    padding: '16px 32px 32px',\n    footer: {\n        height: 48,\n        ...dashedBackground,\n    },\n};\nrender(() => {\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <React.Fragment>\n            <Button onClick={() => setOpen((prev) => !prev)}>Показать анатомию</Button>\n            <UniversalModalMobile\n                open={open}\n                width={500}\n                height={500}\n                onClose={() => setOpen(false)}\n            >\n                <div style={{ ...headerAnatomyStyles }}>\n                    <div style={{ ...headerAnatomyStyles.addonStyles }} />\n                    <div style={{ ...headerAnatomyStyles.titleStyles }} />\n                    <div style={{ ...headerAnatomyStyles.addonStyles }} />\n                </div>\n                <div style={{ ...contentAnatomyStyles }}>\n                    <div style={{ ...contentAnatomyStyles.content }}></div>\n                </div>\n                <div style={{ ...footerAnatomyStyles }}>\n                    <div style={{ ...footerAnatomyStyles.footer }}></div>\n                </div>\n            </UniversalModalMobile>\n        </React.Fragment>\n    );\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"примеры-наполнения",children:"Примеры наполнения"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"В десктопных модалках в зависимости от положения и размера меняется стиль заголовка в хедере и размер кнопок в футере."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,mobileHeight:640,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"const horizontalOptions = [\n    { key: 'start', content: 'Start' },\n    { key: 'center', content: 'Center' },\n    { key: 'end', content: 'End' },\n];\nconst verticalOptions = [\n    { key: 'top', content: 'Top' },\n    { key: 'center', content: 'Center' },\n    { key: 'bottom', content: 'Bottom' },\n];\n\nconst heightOptions = [\n    { key: '500', content: '500' },\n    { key: '600', content: '600' },\n    { key: '800', content: '800' },\n    { key: 'fullHeight', content: 'Full' },\n];\n\nconst widthOptions = [\n    { key: '500', content: '500' },\n    { key: '600', content: '600' },\n    { key: '800', content: '800' },\n    { key: 'fullWidth', content: 'Full' },\n];\n\nrender(() => {\n    const [open, setOpen] = React.useState(false);\n    const [horizontalAlign, setHorizontalAlign] = React.useState('center');\n    const [verticalAlign, setVerticalAlign] = React.useState('center');\n    const [modalWidth, setModalWidth] = React.useState('500');\n    const [modalHeight, setModalHeight] = React.useState('500');\n\n    const [headerButtonCross, setHeaderButtonCross] = React.useState(true);\n    const [headerButtonArrow, setHeaderButtonArrow] = React.useState(false);\n    const [headerType, setHeaderType] = React.useState('none');\n\n    const [mainFooterButton, setMainFooterButton] = React.useState(true);\n    const [additionalFooterButton, setAdditionalFooterButton] = React.useState(false);\n    const [verticalFooterButtons, setVerticalFooterButtons] = React.useState(false);\n    const [stretchFooterButtons, setStretchFooterButtons] = React.useState(false);\n\n    const [contentTitle, setContentTitle] = React.useState(false);\n    const [contentButton, setContentButton] = React.useState(false);\n\n    const handleRadioChange = (state) => {\n        setHeaderType(state);\n    };\n\n    const getButtonSize = () => {\n        if (horizontalAlign !== 'center') {\n            return 56;\n        } else {\n            if (modalWidth >= 800) {\n                return 56;\n            }\n            return 48;\n        }\n    };\n\n    const getMargin = () => {\n        if (horizontalAlign === 'center') {\n            if (verticalAlign === 'top') {\n                return {\n                    top: 12,\n                    ...(modalWidth === 'fullWidth' && {\n                        right: 12,\n                        left: 12,\n                    }),\n                    ...(modalHeight === 'fullHeight' && {\n                        bottom: 12,\n                    }),\n                };\n            }\n\n            if (verticalAlign === 'center') {\n                return {\n                    ...(modalWidth === 'fullWidth' && {\n                        right: 12,\n                        left: 12,\n                    }),\n                    ...(modalHeight === 'fullHeight' && {\n                        top: 12,\n                        bottom: 12,\n                    }),\n                };\n            }\n\n            if (verticalAlign === 'bottom') {\n                return {\n                    bottom: 12,\n                    ...(modalWidth === 'fullWidth' && {\n                        right: 12,\n                        left: 12,\n                    }),\n                    ...(modalHeight === 'fullHeight' && {\n                        top: 12,\n                    }),\n                };\n            }\n        } else {\n            return { top: 12, right: 12, bottom: 12, left: 12 };\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Button onClick={() => setOpen((prev) => !prev)}>Показать модалку</Button>\n            <Gap size={20} />\n            <Divider />\n            <Gap size={20} />\n            <div style={{ display: 'flex', flexDirection: 'column', width: 532 }}>\n                <div style={{ display: 'flex' }}>\n                    <div style={{ width: 260 }}>\n                        <SelectDesktop\n                            size={56}\n                            options={horizontalOptions}\n                            selected={horizontalAlign}\n                            label='Положение по горизонтали'\n                            block={true}\n                            onChange={({ selected }) => setHorizontalAlign(selected.key)}\n                        />\n                    </div>\n                    <Gap size={12} direction={'horizontal'} />\n                    <div style={{ width: 260 }}>\n                        <SelectDesktop\n                            size={56}\n                            options={verticalOptions}\n                            selected={verticalAlign}\n                            label='Положение по вертикали'\n                            block={true}\n                            onChange={({ selected }) => setVerticalAlign(selected.key)}\n                        />\n                    </div>\n                </div>\n                <Gap size={12} />\n                <div style={{ display: 'flex' }}>\n                    <div style={{ width: 260 }}>\n                        <SelectDesktop\n                            size={56}\n                            options={heightOptions}\n                            selected={modalHeight}\n                            label='Высота'\n                            block={true}\n                            onChange={({ selected }) => setModalHeight(selected.key)}\n                        />\n                    </div>\n                    <Gap size={12} direction={'horizontal'} />\n                    <div style={{ width: 260 }}>\n                        <SelectDesktop\n                            size={56}\n                            options={widthOptions}\n                            selected={modalWidth}\n                            label='Ширина'\n                            block={true}\n                            onChange={({ selected }) => setModalWidth(selected.key)}\n                        />\n                    </div>\n                </div>\n            </div>\n            <Gap size={24} />\n            Навигация\n            <Gap size={12} />\n            <div>\n                <Switch\n                    label='Крестик'\n                    checked={headerButtonCross}\n                    onChange={() => setHeaderButtonCross((prev) => !prev)}\n                />\n                <Gap size={12} />\n                <Switch\n                    label='Стрелка назад'\n                    checked={headerButtonArrow}\n                    onChange={() => setHeaderButtonArrow((prev) => !prev)}\n                />\n                <Gap size={12} />\n                Заголовок в шапке\n                <Gap size={12} />\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                    <Radio\n                        size={24}\n                        onChange={() => handleRadioChange('normal')}\n                        checked={headerType === 'normal'}\n                        label='Обычный'\n                        hint='Для модалок шириной до 800 рх'\n                    />\n                    <Gap size={12} />\n                    <Radio\n                        size={24}\n                        onChange={() => handleRadioChange('big')}\n                        checked={headerType === 'big'}\n                        label='Крупный'\n                        hint='Для широких модалок и сайдпанелей'\n                    />\n                    <Gap size={12} />\n                    <Radio\n                        size={24}\n                        onChange={() => handleRadioChange('none')}\n                        checked={headerType === 'none'}\n                        label='Без заголовка'\n                    />\n                </div>\n            </div>\n            <Gap size={24} />\n            Настройки футера\n            <Gap size={12} />\n            <div>\n                <Switch\n                    label='Основная кнопка'\n                    checked={mainFooterButton}\n                    onChange={() => {\n                        setContentButton(false);\n                        setMainFooterButton((prev) => !prev);\n                    }}\n                />\n                <Gap size={12} />\n                <Switch\n                    label='Дополнительная кнопка'\n                    checked={additionalFooterButton}\n                    onChange={() => {\n                        setContentButton(false);\n                        setAdditionalFooterButton((prev) => !prev);\n                    }}\n                />\n                <Gap size={12} />\n                <Switch\n                    label='Вертикальная ориентация'\n                    checked={verticalFooterButtons}\n                    onChange={() => setVerticalFooterButtons((prev) => !prev)}\n                />\n                <Gap size={12} />\n                <Switch\n                    label='Растянуть кнопки на всю ширину'\n                    hint='Только для горизонтального расположения'\n                    checked={stretchFooterButtons}\n                    onChange={() => setStretchFooterButtons((prev) => !prev)}\n                />\n            </div>\n            <Gap size={24} />\n            Настройки контента\n            <Gap size={12} />\n            <div>\n                <Switch\n                    label='Заголовок'\n                    hint='Если не стали размещать его в шапке'\n                    checked={contentTitle}\n                    onChange={() => {\n                        setContentTitle((prev) => !prev);\n                    }}\n                />\n                <Gap size={12} />\n                <Switch\n                    label='Кнопка'\n                    hint='Если не стали размещать его в футере'\n                    checked={contentButton}\n                    onChange={() => {\n                        setMainFooterButton(false);\n                        setAdditionalFooterButton(false);\n                        setContentButton((prev) => !prev);\n                    }}\n                />\n            </div>\n            <UniversalModalDesktop\n                open={open}\n                width={modalWidth}\n                height={modalHeight}\n                horizontalAlign={horizontalAlign}\n                verticalAlign={verticalAlign}\n                margin={getMargin()}\n                onClose={() => setOpen(false)}\n            >\n                <UniversalModalDesktop.Header\n                    sticky={true}\n                    {...(headerType !== 'none' &&\n                        !headerButtonArrow && {\n                            align: 'left',\n                            title: 'Почему банк проверяет мои операции?',\n                            bigTitle: headerType === 'big',\n                        })}\n                    {...(headerButtonArrow && {\n                        leftAddons: <ArrowButtonDesktop onClick={() => setOpen(false)} />,\n                        align: 'center',\n                        ...(headerType !== 'none' && {\n                            bottomAddons: 'Почему банк проверяет мои операции?',\n                            bigTitle: headerType === 'big',\n                        }),\n                    })}\n                    {...(headerButtonCross && {\n                        rightAddons: <CrossButtonDesktop onClick={() => setOpen(false)} />,\n                    })}\n                />\n                <UniversalModalDesktop.Content>\n                    {contentTitle && (\n                        <React.Fragment>\n                            <Typography.Title view='medium' font='system'>\n                                Почему банк проверяет мои операции?\n                            </Typography.Title>\n                            <Gap size={16} />\n                        </React.Fragment>\n                    )}\n\n                    <Typography.Text tag='p'>\n                        В 2001 году в России начал действовать Федеральный закон №115 \xabО\n                        противодействии легализации доходов, полученных преступным путём, и\n                        финансированию терроризма\xbb. В рамках закона банки могут блокировать карты,\n                        отказывать в проведении сомнительных операций, ограничить доступ в\n                        интернет-банк или запрашивать документы, если по операции клиента возникли\n                        подозрения.\n                    </Typography.Text>\n                    <br />\n                    <Typography.Text tag='p'>\n                        Требования 115-ФЗ и связанных с ним документов Банка России часто меняются,\n                        предприниматели не всегда успевают за ними следить. Последствия нарушений\n                        \xabантиотмывочного\xbb законодательства всегда неприятны: приходится остановить\n                        бизнес-процессы и доказать банку законность операций. Специалисты\n                        \xabАльфа-банка\xbb собрали понятные рекомендации, как сэкономить время на\n                        объяснения и предотвратить блокировки\n                    </Typography.Text>\n\n                    <Collapse collapsedLabel='Подробнее' expandedLabel='Скрыть'>\n                        <Typography.Text tag='p'>\n                            115-ФЗ Касается всех предпринимателей, фирм и физлиц, а также тех, кто\n                            пользуется банковским счётом для бизнеса, крупных денежных переводов или\n                            личных расчётов. Ограничения интернет-банка, блокировка карт\n                            добросовестных компаний могут произойти из-за неправильно оформленных\n                            документов, ошибок в платёжке или попыток снизить налоги.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Клиенты воспринимают ограничения как атаку со стороны банка, но чаще\n                            всего сами допускают ошибки или нарушения, которых можно избежать. Банки\n                            не преследуют цели доставить неудобства клиентам — они обязаны соблюдать\n                            законодательство и следовать инструкциям и рекомендациям ЦБ, а в\n                            противном случае рискуют лишиться лицензии.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Обналичивание — сомнительные операции, когда юрлицо или предприниматель\n                            снимает со счёта более 80% от оборота или переводит деньги на счета\n                            физлиц, которые затем снимают в наличной форме.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Вывод капитала за границу — это переводы нерезидентам по договорам об\n                            импорте работ/услуг и результатов интеллектуальной деятельности, по\n                            которым проведение расчётов осуществляется без одновременной уплаты НДС;\n                            по сделкам купли-продажи ценных бумаг, а также товаров, которые не\n                            пересекают границу России.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Транзитные операции — операции, в процессе которых деньги поступают на\n                            счёт компании от других резидентов и списываются в короткие сроки. При\n                            этом, как правило, в этих случаях по счёту нет начислений зарплат,\n                            уплаты налогов, и они не соответствуют заявленному компанией виду\n                            деятельности.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Запрашивать могут любые документы и устанавливать разные сроки их\n                            предоставления — это зависит от службы контроля конкретного банка.\n                            Обычно банки запрашивают чеки, счета или договора с контрагентами. В\n                            некоторых случаях бывает достаточно устных объяснений. Для проверки\n                            информации и пересмотра уровня риска банк может пригласить клиента в\n                            банк для устного разъяснения или выехать по месту ведения бизнеса\n                            клиента.\n                        </Typography.Text>\n                    </Collapse>\n                    {contentButton && (\n                        <React.Fragment>\n                            <Gap size={16} />\n                            <Gap size={24} />\n                            <Button size={48} onClick={() => setOpen(false)}>\n                                Кнопка\n                            </Button>\n                        </React.Fragment>\n                    )}\n                </UniversalModalDesktop.Content>\n                {(mainFooterButton || additionalFooterButton) && (\n                    <UniversalModalDesktop.Footer\n                        sticky={true}\n                        layout={verticalFooterButtons ? 'column' : 'start'}\n                    >\n                        {mainFooterButton && (\n                            <Button\n                                size={getButtonSize()}\n                                view='primary'\n                                block={stretchFooterButtons}\n                                onClick={() => setOpen(false)}\n                            >\n                                Primary\n                            </Button>\n                        )}\n\n                        {additionalFooterButton && (\n                            <Button\n                                size={getButtonSize()}\n                                view='secondary'\n                                block={stretchFooterButtons}\n                                onClick={() => setOpen(false)}\n                            >\n                                Secondary\n                            </Button>\n                        )}\n                    </UniversalModalDesktop.Footer>\n                )}\n            </UniversalModalDesktop>\n        </React.Fragment>\n    );\n});\n\n//MOBILE\nrender(() => {\n    const [open, setOpen] = React.useState(false);\n\n    const [headerButtonCross, setHeaderButtonCross] = React.useState(true);\n    const [headerButtonArrow, setHeaderButtonArrow] = React.useState(false);\n    const [headerTitle, setHeaderTitle] = React.useState(true);\n\n    const [mainFooterButton, setMainFooterButton] = React.useState(true);\n    const [additionalFooterButton, setAdditionalFooterButton] = React.useState(false);\n    const [verticalFooterButtons, setVerticalFooterButtons] = React.useState(false);\n    const [subtitle, setSubtitle] = React.useState(false);\n    const [alignment, setAlignment] = React.useState(false);\n\n    const [contentTitle, setContentTitle] = React.useState(false);\n    const [contentButton, setContentButton] = React.useState(false);\n\n    const [modalAppearance, setModalAppearance] = React.useState('bottom');\n\n    return (\n        <React.Fragment>\n            <Button onClick={() => setOpen((prev) => !prev)}>Показать модалку</Button>\n            <Gap size={20} />\n            <Divider />\n            <Gap size={20} />\n            Появление модалки\n            <Gap size={12} />\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n                <Radio\n                    size={24}\n                    label='Снизу'\n                    hint='Для обычных модалок'\n                    checked={modalAppearance === 'bottom'}\n                    onChange={() => setModalAppearance('bottom')}\n                />\n                <Gap size={12} />\n                <Radio\n                    size={24}\n                    label='Справа'\n                    hint='Для сайдпанелей'\n                    checked={modalAppearance === 'right'}\n                    onChange={() => setModalAppearance('right')}\n                />\n            </div>\n            <Gap size={24} />\n            Навигация\n            <Gap size={12} />\n            <div>\n                <Switch\n                    label='Крестик'\n                    checked={headerButtonCross}\n                    onChange={() => setHeaderButtonCross((prev) => !prev)}\n                />\n                <Gap size={12} />\n\n                <Switch\n                    label='Стрелка назад'\n                    checked={headerButtonArrow}\n                    onChange={() => setHeaderButtonArrow((prev) => !prev)}\n                />\n                <Gap size={12} />\n\n                <Switch\n                    label='Заголовок'\n                    checked={headerTitle}\n                    onChange={() => {\n                        setContentTitle(false);\n                        setHeaderTitle((prev) => !prev);\n                    }}\n                />\n                <Gap size={12} />\n                <Switch\n                    label='Подпись'\n                    checked={subtitle}\n                    onChange={() => setSubtitle((prev) => !prev)}\n                />\n                <Gap size={12} />\n                <Switch\n                    label='Выравнивание по центру'\n                    checked={alignment}\n                    onChange={() => setAlignment((prev) => !prev)}\n                />\n            </div>\n            <Gap size={24} />\n            Настройки футера\n            <Gap size={12} />\n            <div>\n                <Switch\n                    label='Основная кнопка'\n                    checked={mainFooterButton}\n                    onChange={() => {\n                        setContentButton(false);\n                        setMainFooterButton((prev) => !prev);\n                    }}\n                />\n                <Gap size={12} />\n                <Switch\n                    label='Дополнительная кнопка'\n                    checked={additionalFooterButton}\n                    onChange={() => {\n                        setContentButton(false);\n                        setAdditionalFooterButton((prev) => !prev);\n                    }}\n                />\n                <Gap size={12} />\n                <Switch\n                    label='Вертикальная ориентация'\n                    checked={verticalFooterButtons}\n                    onChange={() => setVerticalFooterButtons((prev) => !prev)}\n                />\n            </div>\n            <Gap size={24} />\n            Настройки контента\n            <Gap size={12} />\n            <div>\n                <Switch\n                    label='Заголовок'\n                    hint='Если не стали размещать его в шапке'\n                    checked={contentTitle}\n                    onChange={() => {\n                        setHeaderTitle(false);\n                        setContentTitle((prev) => !prev);\n                    }}\n                />\n                <Gap size={12} />\n                <Switch\n                    label='Кнопка'\n                    hint='Если не стали размещать его в футере'\n                    checked={contentButton}\n                    onChange={() => {\n                        setMainFooterButton(false);\n                        setAdditionalFooterButton(false);\n                        setContentButton((prev) => !prev);\n                    }}\n                />\n            </div>\n            <UniversalModalMobile\n                open={open}\n                onClose={() => setOpen(false)}\n                appearance={modalAppearance}\n            >\n                <UniversalModalMobile.Header\n                    sticky={true}\n                    {...(headerTitle &&\n                        !headerButtonArrow && {\n                            align: 'left',\n                            title: 'Почему банк проверяет мои операции?',\n                        })}\n                    {...(headerButtonArrow && {\n                        leftAddons: <ArrowButtonMobile onClick={() => setOpen(false)} />,\n                        align: 'left',\n                        ...(headerTitle && { title: 'Почему банк проверяет мои операции?' }),\n                    })}\n                    {...(headerButtonCross && {\n                        rightAddons: <CrossButtonMobile onClick={() => setOpen(false)} />,\n                    })}\n                    {...(alignment && { align: 'center' })}\n                    {...(subtitle && { subtitle: 'Подпись', titleSize: 'compact' })}\n                />\n                <UniversalModalMobile.Content>\n                    {contentTitle && (\n                        <React.Fragment>\n                            <Typography.Title view='medium' font='system'>\n                                Почему банк проверяет мои операции?\n                            </Typography.Title>\n                            <Gap size={16} />\n                        </React.Fragment>\n                    )}\n\n                    <Typography.Text tag='p'>\n                        В 2001 году в России начал действовать Федеральный закон №115 \xabО\n                        противодействии легализации доходов, полученных преступным путём, и\n                        финансированию терроризма\xbb. В рамках закона банки могут блокировать карты,\n                        отказывать в проведении сомнительных операций, ограничить доступ в\n                        интернет-банк или запрашивать документы, если по операции клиента возникли\n                        подозрения.\n                    </Typography.Text>\n                    <br />\n                    <Typography.Text tag='p'>\n                        Требования 115-ФЗ и связанных с ним документов Банка России часто меняются,\n                        предприниматели не всегда успевают за ними следить. Последствия нарушений\n                        \xabантиотмывочного\xbb законодательства всегда неприятны: приходится остановить\n                        бизнес-процессы и доказать банку законность операций. Специалисты\n                        \xabАльфа-банка\xbb собрали понятные рекомендации, как сэкономить время на\n                        объяснения и предотвратить блокировки\n                    </Typography.Text>\n\n                    <Collapse collapsedLabel='Подробнее' expandedLabel='Скрыть'>\n                        <Typography.Text tag='p'>\n                            115-ФЗ Касается всех предпринимателей, фирм и физлиц, а также тех, кто\n                            пользуется банковским счётом для бизнеса, крупных денежных переводов или\n                            личных расчётов. Ограничения интернет-банка, блокировка карт\n                            добросовестных компаний могут произойти из-за неправильно оформленных\n                            документов, ошибок в платёжке или попыток снизить налоги.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Клиенты воспринимают ограничения как атаку со стороны банка, но чаще\n                            всего сами допускают ошибки или нарушения, которых можно избежать. Банки\n                            не преследуют цели доставить неудобства клиентам — они обязаны соблюдать\n                            законодательство и следовать инструкциям и рекомендациям ЦБ, а в\n                            противном случае рискуют лишиться лицензии.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Обналичивание — сомнительные операции, когда юрлицо или предприниматель\n                            снимает со счёта более 80% от оборота или переводит деньги на счета\n                            физлиц, которые затем снимают в наличной форме.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Вывод капитала за границу — это переводы нерезидентам по договорам об\n                            импорте работ/услуг и результатов интеллектуальной деятельности, по\n                            которым проведение расчётов осуществляется без одновременной уплаты НДС;\n                            по сделкам купли-продажи ценных бумаг, а также товаров, которые не\n                            пересекают границу России.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Транзитные операции — операции, в процессе которых деньги поступают на\n                            счёт компании от других резидентов и списываются в короткие сроки. При\n                            этом, как правило, в этих случаях по счёту нет начислений зарплат,\n                            уплаты налогов, и они не соответствуют заявленному компанией виду\n                            деятельности.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Запрашивать могут любые документы и устанавливать разные сроки их\n                            предоставления — это зависит от службы контроля конкретного банка.\n                            Обычно банки запрашивают чеки, счета или договора с контрагентами. В\n                            некоторых случаях бывает достаточно устных объяснений. Для проверки\n                            информации и пересмотра уровня риска банк может пригласить клиента в\n                            банк для устного разъяснения или выехать по месту ведения бизнеса\n                            клиента.\n                        </Typography.Text>\n                    </Collapse>\n                    {contentButton && (\n                        <React.Fragment>\n                            <Gap size={32} />\n                            <Button size={48} onClick={() => setOpen(false)}>\n                                Кнопка\n                            </Button>\n                        </React.Fragment>\n                    )}\n                </UniversalModalMobile.Content>\n                {(mainFooterButton || additionalFooterButton) && (\n                    <UniversalModalMobile.Footer\n                        sticky={true}\n                        layout={verticalFooterButtons ? 'column' : 'start'}\n                    >\n                        {mainFooterButton && (\n                            <Button\n                                size={56}\n                                view='primary'\n                                block={true}\n                                onClick={() => setOpen(false)}\n                            >\n                                Primary\n                            </Button>\n                        )}\n\n                        {additionalFooterButton && (\n                            <Button\n                                size={56}\n                                view='secondary'\n                                block={true}\n                                onClick={() => setOpen(false)}\n                            >\n                                Secondary\n                            </Button>\n                        )}\n                    </UniversalModalMobile.Footer>\n                )}\n            </UniversalModalMobile>\n        </React.Fragment>\n    );\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"изменение-отступов",children:"Изменение отступов"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Для того чтобы корректно расположить модалку вблизи края экрана можно воспользоваться изменяемыми отступами."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,desktopOnly:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"const margins = [\n    { key: '0', content: '0' },\n    { key: '2', content: '2' },\n    { key: '4', content: '4' },\n    { key: '8', content: '8' },\n    { key: '12', content: '12' },\n    { key: '16', content: '16' },\n    { key: '20', content: '20' },\n    { key: '24', content: '24' },\n    { key: '32', content: '32' },\n    { key: '40', content: '40' },\n    { key: '48', content: '48' },\n    { key: '56', content: '56' },\n    { key: '64', content: '64' },\n    { key: '72', content: '72' },\n    { key: '80', content: '80' },\n    { key: '96', content: '96' },\n    { key: '128', content: '128' },\n];\n\nrender(() => {\n    const [open, setOpen] = React.useState(false);\n\n    const [margin, setMargin] = React.useState({\n        top: 12,\n        right: 12,\n        bottom: 12,\n        left: 12,\n    });\n\n    const updateMargin = (value, key) => {\n        setMargin((prev) => {\n            return {\n                ...prev,\n                [key]: Number(value),\n            };\n        });\n    };\n\n    return (\n        <React.Fragment>\n            <Button onClick={() => setOpen((prev) => !prev)}>Показать модалку</Button>\n            <Gap size={20} />\n            <Divider />\n            <Gap size={20} />\n            <div style={{ display: 'flex', flexDirection: 'column', width: 532 }}>\n                <div style={{ display: 'flex' }}>\n                    <div style={{ width: 260 }}>\n                        <SelectDesktop\n                            size={56}\n                            options={margins}\n                            selected={String(margin.left)}\n                            label='Левый'\n                            block={true}\n                            onChange={({ selected }) => updateMargin(selected.key, 'left')}\n                        />\n                    </div>\n                    <Gap size={12} direction={'horizontal'} />\n                    <div style={{ width: 260 }}>\n                        <SelectDesktop\n                            size={56}\n                            options={margins}\n                            selected={String(margin.right)}\n                            label='Правый'\n                            block={true}\n                            onChange={({ selected }) => updateMargin(selected.key, 'right')}\n                        />\n                    </div>\n                </div>\n                <Gap size={12} />\n                <div style={{ display: 'flex' }}>\n                    <div style={{ width: 260 }}>\n                        <SelectDesktop\n                            size={56}\n                            options={margins}\n                            selected={String(margin.top)}\n                            label='Верхний'\n                            block={true}\n                            onChange={({ selected }) => updateMargin(selected.key, 'top')}\n                        />\n                    </div>\n                    <Gap size={12} direction={'horizontal'} />\n                    <div style={{ width: 260 }}>\n                        <SelectDesktop\n                            size={56}\n                            options={margins}\n                            selected={String(margin.bottom)}\n                            label='Нижний'\n                            block={true}\n                            onChange={({ selected }) => updateMargin(selected.key, 'bottom')}\n                        />\n                    </div>\n                </div>\n            </div>\n            <UniversalModalDesktop\n                open={open}\n                width={'500'}\n                height={'fullHeight'}\n                horizontalAlign={'end'}\n                verticalAlign={'center'}\n                margin={margin}\n                onClose={() => setOpen(false)}\n            >\n                <UniversalModalDesktop.Header\n                    align='left'\n                    sticky={true}\n                    title='Почему банк проверяет мои операции?'\n                    rightAddons={<CrossButtonDesktop onClick={() => setOpen(false)} />}\n                />\n                <UniversalModalDesktop.Content>\n                    <Typography.Text tag='p'>\n                        В 2001 году в России начал действовать Федеральный закон №115 \xabО\n                        противодействии легализации доходов, полученных преступным путём, и\n                        финансированию терроризма\xbb. В рамках закона банки могут блокировать карты,\n                        отказывать в проведении сомнительных операций, ограничить доступ в\n                        интернет-банк или запрашивать документы, если по операции клиента возникли\n                        подозрения.\n                    </Typography.Text>\n                    <br />\n                    <Typography.Text tag='p'>\n                        Требования 115-ФЗ и связанных с ним документов Банка России часто меняются,\n                        предприниматели не всегда успевают за ними следить. Последствия нарушений\n                        \xabантиотмывочного\xbb законодательства всегда неприятны: приходится остановить\n                        бизнес-процессы и доказать банку законность операций. Специалисты\n                        \xabАльфа-банка\xbb собрали понятные рекомендации, как сэкономить время на\n                        объяснения и предотвратить блокировки\n                    </Typography.Text>\n\n                    <Collapse collapsedLabel='Подробнее' expandedLabel='Скрыть'>\n                        <Typography.Text tag='p'>\n                            115-ФЗ Касается всех предпринимателей, фирм и физлиц, а также тех, кто\n                            пользуется банковским счётом для бизнеса, крупных денежных переводов или\n                            личных расчётов. Ограничения интернет-банка, блокировка карт\n                            добросовестных компаний могут произойти из-за неправильно оформленных\n                            документов, ошибок в платёжке или попыток снизить налоги.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Клиенты воспринимают ограничения как атаку со стороны банка, но чаще\n                            всего сами допускают ошибки или нарушения, которых можно избежать. Банки\n                            не преследуют цели доставить неудобства клиентам — они обязаны соблюдать\n                            законодательство и следовать инструкциям и рекомендациям ЦБ, а в\n                            противном случае рискуют лишиться лицензии.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Обналичивание — сомнительные операции, когда юрлицо или предприниматель\n                            снимает со счёта более 80% от оборота или переводит деньги на счета\n                            физлиц, которые затем снимают в наличной форме.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Вывод капитала за границу — это переводы нерезидентам по договорам об\n                            импорте работ/услуг и результатов интеллектуальной деятельности, по\n                            которым проведение расчётов осуществляется без одновременной уплаты НДС;\n                            по сделкам купли-продажи ценных бумаг, а также товаров, которые не\n                            пересекают границу России.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Транзитные операции — операции, в процессе которых деньги поступают на\n                            счёт компании от других резидентов и списываются в короткие сроки. При\n                            этом, как правило, в этих случаях по счёту нет начислений зарплат,\n                            уплаты налогов, и они не соответствуют заявленному компанией виду\n                            деятельности.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Запрашивать могут любые документы и устанавливать разные сроки их\n                            предоставления — это зависит от службы контроля конкретного банка.\n                            Обычно банки запрашивают чеки, счета или договора с контрагентами. В\n                            некоторых случаях бывает достаточно устных объяснений. Для проверки\n                            информации и пересмотра уровня риска банк может пригласить клиента в\n                            банк для устного разъяснения или выехать по месту ведения бизнеса\n                            клиента.\n                        </Typography.Text>\n                    </Collapse>\n                </UniversalModalDesktop.Content>\n                <UniversalModalDesktop.Footer sticky={true} layout='start'>\n                    <Button size={48} view='primary' onClick={() => setOpen(false)}>\n                        Primary\n                    </Button>\n                    <Button size={48} view='secondary' onClick={() => setOpen(false)}>\n                        Secondary\n                    </Button>\n                </UniversalModalDesktop.Footer>\n            </UniversalModalDesktop>\n        </React.Fragment>\n    );\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"изменение-размеров",children:"Изменение размеров"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Размером десктопной модалки можно управлять через UI."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,desktopOnly:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const [open, setOpen] = React.useState(false);\n    const [dialogWidth, setDialogWidth] = React.useState(0);\n    const dialogRef = React.useRef(null);\n\n    const [modalWidth, setModalWidth] = React.useState(500);\n\n    const handleIncrease = () => {\n        setModalWidth((prev) => prev + 200);\n    };\n\n    const handleDecrease = () => {\n        setModalWidth((prev) => prev - 200);\n    };\n\n    React.useEffect(() => {\n        if (!dialogRef.current) {\n            dialogRef.current = document.querySelector('div[role=\"dialog\"]');\n        }\n\n        if (dialogRef.current) {\n            setDialogWidth(dialogRef.current.clientWidth);\n        }\n\n        return () => {\n            dialogRef.current = null;\n        };\n    });\n\n    return (\n        <React.Fragment>\n            <Button onClick={() => setOpen((prev) => !prev)}>Показать модалку</Button>\n            <UniversalModalDesktop\n                open={open}\n                width={modalWidth}\n                height={'fullHeight'}\n                horizontalAlign={'end'}\n                verticalAlign={'center'}\n                onClose={() => setOpen(false)}\n            >\n                <UniversalModalDesktop.Header\n                    align='left'\n                    sticky={true}\n                    title='Почему банк проверяет мои операции?'\n                    rightAddons={<CrossButtonDesktop onClick={() => setOpen(false)} />}\n                />\n                <UniversalModalDesktop.Content>\n                    <Typography.Text tag='p'>\n                        В 2001 году в России начал действовать Федеральный закон №115 \xabО\n                        противодействии легализации доходов, полученных преступным путём, и\n                        финансированию терроризма\xbb. В рамках закона банки могут блокировать карты,\n                        отказывать в проведении сомнительных операций, ограничить доступ в\n                        интернет-банк или запрашивать документы, если по операции клиента возникли\n                        подозрения.\n                    </Typography.Text>\n                    <br />\n                    <Typography.Text tag='p'>\n                        Требования 115-ФЗ и связанных с ним документов Банка России часто меняются,\n                        предприниматели не всегда успевают за ними следить. Последствия нарушений\n                        \xabантиотмывочного\xbb законодательства всегда неприятны: приходится остановить\n                        бизнес-процессы и доказать банку законность операций. Специалисты\n                        \xabАльфа-банка\xbb собрали понятные рекомендации, как сэкономить время на\n                        объяснения и предотвратить блокировки\n                    </Typography.Text>\n\n                    <Collapse collapsedLabel='Подробнее' expandedLabel='Скрыть'>\n                        <Typography.Text tag='p'>\n                            115-ФЗ Касается всех предпринимателей, фирм и физлиц, а также тех, кто\n                            пользуется банковским счётом для бизнеса, крупных денежных переводов или\n                            личных расчётов. Ограничения интернет-банка, блокировка карт\n                            добросовестных компаний могут произойти из-за неправильно оформленных\n                            документов, ошибок в платёжке или попыток снизить налоги.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Клиенты воспринимают ограничения как атаку со стороны банка, но чаще\n                            всего сами допускают ошибки или нарушения, которых можно избежать. Банки\n                            не преследуют цели доставить неудобства клиентам — они обязаны соблюдать\n                            законодательство и следовать инструкциям и рекомендациям ЦБ, а в\n                            противном случае рискуют лишиться лицензии.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Обналичивание — сомнительные операции, когда юрлицо или предприниматель\n                            снимает со счёта более 80% от оборота или переводит деньги на счета\n                            физлиц, которые затем снимают в наличной форме.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Вывод капитала за границу — это переводы нерезидентам по договорам об\n                            импорте работ/услуг и результатов интеллектуальной деятельности, по\n                            которым проведение расчётов осуществляется без одновременной уплаты НДС;\n                            по сделкам купли-продажи ценных бумаг, а также товаров, которые не\n                            пересекают границу России.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Транзитные операции — операции, в процессе которых деньги поступают на\n                            счёт компании от других резидентов и списываются в короткие сроки. При\n                            этом, как правило, в этих случаях по счёту нет начислений зарплат,\n                            уплаты налогов, и они не соответствуют заявленному компанией виду\n                            деятельности.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Запрашивать могут любые документы и устанавливать разные сроки их\n                            предоставления — это зависит от службы контроля конкретного банка.\n                            Обычно банки запрашивают чеки, счета или договора с контрагентами. В\n                            некоторых случаях бывает достаточно устных объяснений. Для проверки\n                            информации и пересмотра уровня риска банк может пригласить клиента в\n                            банк для устного разъяснения или выехать по месту ведения бизнеса\n                            клиента.\n                        </Typography.Text>\n                    </Collapse>\n                </UniversalModalDesktop.Content>\n                <UniversalModalDesktop.Footer sticky={true} layout='start'>\n                    <Button\n                        size={48}\n                        view='primary'\n                        onClick={handleIncrease}\n                        disabled={modalWidth > dialogWidth && dialogWidth !== 0}\n                    >\n                        Увеличить\n                    </Button>\n                    <Button\n                        size={48}\n                        view='secondary'\n                        onClick={handleDecrease}\n                        disabled={modalWidth <= 500}\n                    >\n                        Уменьшить\n                    </Button>\n                </UniversalModalDesktop.Footer>\n            </UniversalModalDesktop>\n        </React.Fragment>\n    );\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"смена-контента",children:"Смена контента"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Компонент можно настроить для реализации многошаговых модалок. В этом случае верхний край модалки должен быть зафиксирован, чтобы избежать неприятных скачков."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,mobileHeight:640,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"const modalsData = {\n    1: {\n        title: 'Первый уровень',\n        btnText: 'Дальше',\n        bg: '#D8EAFF',\n        color: '#2288FA',\n    },\n    2: {\n        title: 'Второй уровень',\n        btnText: 'Дальше',\n        bg: '#D1F1D7',\n        color: '#0CC44D',\n    },\n    3: {\n        title: 'Третий уровень',\n        btnText: 'Готово',\n        bg: '#FDE6C8',\n        color: '#FA9313',\n    },\n};\n\nrender(() => {\n    const [open, setOpen] = React.useState(false);\n    const [step, setStep] = React.useState(1);\n\n    const item = modalsData[step];\n\n    const commonStyles = {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        transition: 'background 0.2s ease-in, border 0.2s ease-in',\n        borderRadius: '8px',\n        background: item.bg,\n        color: item.color,\n        width: '100%',\n        boxSizing: 'border-box',\n    };\n\n    const handleNextButtonClick = () => {\n        if (step === Object.keys(modalsData).length) {\n            setOpen(false);\n            return;\n        }\n        setStep((prev) => prev + 1);\n    };\n\n    return (\n        <React.Fragment>\n            <Button onClick={() => setOpen((prev) => !prev)}>Показать модалку</Button>\n            <UniversalModalDesktop open={open} height={500} onClose={() => setOpen(false)}>\n                <UniversalModalDesktop.Header\n                    sticky={true}\n                    {...(step === 1 && {\n                        title: (\n                            <Typography.Title view='small' font='system'>\n                                {item.title}\n                            </Typography.Title>\n                        ),\n                    })}\n                    {...(step > 1 && {\n                        bottomAddons: (\n                            <Typography.Title view='small' font='system'>\n                                {item.title}\n                            </Typography.Title>\n                        ),\n                    })}\n                    {...(step > 1 && {\n                        leftAddons: (\n                            <ArrowButtonDesktop onClick={() => setStep((prev) => prev - 1)} />\n                        ),\n                    })}\n                    rightAddons={<CrossButtonDesktop onClick={() => setOpen(false)} />}\n                    align='center'\n                    {...(step === 1 && { align: 'left' })}\n                />\n                <UniversalModalDesktop.Content>\n                    <div\n                        style={{\n                            ...commonStyles,\n                            height: '100%',\n                        }}\n                    >\n                        <span style={{ fontWeight: 700, fontSize: '72px' }}>{step}</span>\n                    </div>\n                </UniversalModalDesktop.Content>\n                <UniversalModalDesktop.Footer sticky={true} layout='start'>\n                    <Button\n                        size={48}\n                        view='primary'\n                        onClick={handleNextButtonClick}\n                        block={isMobile()}\n                    >\n                        {item.btnText}\n                    </Button>\n                </UniversalModalDesktop.Footer>\n            </UniversalModalDesktop>\n        </React.Fragment>\n    );\n});\n\n//MOBILE\nconst modalsDataMobile = {\n    1: {\n        title: 'Первый уровень',\n        btnText: 'Дальше',\n        bg: '#D8EAFF',\n        color: '#2288FA',\n    },\n    2: {\n        title: 'Второй уровень',\n        btnText: 'Дальше',\n        bg: '#D1F1D7',\n        color: '#0CC44D',\n    },\n    3: {\n        title: 'Третий уровень',\n        btnText: 'Готово',\n        bg: '#FDE6C8',\n        color: '#FA9313',\n    },\n};\nrender(() => {\n    const [open, setOpen] = React.useState(false);\n    const [step, setStep] = React.useState(1);\n\n    const item = modalsDataMobile[step];\n\n    const commonStyles = {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        transition: 'background 0.2s ease-in, border 0.2s ease-in',\n        borderRadius: '8px',\n        background: item.bg,\n        color: item.color,\n        width: '100%',\n        boxSizing: 'border-box',\n    };\n\n    const handleNextButtonClick = () => {\n        if (step === Object.keys(modalsDataMobile).length) {\n            setOpen(false);\n            return;\n        }\n        setStep((prev) => prev + 1);\n    };\n\n    return (\n        <React.Fragment>\n            <Button onClick={() => setOpen((prev) => !prev)}>Показать модалку</Button>\n            <UniversalModalMobile open={open} height={500} onClose={() => setOpen(false)}>\n                <UniversalModalMobile.Header\n                    sticky={true}\n                    {...(step === 1 && {\n                        title: (\n                            <Typography.Title view='small' font='system'>\n                                {item.title}\n                            </Typography.Title>\n                        ),\n                    })}\n                    {...(step > 1 && {\n                        bottomAddons: (\n                            <Typography.Title view='small' font='system'>\n                                {item.title}\n                            </Typography.Title>\n                        ),\n                    })}\n                    {...(step > 1 && {\n                        leftAddons: (\n                            <ArrowButtonMobile onClick={() => setStep((prev) => prev - 1)} />\n                        ),\n                    })}\n                    rightAddons={<CrossButtonMobile onClick={() => setOpen(false)} />}\n                    align='center'\n                    {...(step === 1 && { align: 'left' })}\n                />\n                <UniversalModalMobile.Content>\n                    <div\n                        style={{\n                            ...commonStyles,\n                            height: '100%',\n                        }}\n                    >\n                        <span style={{ fontWeight: 700, fontSize: '72px' }}>{step}</span>\n                    </div>\n                </UniversalModalMobile.Content>\n                <UniversalModalMobile.Footer sticky={true} layout='start'>\n                    <Button\n                        size={56}\n                        view='primary'\n                        onClick={handleNextButtonClick}\n                        block={isMobile()}\n                    >\n                        {item.btnText}\n                    </Button>\n                </UniversalModalMobile.Footer>\n            </UniversalModalMobile>\n        </React.Fragment>\n    );\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"смена-модалок",children:"Смена модалок"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"При смене одной модалки на другую важно дождаться окончания анимации закрытия первой модалки перед появлением новой."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,desktopOnly:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const [openModal, setOpenModal] = React.useState(false);\n    const [openSecondModal, setOpenSecondModal] = React.useState(false);\n    const [backdropOpen, setBackdropOpen] = React.useState(false);\n\n    const handleButtonClick = () => {\n        setOpenModal(true);\n        setBackdropOpen(true);\n    };\n\n    const handleCloseModal = () => {\n        setOpenModal(false);\n        setTimeout(() => {\n            setOpenSecondModal(true);\n        }, 300);\n    };\n\n    const handleCloseSecondModal = () => {\n        setOpenSecondModal(false);\n        setBackdropOpen(false);\n    };\n\n    return (\n        <div style={{ position: 'relative', zIndex: 1 }}>\n            <Button onClick={handleButtonClick}>Показать модалку</Button>\n            <Backdrop open={backdropOpen} />\n            <UniversalModalDesktop\n                open={openModal}\n                height={400}\n                overlay={false}\n                onClose={handleCloseModal}\n            >\n                <UniversalModalDesktop.Header\n                    sticky={true}\n                    title='Одна модалка'\n                    align='left'\n                    rightAddons={<CrossButtonDesktop onClick={handleCloseModal} />}\n                />\n                <UniversalModalDesktop.Content>\n                    <Typography.Text view='primary-medium'>\n                        В 2001 году в России начал действовать Федеральный закон №115 \xabО\n                        противодействии легализации доходов, полученных преступным путём, и\n                        финансированию терроризма\xbb. В рамках закона банки могут блокировать карты,\n                        отказывать в проведении сомнительных операций, ограничить доступ в\n                        интернет-банк или запрашивать документы, если по операции клиента возникли\n                        подозрения.\n                    </Typography.Text>\n                </UniversalModalDesktop.Content>\n                <UniversalModalDesktop.Footer sticky={true} layout='start'>\n                    <Button size={48} view='primary' onClick={handleCloseModal}>\n                        Дальше\n                    </Button>\n                </UniversalModalDesktop.Footer>\n            </UniversalModalDesktop>\n\n            <UniversalModalDesktop\n                open={openSecondModal}\n                height={280}\n                overlay={false}\n                onClose={handleCloseSecondModal}\n            >\n                <UniversalModalDesktop.Header\n                    sticky={true}\n                    title='Другая модалка'\n                    align='left'\n                    rightAddons={<CrossButtonDesktop onClick={handleCloseSecondModal} />}\n                />\n                <UniversalModalDesktop.Content>\n                    <Typography.Text view='primary-medium'>\n                        В 2001 году в России начал действовать Федеральный закон №115 \xabО\n                        противодействии легализации доходов, полученных преступным путём, и\n                        финансированию терроризма\xbb.\n                    </Typography.Text>\n                </UniversalModalDesktop.Content>\n                <UniversalModalDesktop.Footer sticky={true} layout='start'>\n                    <Button size={48} view='primary' onClick={handleCloseSecondModal}>\n                        Дальше\n                    </Button>\n                </UniversalModalDesktop.Footer>\n            </UniversalModalDesktop>\n        </div>\n    );\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"оверлей",children:"Оверлей"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Чтобы дать доступ одновременно к модальному и немодальному слою можно отключить оверлей у десктопной версии модалки."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,desktopOnly:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <React.Fragment>\n            <Button onClick={() => setOpen((prev) => !prev)}>Показать модалку</Button>\n            <UniversalModalDesktop\n                open={open}\n                width={'500'}\n                height={'fullHeight'}\n                horizontalAlign={'end'}\n                verticalAlign={'center'}\n                overlay={false}\n                onClose={() => setOpen(false)}\n                margin={{ top: 12, right: 12, bottom: 12, left: 12 }}\n            >\n                <UniversalModalDesktop.Header\n                    align='left'\n                    sticky={true}\n                    title='Почему банк проверяет мои операции?'\n                    rightAddons={<CrossButtonDesktop onClick={() => setOpen(false)} />}\n                />\n                <UniversalModalDesktop.Content>\n                    <Typography.Text tag='p'>\n                        В 2001 году в России начал действовать Федеральный закон №115 \xabО\n                        противодействии легализации доходов, полученных преступным путём, и\n                        финансированию терроризма\xbb. В рамках закона банки могут блокировать карты,\n                        отказывать в проведении сомнительных операций, ограничить доступ в\n                        интернет-банк или запрашивать документы, если по операции клиента возникли\n                        подозрения.\n                    </Typography.Text>\n                    <br />\n                    <Typography.Text tag='p'>\n                        Требования 115-ФЗ и связанных с ним документов Банка России часто меняются,\n                        предприниматели не всегда успевают за ними следить. Последствия нарушений\n                        \xabантиотмывочного\xbb законодательства всегда неприятны: приходится остановить\n                        бизнес-процессы и доказать банку законность операций. Специалисты\n                        \xabАльфа-банка\xbb собрали понятные рекомендации, как сэкономить время на\n                        объяснения и предотвратить блокировки\n                    </Typography.Text>\n\n                    <Collapse collapsedLabel='Подробнее' expandedLabel='Скрыть'>\n                        <Typography.Text tag='p'>\n                            115-ФЗ Касается всех предпринимателей, фирм и физлиц, а также тех, кто\n                            пользуется банковским счётом для бизнеса, крупных денежных переводов или\n                            личных расчётов. Ограничения интернет-банка, блокировка карт\n                            добросовестных компаний могут произойти из-за неправильно оформленных\n                            документов, ошибок в платёжке или попыток снизить налоги.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Клиенты воспринимают ограничения как атаку со стороны банка, но чаще\n                            всего сами допускают ошибки или нарушения, которых можно избежать. Банки\n                            не преследуют цели доставить неудобства клиентам — они обязаны соблюдать\n                            законодательство и следовать инструкциям и рекомендациям ЦБ, а в\n                            противном случае рискуют лишиться лицензии.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Обналичивание — сомнительные операции, когда юрлицо или предприниматель\n                            снимает со счёта более 80% от оборота или переводит деньги на счета\n                            физлиц, которые затем снимают в наличной форме.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Вывод капитала за границу — это переводы нерезидентам по договорам об\n                            импорте работ/услуг и результатов интеллектуальной деятельности, по\n                            которым проведение расчётов осуществляется без одновременной уплаты НДС;\n                            по сделкам купли-продажи ценных бумаг, а также товаров, которые не\n                            пересекают границу России.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Транзитные операции — операции, в процессе которых деньги поступают на\n                            счёт компании от других резидентов и списываются в короткие сроки. При\n                            этом, как правило, в этих случаях по счёту нет начислений зарплат,\n                            уплаты налогов, и они не соответствуют заявленному компанией виду\n                            деятельности.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Запрашивать могут любые документы и устанавливать разные сроки их\n                            предоставления — это зависит от службы контроля конкретного банка.\n                            Обычно банки запрашивают чеки, счета или договора с контрагентами. В\n                            некоторых случаях бывает достаточно устных объяснений. Для проверки\n                            информации и пересмотра уровня риска банк может пригласить клиента в\n                            банк для устного разъяснения или выехать по месту ведения бизнеса\n                            клиента.\n                        </Typography.Text>\n                    </Collapse>\n                </UniversalModalDesktop.Content>\n                <UniversalModalDesktop.Footer sticky={true} layout='start'>\n                    <Button size={48} view='primary' onClick={() => setOpen(false)}>\n                        Primary\n                    </Button>\n                    <Button size={48} view='secondary' onClick={() => setOpen(false)}>\n                        Secondary\n                    </Button>\n                </UniversalModalDesktop.Footer>\n            </UniversalModalDesktop>\n        </React.Fragment>\n    );\n});\n"})})]})}var description=function(props={}){let{wrapper:MDXLayout}=Object.assign({},(0,mdx_react_shim.useMDXComponents)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)},mobile=__webpack_require__("./packages/universal-modal/src/mobile/index.ts"),desktop=__webpack_require__("./packages/universal-modal/src/desktop/index.ts"),Component_responsive=__webpack_require__("./packages/universal-modal/src/Component.responsive.tsx");function development_createMdxContent(props){let _components=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p"},(0,mdx_react_shim.useMDXComponents)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(_components.h2,{id:"подключение-responsive",children:"Подключение Responsive"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"// Atom import\nimport { UniversalModal } from '@alfalab/core-components/universal-modal';\nimport type {UniversalModalResponsiveProps } from '@alfalab/core-components/universal-modal';\n\nimport { ContentResponsive } from '@alfalab/core-components/universal-modal';\nimport type { ContentResponsiveProps } from '@alfalab/core-components/universal-modal';\n\nimport { HeaderResponsive } from '@alfalab/core-components/universal-modal';\nimport type { HeaderResponsiveProps } from '@alfalab/core-components/universal-modal';\n\nimport { FooterResponsive } from '@alfalab/core-components/universal-modal';\nimport type { FooterResponsiveProps } from '@alfalab/core-components/universal-modal';\n\n// Compound import\nimport { UniversalModalResponsive } from '@alfalab/core-components/universal-modal';\nimport type {UniversalModalResponsiveProps } from '@alfalab/core-components/universal-modal';\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"подключение-desktop",children:"Подключение Desktop"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"// Atom import\nimport { UniversalModalDesktopComponent } from '@alfalab/core-components/universal-modal/desktop';\nimport type { UniversalModalDesktopProps } from '@alfalab/core-components/universal-modal/desktop';\n\nimport { ContentDesktop } from '@alfalab/core-components/universal-modal/desktop';\nimport type { ContentDesktopProps } from '@alfalab/core-components/universal-modal/desktop';\n\nimport { HeaderDesktop } from '@alfalab/core-components/universal-modal/desktop';\nimport type { HeaderPropsDesktop } from '@alfalab/core-components/universal-modal/desktop';\n\nimport { FooterDesktop } from '@alfalab/core-components/universal-modal/desktop';\nimport type { FooterDesktopProps } from '@alfalab/core-components/universal-modal/desktop';\n\n// Compound import\nimport { UniversalModalDesktop } from '@alfalab/core-components/universal-modal/desktop';\nimport type { UniversalModalDesktopProps } from '@alfalab/core-components/universal-modal/desktop';\n\n// Components\nimport { ArrowButtonDesktop, CrossButtonDesktop } from '@alfalab/core-components/universal-modal/desktop';\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"подключение-mobile",children:"Подключение Mobile"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"// Atom import\nimport { UniversalModalMobileComponent } from '@alfalab/core-components/universal-modal/mobile';\nimport type { UniversalModalMobileProps } from '@alfalab/core-components/universal-modal/mobile';\n\nimport { ContentMobile } from '@alfalab/core-components/universal-modal/mobile';\nimport type { ContentMobileProps } from '@alfalab/core-components/universal-modal/mobile';\n\nimport { HeaderMobile } from '@alfalab/core-components/universal-modal/mobile';\nimport type { HeaderMobileProps } from '@alfalab/core-components/universal-modal/mobile';\n\nimport { FooterMobile } from '@alfalab/core-components/universal-modal/mobile';\nimport type { FooterMobileProps } from '@alfalab/core-components/universal-modal/mobile';\n\n// Compound import\nimport { UniversalModalMobile } from '@alfalab/core-components/universal-modal/mobile';\nimport type { UniversalModalMobileProps } from '@alfalab/core-components/universal-modal/mobile';\n\n// Components\nimport { ArrowButtonDesktopMobile, CrossButtonDesktopMobile } from '@alfalab/core-components/universal-modal/mobile';\n"})}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Из индекса импортируется responsive версия компонента."}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"использование-datatestid",children:"Использование dataTestId"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["В компоненте используются модификаторы для ",(0,jsx_runtime.jsx)(_components.code,{children:"dataTestId"}),".\nДля удобного поиска элементов можно воспользоваться функцией ",(0,jsx_runtime.jsx)(_components.code,{children:"getUniversalModalTestIds"}),".\nИмпорт из ",(0,jsx_runtime.jsx)(_components.code,{children:"@alfalab/core-components/universal-modal/shared"}),"."]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Функция возвращает объект:"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"{\n        modal: dataTestId,\n        header: `${dataTestId}-header`,\n        title: `${dataTestId}-header-title`,\n        content: `${dataTestId}-content`,\n        footer: `${dataTestId}-footer`,\n};\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"свойства",children:"Свойства"}),"\n",(0,jsx_runtime.jsx)(blocks.Ft,{components:{UniversalModalDesktop:desktop.UniversalModalDesktop,UniversalModalMobile:mobile.UniversalModalMobile,UniversalModalResponsive:Component_responsive._,"UniversalModalResponsive.Header":Component_responsive._.Header,"UniversalModalResponsive.Content":Component_responsive._.Content,"UniversalModalResponsive.Footer":Component_responsive._.Footer,"UniversalModalDesktop.Header":desktop.UniversalModalDesktop.Header,"UniversalModalDesktop.Content":desktop.UniversalModalDesktop.Content,"UniversalModalDesktop.Footer":desktop.UniversalModalDesktop.Footer,"UniversalModalMobile.Header":mobile.UniversalModalMobile.Header,"UniversalModalMobile.Content":mobile.UniversalModalMobile.Content,"UniversalModalMobile.Footer":mobile.UniversalModalMobile.Footer}}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"переменные",children:"Переменные"}),"\n",(0,jsx_runtime.jsx)(blocks.ZV,{css:"@import '../../vars/src/index.css';\n\n:root {\n    --universal-modal-header-background: var(--color-light-modal-bg-primary);\n    --universal-modal-footer-background: var(--color-light-modal-bg-primary);\n\n    /* scroll */\n    --universal-modal-header-highlight-background: var(--color-light-modal-bg-primary);\n    --universal-modal-footer-highlight-background: var(--color-light-modal-bg-primary);\n    --universal-modal-header-highlight-box-shadow: 0 1px 0 0 var(--color-light-neutral-300);\n    --universal-modal-footer-highlight-box-shadow: 0 -1px 0 0 var(--color-light-neutral-300);\n}\n"})]})}var development=function(props={}){let{wrapper:MDXLayout}=Object.assign({},(0,mdx_react_shim.useMDXComponents)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(development_createMdxContent,props)})):development_createMdxContent(props)};function Component_docs_createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{of:Component_stories}),"\n",(0,jsx_runtime.jsx)(blocks.yt,{name:"UniversalModal",children:"Модальное окно. Используется для отображения контента в модальном слое."}),"\n",(0,jsx_runtime.jsx)(blocks.mQ,{description:(0,jsx_runtime.jsx)(description,{}),development:(0,jsx_runtime.jsx)(development,{}),changelog:(0,jsx_runtime.jsx)(dist.UG,{children:"# Change Log\n\n## 1.0.4\n\n### Patch Changes\n\n<sup><time>28.03.2025</time></sup>\n\n### [#1629](https://github.com/core-ds/core-components/pull/1629)\n\n-   Исправили css токен для темной темы\n\n-   Обновлены зависимости\n    -   navigation-bar-private@0.8.0\n\n## 1.0.3\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   navigation-bar-private@0.7.0\n\n## 1.0.2\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   button@11.11.6\n    -   navigation-bar-private@0.6.2\n\n## 1.0.1\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   typography@4.12.0\n    -   navigation-bar-private@0.6.1\n\n## 1.0.0\n\n### Major Changes\n\n<sup><time>19.02.2025</time></sup>\n\n### [#1428](https://github.com/core-ds/core-components/pull/1428)\n\n-   Добавлен новый компонент `UniversalModal`\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   scrollbar@3.2.0\n    -   base-modal@5.9.0\n    -   shared@0.16.0\n    -   navigation-bar-private@0.6.0\n    -   button@11.11.5\n"})})]})}var Component_docs=function(props={}){let{wrapper:MDXLayout}=Object.assign({},(0,mdx_react_shim.useMDXComponents)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(Component_docs_createMdxContent,props)})):Component_docs_createMdxContent(props)}}}]);