name: build-demo

on:
    workflow_call:
        inputs:
            ref:
                description: Checkout ref
                required: false
                type: string
                default: ${{ github.sha }}
        outputs:
            run-id:
                description: Artifact workflow run id
                value: ${{ jobs.artifact.outputs.workflow_run_id }}

jobs:
    artifact:
        name: find artifact
        runs-on: ubuntu-latest
        outputs:
            workflow_run_id: ${{ steps.find.outputs.result }}
        steps:
            - uses: actions/checkout@v4
              with:
                  ref: ${{ inputs.ref }}

            - id: find
              uses: actions/github-script@v7
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  result-encoding: string
                  script: |
                      const { stdout } = await exec.getExecOutput('git', ['rev-list', '-n', '1', 'HEAD']);
                      const sha = stdout.trim();

                      const getRunId = async (page = 1) => {
                          const per_page = 30;
                          const { owner, repo } = context.repo;

                          const { data } = await github.rest.actions.listArtifactsForRepo({
                              owner,
                              repo,
                              page,
                              per_page,
                              name: 'build',
                          });

                          const artifact = data.artifacts
                              .filter((artifact) => !artifact.expired)
                              .find((artifact) => artifact.workflow_run.head_sha === sha);

                          if (artifact) {
                              return artifact.workflow_run.id;
                          }

                          if (page * per_page < data.total_count) {
                              return getRunId(page + 1);
                          }

                          return context.runId;
                      };

                      return await getRunId();

    build-demo:
        needs: artifact
        if: ${{ needs.artifact.outputs.workflow_run_id == github.run_id }}
        name: build demo
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  ref: ${{ inputs.ref }}
                  lfs: true

            - uses: hextion/core-components/.github/actions/ci-setup@master

            - name: build modern dist
              shell: bash
              env:
                  BUILD_CONCURRENCY: 4
                  BUILD_MODERN_ONLY: 'true'
              run: |
                  yarn build

            - name: build demo
              shell: bash
              env:
                  BUILD_STORYBOOK_FROM_DIST: 'true'
              run: |
                  yarn build-storybook

            - name: upload demo build
              uses: actions/upload-artifact@v4
              with:
                  name: build
                  path: build
                  if-no-files-found: error
