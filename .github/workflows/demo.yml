name: demo

on:
    pull_request:
    push:
        branches:
            - master
            - beta
            - next
    workflow_dispatch:
        inputs:
            version:
                description: Version of @balafla/core-components package, tag or sha
                required: false
                type: string

concurrency:
    group: ${{ github.workflow }}-${{ inputs.version || github.ref }}
    cancel-in-progress: true

jobs:
    params:
        name: resolve params
        runs-on: ubuntu-latest
        outputs:
            ref: ${{ steps.resolve.outputs.ref }}
            dir: ${{ steps.resolve.outputs.dir }}
        steps:
            - uses: actions/checkout@v4

            - uses: ./.github/actions/resolve-demo-params
              id: resolve
              with:
                  version: ${{ inputs.version }}
                  dir: ${{ github.event.pull_request.number }}

    build:
        name: build
        needs: params
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  ref: ${{ needs.params.outputs.ref }}
                  lfs: true

            - name: setup nodejs
              uses: actions/setup-node@v4
              with:
                  node-version: 18.x
                  cache: yarn

            - name: install dependencies
              shell: bash
              run: |
                  yarn install --frozen-lockfile

            - name: build dist
              shell: bash
              env:
                  BUILD_CONCURRENCY: 4
                  BUILD_MODERN_ONLY: 'true'
              run: |
                  yarn build

            - name: build demo
              shell: bash
              env:
                  BUILD_STORYBOOK_FROM_DIST: 'true'
              run: |
                  yarn build-storybook

            - name: upload build
              uses: actions/upload-artifact@v4
              with:
                  name: build
                  path: build
                  if-no-files-found: error

    deploy:
        name: deploy
        runs-on: ubuntu-latest
        needs: [build, params]
        if: ${{ github.repository == 'hextion/core-components' }}
        outputs:
            url: ${{ steps.url.outputs.result }}
        steps:
            - uses: actions/checkout@v4
              with:
                  ref: gh-pages
                  lfs: true
                  token: ${{ secrets.GH_TOKEN }}

            - name: clean up
              shell: bash
              run: |
                  rm -rf ${{ needs.params.outputs.dir }}

            - name: download build
              uses: actions/download-artifact@v4
              with:
                  name: build
                  path: ${{ needs.params.outputs.dir }}

            - name: copy legacy archive-versions.json
              if: ${{ needs.params.outputs.dir == 'master' }}
              shell: bash
              run: |
                  cp archive-versions.json ${{ needs.params.outputs.dir }}

            - name: deploy
              shell: bash
              run: |
                  git config user.name "core-ds-bot"
                  git config user.email "ds@gitmax.tech"

                  git add .
                  git commit -n -m "Deploy to GitHub Pages"
                  git push origin $(git branch --show-current)

            - name: demo url
              id: url
              uses: actions/github-script@v7
              with:
                  result-encoding: string
                  script: |
                      const { owner, repo } = context.repo;

                      return `https://${owner}.github.io/${repo}/${{ needs.params.outputs.dir }}`;

    pull-request:
        name: find pull request
        runs-on: ubuntu-latest
        outputs:
            number: ${{ steps.pull-request.outputs.number }}
        steps:
            - name: find pull request
              uses: jwalton/gh-find-current-pr@v1
              id: pull-request
              with:
                  github-token: ${{ secrets.GH_TOKEN }}

    comment:
        name: comment
        runs-on: ubuntu-latest
        needs: [deploy, pull-request]
        if: ${{ needs.pull-request.outputs.number != '' }}
        steps:
            - name: find comment
              uses: peter-evans/find-comment@v3
              id: comment
              with:
                  token: ${{ secrets.GH_TOKEN }}
                  issue-number: ${{ needs.pull-request.outputs.number }}
                  comment-author: 'hextion'
                  body-includes: Demo build

            - name: create or update comment
              uses: peter-evans/create-or-update-comment@v3
              with:
                  token: ${{ secrets.GH_TOKEN }}
                  comment-id: ${{ steps.comment.outputs.comment-id }}
                  issue-number: ${{ needs.pull-request.outputs.number }}
                  body: |
                      ## Demo build

                      [${{ needs.deploy.outputs.url }}](${{ needs.deploy.outputs.url }})
                  reactions: rocket
                  edit-mode: replace
