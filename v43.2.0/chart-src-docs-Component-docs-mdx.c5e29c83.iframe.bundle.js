"use strict";(self.webpackChunk_alfalab_core_components=self.webpackChunk_alfalab_core_components||[]).push([[9404],{"./node_modules/@mdx-js/react/lib/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{NF:function(){return withMDXComponents},Zo:function(){return MDXProvider},ah:function(){return useMDXComponents},pC:function(){return MDXContext}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents:allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components:components,children:children,disableParentContext:disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./node_modules/@storybook/addon-docs/dist/chunk-S4VUQJ4A.mjs":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{r:function(){return DocsRenderer}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/react-dom-shim/dist/react-18.mjs"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),defaultComponents={code:_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.bD,a:_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Ct,..._storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.lO},ErrorBoundary=class extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(){super(...arguments),this.state={hasError:!1}}static getDerivedStateFromError(){return{hasError:!0}}componentDidCatch(err){let{showException:showException}=this.props;showException(err)}render(){let{hasError:hasError}=this.state,{children:children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components},TDocs=_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.WI;return new Promise(((resolve,reject)=>{__webpack_require__.e(9433).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@mdx-js/react/index.js")).then((({MDXProvider:MDXProvider})=>(0,_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__.l)(react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorBoundary,{showException:reject,key:Math.random()},react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXProvider,{components:components},react__WEBPACK_IMPORTED_MODULE_0__.createElement(TDocs,{context:context,docsParameter:docsParameter}))),element))).then((()=>resolve()))}))},this.unmount=element=>{(0,_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__.K)(element)}}}},"./node_modules/@storybook/addon-docs/dist/index.mjs":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{$4:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.$4},Ed:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Ed},UG:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.UG},h_:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.h_},oG:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.oG}});__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-S4VUQJ4A.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")},"./packages/chart/src/docs/Component.docs.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:function(){return Component_docs}});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),blocks=__webpack_require__("./.storybook/blocks/index.ts"),Component_stories=__webpack_require__("./packages/chart/src/docs/Component.stories.tsx");function _createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(_components.h2,{id:"столбчатая-диаграмма",children:"Столбчатая диаграмма"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const cartesianGrid = {\n        vertical: false,\n        horizontal: true,\n        strokeDasharray: 0,\n        stroke: 'var(--color-light-border-primary)',\n        fill: 'var(--color-light-bg-primary)',\n    };\n    const legend = {\n        marginTop: 10,\n    };\n    const tooltip = {\n        separator: ' ',\n        offset: 20,\n        filterNull: true,\n        cursor: {\n            stroke: 'var(--color-light-border-primary)',\n            strokeWidth: 1,\n        },\n        isAnimationActive: true,\n        animationBegin: 0,\n        animationDuration: 500,\n        animationEasing: 'ease',\n        arrow: true,\n    };\n    const brush = {\n        dataKey: 'label',\n        travellerWidth: 20,\n        height: 20,\n        alwaysShowText: true,\n        stroke: 'var(--color-static-status-blue)',\n    };\n\n    const chartBar = (includeValue) => {\n        const labels = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь']\n        if (includeValue) {\n            return labels.map((label, idx) => ({\n            label: label,\n            value:  Math.floor(Math.random() * 250) + 10\n            }));\n        } else {\n            return labels;\n        }\n    };\n\n    const barChartFirst = {\n        zIndex: 1,\n        chart: 'bar',\n        properties: {\n            name: 'расход',\n            dataKey: 'uv',\n            formatter: (decimal) => `${decimal * 1000}`,\n            fill: 'var(--color-static-graphic-persimmon)',\n        },\n        data: chartBar(true),\n    };\n    const barChartSecond = {\n        zIndex: 10,\n        chart: 'bar',\n        properties: {\n            name: 'приход',\n            dataKey: 'pv',\n            formatter: (decimal) => `${decimal * 1000}`,\n            fill: 'var(--color-static-graphic-green-jungle)',\n        },\n        data: chartBar(true),\n    };\n    const lineChart = {\n        zIndex: 50,\n        chart: 'line',\n        icon: 'circleLine',\n        properties: {\n            name: 'остаток',\n            dataKey: 'cnt',\n            stroke: 'var(--color-static-status-blue)',\n            dot: true,\n            dotSettings: {\n                scale: 1.5,\n                initScale: 1,\n                width: 18,\n                height: 18,\n            },\n            formatter: (decimal) => `${decimal * 1000}`,\n            type: 'monotone',\n            strokeWidth: 2,\n        },\n        data: chartBar(true),\n    };\n    const composeChart = {\n        initMargin: {\n            left: 20,\n        },\n        barSize: 10,\n    };\n    const xAxis = {\n        tickLine: false,\n        axisLine: false,\n        interval: 'preserveStartEnd',\n        tickMargin: 10,\n        dataKey: 'label',\n    };\n    const yAxis = {\n        axisLine: false,\n        type: 'number',\n        tickCount: 6,\n        tickLine: false,\n        tickMargin: 0,\n        tickFormatter: (decimal) => `${decimal}\\xa0тыс.`,\n    };\n\n    return (\n        <div style={{ display: 'flex' }}>\n            <div style={{ width: '600px', height: '400px' }}>\n                <Chart\n                    id='bar-chart'\n                    composeChart={composeChart}\n                    cartesianGrid={cartesianGrid}\n                    xAxis={xAxis}\n                    yAxis={yAxis}\n                    tooltip={tooltip}\n                    legend={legend}\n                    brush={brush}\n                    labels={chartBar(false)}\n                    series={[barChartFirst, barChartSecond, lineChart]}\n                />\n            </div>\n        </div>\n    );\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"гистограмма",children:"Гистограмма"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const composeChart = {\n        barCategoryGap: '5%',\n    };\n    const xAxis = {\n        axisLine: false,\n        type: 'category',\n        interval: 'preserveStartEnd',\n        tickLine: false,\n        tickMargin: 10,\n        dataKey: 'label',\n    };\n    const yAxis = {\n        hide: true,\n    };\n    const labelsBarChart = [\n        'Long label',\n        'Label1',\n        'Label2',\n        'Label3',\n        'Label4',\n        'Label5',\n        'Label6',\n        'Label7',\n    ];\n    const barChart = {\n        chart: 'bar',\n        radius: { top: 10, bottom: 10, } || 0,\n        labelList: {\n            offset: 10,\n        },\n        properties: {\n            name: 'приход',\n            dataKey: 'cm',\n            formatter: (decimal) => `${decimal * 1000}`,\n            fill: 'var(--color-static-graphic-green-jungle)',\n        },\n        data: [\n            {\n                label: 'Long label',\n                value: 5000,\n            },\n            {\n                label: 'Label1',\n                value: 650,\n            },\n            {\n                label: 'Label2',\n                value: 3522,\n            },\n            {\n                label: 'Label3',\n                value: 0,\n            },\n            {\n                label: 'Label4',\n                value: 2000,\n            },\n            {\n                label: 'Label5',\n                value: 1043,\n            },\n            {\n                label: 'Label6',\n                value: 600,\n            },\n            {\n                label: 'Label7',\n                value: 1,\n            },\n        ],\n    };\n        \n    return (\n        <div style={{ display: 'flex' }}>\n           <div style={{ width: '600px', height: '400px' }}>\n                    <Chart\n                        id='bar-chart'\n                        composeChart={composeChart}\n                        xAxis={xAxis}\n                        yAxis={yAxis}\n                        labels={labelsBarChart}\n                        series={[barChart]}\n                    />\n            </div>\n        </div>\n    );\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"линейный-график",children:"Линейный график"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const formatXAxis = (time) => format(time, 'dd LLL');\n    const cartesianGrid = {\n        stroke: 'var(--color-light-border-primary)',\n        fill: 'var(--color-light-bg-primary)',\n    };\n    const composeChart = {\n        barSize: 24,\n    };\n    const xAxis = {\n        axisLine: false,\n        type: 'category',\n        interval: 'preserveStartEnd',\n        minTickGap: 20,\n        tickLine: false,\n        dataKey: 'label',\n        tickFormatter: formatXAxis,\n        tickType: 'point',\n    };\n    const yAxis = {\n        axisLine: false,\n        type: 'number',\n        tickCount: 6,\n        interval: 'preserveStartEnd',\n        tickLine: false,\n        tickSize: 6,\n    };\n    const legend = {\n        verticalAlign: 'top',\n        marginTop: 15,\n        iconHeight: 20,\n    };\n    const tooltip = {\n        separator: ' ',\n        offset: 20,\n        filterNull: true,\n        cursor: {\n            stroke: 'var(--color-light-border-primary)',\n            strokeWidth: 1,\n        },\n        isAnimationActive: true,\n        animationBegin: 0,\n        animationDuration: 500,\n        animationEasing: 'ease',\n        arrow: true,\n        labelFormatter: formatXAxis,\n    };\n    const brush = {\n        dataKey: 'label',\n        travellerWidth: 20,\n        brushMargin: 10,\n        height: 20,\n        stroke: 'var(--color-static-status-blue)',\n        alwaysShowText: true,\n        tickFormatter: formatXAxis,\n    };\n\n    const chartData = (num, includeValue) => {\n        const labels = Array(20).fill(null).map((_, idx) => {\n            const date = new Date('2020-12-18');\n            date.setDate(date.getDate() + idx);\n            return date.getTime();\n        });\n\n        if (includeValue) {\n            return labels.map((label, idx) => ({\n            label: idx === 0 ? label : labels[idx - 1],\n            value: idx === 0 ? 15 : Math.floor(Math.random() * num) + 10\n            }));\n        } else {\n            return labels;\n        }\n    };\n\n    const lineChart = {\n        chart: 'line',\n        icon: 'strokeCircle',\n        properties: {\n            name: 'текущий период',\n            dataKey: 'b',\n            stroke: 'var(--color-static-status-blue)',\n            dot: true,\n            dotSettings: {\n                scale: 1.5,\n                initScale: 0,\n                width: 18,\n                height: 18,\n            },\n            inheritStroke: true,\n            type: 'monotone',\n            strokeWidth: 2,\n            strokeDasharray: '10 10',\n        },\n        data: chartData(30, true)\n    };\n    const areaChart = {\n        chart: 'area',\n        icon: 'filledCircle',\n        offset: 0.1,\n        gradient: {\n            gid: 'ar-grad',\n            points: [\n                {\n                    offset: 0,\n                    stopColor: 'rgba(0, 112, 224, 0.2)',\n                    stopOpacity: 1,\n                },\n                {\n                    offset: 95,\n                    stopColor: 'rgba(0, 128, 255, 0)',\n                    stopOpacity: 1,\n                },\n            ],\n        },\n        properties: {\n            name: 'предыдущий период',\n            dataKey: 'a',\n            type: 'monotone',\n            stroke: 'var(--color-static-status-blue)',\n            dotSettings: {\n                scale: 1.5,\n                initScale: 0,\n                width: 18,\n                height: 18,\n            },\n            dot: true,\n            strokeWidth: 2,\n        },\n        data: chartData(50, true)\n    };\n    \n    return (\n        <div style={{ display: 'flex' }}>\n            <div style={{ width: '600px', height: '400px' }}>\n                    <Chart\n                        id={'line-chart'}\n                        composeChart={composeChart}\n                        cartesianGrid={cartesianGrid}\n                        xAxis={xAxis}\n                        yAxis={yAxis}\n                        tooltip={tooltip}\n                        legend={legend}\n                        brush={brush}\n                        labels={chartData(30, false)}\n                        series={[lineChart, areaChart]}\n                    />\n            </div>\n        </div>\n    );\n});\n"})})]})}var description=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)},src=__webpack_require__("./packages/chart/src/index.ts");function development_createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p",ul:"ul",li:"li"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(_components.h2,{id:"подключение",children:"Подключение"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"import { Chart } from '@alfalab/core-components/chart';\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"основа-компонента",children:"Основа компонента"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Компонент для построения графиков основан на библиотеке основаной на D3 с лицензией - MIT https://recharts.org.\nВ данный момент компонент поддерживает три типа графиков: bar, line, area."}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"данные-для-отрисовки",children:"Данные для отрисовки"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:"Хoptions.labels - массив меток string | number"}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"options.series - массив объектов с параметрами грaфиков с обязательным полем data"}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"options.series.data - массив данных, который должен состоять из меток label: string | number и значений value: number"}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"свойства",children:"Свойства"}),"\n",(0,jsx_runtime.jsx)(dist.$4,{of:src.Chart}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"пример-объекта-с-дефолтными-значениями",children:"Пример объекта с дефолтными значениями"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"options: {\n    /**\n     * Oбязательное уникальное поле, такие елменты как `legend`\n     * `linearGradient` используют его\n     */\n    id,\n\n    /**\n     * Компонент контейнера, позволяющий адаптировать диаграммы к размеру\n     * родительского контейнера\n     */\n    responsiveContainer?: {\n        /**\n         * Значение для debounce функции при ресайзе\n         */\n        debounce?: 0,\n    },\n\n    /*\n     * Диграмма для построения графиков с разными типами\n     */\n    composeChart: {\n        /*\n        * Отступы графика на момент инициализации компонента\n        */\n        initMargin?: {\n            top?: 5,\n            right?: 5,\n            bottom?: 5,\n            left?: 5,\n        },\n\n        /*\n        * Максимальная ширина графиков типа bar\n        */\n        maxBarSize?,\n\n        /*\n        * Разрыв между двумя категориями столбцов,\n        который может быть процентным или фиксированным значением\n        */\n        barCategoryGap?: '10%',\n\n        /*\n        * Разрыв между двумя столбцами одной категории\n        */\n        barGap?: 4,\n    },\n\n    /**\n     * Отображение линий осей графика\n     */\n    cartesianGrid?: {\n        /**\n         * Отображение горизонтальной сетки\n         */\n        horizontal?: true,\n\n        /**\n         * Отображение вертикальной сетки\n         */\n        vertical?: true,\n\n        /**\n         * Штрихи для осей\n         */\n        strokeDasharray?,\n\n        /**\n         * Цвет разметки сетки\n         */\n        stroke?,\n\n        /**\n         * Цвет заливки графика\n         */\n        fill?,\n    },\n\n    /**\n     * Настройки оси Х\n     */\n    xAxis: {\n        /**\n         * Скрыть ось\n         */\n        hide?: false,\n\n        /**\n         * Отображение линии оси.\n         */\n        axisLine?: true,\n\n        /**\n         * Тип оси.\n         */\n        type: 'category',\n\n        /**\n         * Разрешить значениям оси быть десятичными или нет.\n         */\n        allowDecimals?: true,\n\n        /**\n         * Разрешить или нет на оси дублировать категории,\n         * если \"type\" оси - \"category\".\n         */\n        allowDuplicatedCategory?: true,\n\n        /**\n         * Угол наклона значений оси.\n         */\n        angle?: 0,\n\n        /**\n         * Количество делений оси. Не используется,\n         * если \"тип\" - \"категория\".\n         */\n        tickCount?: 5,\n\n        /**\n         * Интревал линий деления оси\n         */\n        interval?: 'preserveEnd',\n\n        /**\n         * Минимальный зазор между двумя соседними делениями оси.\n         */\n        minTickGap?: 5,\n\n        /**\n         * Отображение линий деления оси\n         */\n        tickLine?: true,\n\n        /**\n         * Размер линий деления оси\n         */\n        tickSize?: 6,\n\n        /**\n         * Если установлено значение true,\n         * галочки переворачиваются вокруг оси,\n         * отображая метки внутри диаграммы, а не снаружи.\n         */\n\n        mirror?: false,\n\n        /**\n         * Отображение горизонтальной сетки\n         */\n        reversed?: false,\n\n        /**\n         * Реверсировать ось или нет\n         */\n        tickMargin?: 0,\n\n        /**\n         * Функция форматирования значения деления оси.\n         */\n        tickFormatter?,\n\n        /**\n         * Ключ данных, отображаемых на оси.\n         */\n        dataKey,\n\n        /**\n         * Ориентация оси\n         */\n        orientation?: 'bottom',\n\n        /**\n         * Тип деления оси\n         */\n        tickType?,\n    },\n\n    /**\n     * Настройки оси Y\n     */\n    yAxis: {\n        /**\n         * Скрыть ось\n         */\n        hide?: false,\n\n        /**\n         * Отображение линии оси.\n         */\n        axisLine?: true,\n\n        /**\n         * Тип оси.\n         */\n        type: 'number',\n\n        /**\n         * Разрешить значениям оси быть десятичными или нет.\n         */\n        allowDecimals?: true,\n\n        /**\n         * Разрешить или нет на оси дублировать категории,\n         * если \"type\" оси - \"category\".\n         */\n        allowDuplicatedCategory?: true,\n\n        /**\n         * Угол наклона значений оси.\n         */\n        angle?: 0,\n\n        /**\n         * Количество делений оси.\n         * Не используется, если \"тип\" - \"категория\".\n         */\n        tickCount?: 5,\n\n        /**\n         * Интревал линий деления оси\n         */\n        interval?: 'preserveEnd',\n\n        /**\n         * Минимальный зазор между двумя соседними делениями оси.\n         */\n        minTickGap?: 5,\n\n        /**\n         * Отображение линий деления оси\n         */\n        tickLine?: true,\n\n        /**\n         * Размер линий деления оси\n         */\n        tickSize?: 6,\n\n        /**\n         * Если установлено значение true,\n         * галочки переворачиваются вокруг оси,\n         * отображая метки внутри диаграммы, а не снаружи.\n         */\n        mirror?: false,\n\n        /**\n         * Отображение горизонтальной сетки\n         */\n        reversed?: false,\n\n        /**\n         * Реверсировать ось или нет\n         */\n        tickMargin?: 0,\n\n        /**\n         * Функция форматирования значения деления оси.\n         */\n        tickFormatter?,\n\n        /**\n         * Ключ данных, отображаемых на оси.\n         */\n        orientation?: 'bottom',\n    },\n\n    /**\n     * Всплывающаяся подсказка\n     */\n    tooltip?: {\n        /**\n         * Разделитель между именем и значением\n         */\n        separator?,\n\n        /**\n         * Размер смещения между положением всплывающей\n         * подсказки и активной позицией\n         */\n        offset?: 10,\n\n        /**\n         * Когда элемент полезной нагрузки имеет значение null или undefined,\n         * этот элемент не отображается\n         */\n        filterNull: true,\n\n        /**\n         * Если установлено false, курсор не будет отображаться, когда всплывающая подсказка активна.\n         * Если установлен объект, опция - это конфигурация курсора.\n         * Если установлен элемент React, опция является настраиваемым элементом реакции курсора рисования.\n         */\n        cursor?: {\n            /**\n             * Цвет линии\n             */\n            stroke: cursorStroke,\n\n            /**\n             * Ширина линии\n             */\n            strokeWidth: cursorStrokeWidth,\n        },\n\n        /**\n         * Если это поле установлено, положение всплывающей подсказки\n         * будет фиксированным и больше не будет перемещаться.\n         */\n        position?: {\n            x,\n            y,\n        };\n\n        /**\n         * Если установлено false, анимация всплывающей подсказки будет отключена.\n         */\n        isAnimationActive?: true,\n\n        /**\n         * Указывает, когда должна начинаться анимация,\n         * единица измерения этого параметра - мс.\n         */\n        animationBegin?: 0,\n\n        /**\n         * Определяет продолжительность анимации,\n         * единица измерения этого параметра - мс.\n         */\n        animationDuration?: 1500,\n\n        /**\n         * Тип функции плавности\n         */\n        animationEasing?: 'ease',\n\n        /**\n         * Отображение стрелки тултипа\n         */\n        arrow?: false,\n    };\n\n    /**\n     * Компонент маштабирования графика\n     */\n    brush?: {\n        /**\n         * Ключ данных\n         */\n        dataKey,\n\n        /**\n         * Ширина ползунков\n         */\n        travellerWidth?: 5,\n\n        /**\n         * Начальный индекс интервала показа\n         */\n        startIndex?,\n\n        /**\n         * Конечный индекс интервала показа\n         */\n        endIndex?,\n\n        /**\n         * Отступ\n         */\n        brushMargin?: 0,\n\n        /**\n         * Высота\n         */\n        height?: 40,\n\n        /**\n         * Форматирование значений\n         */\n        tickFormatter?,\n\n        /**\n         * Всегда показывать значение текущего интервала\n         */\n        alwaysShowText?: false,\n\n        /**\n         * Цвет\n         */\n        stroke?: brushStroke,\n    }\n\n    /**\n     * Компонент подписи графиков\n     */\n    legend?: {\n        /**\n         * Выравнивание элементов легенды в вертикальном направлении\n         */\n        verticalAlign?: 'middle',\n\n        /**\n         * Функция форматирования каждого текста в легенде\n         */\n        formatter?,\n\n        /**\n         * Выравнивание элементов легенды в горизонтальном направлении\n         */\n        align?: 'center',\n\n        /**\n         * Вертикальный отступ\n         */\n        marginTop?: 0,\n\n        /**\n         * Высота иконок\n         */\n        iconHeight?: 16,\n    },\n\n    /**\n     * Mассив меток\n     */\n    labels: Array<string | number>,\n\n    /**\n     * Mассив объектов с параметрами грaфиков с обязательным полем\n     */\n    series: [\n        /*\n         * Пример графика типа bar\n         */\n        {\n            /*\n             * Скрыть график\n             */\n            hide?: false,\n\n            /*\n             * Скрыть график в легенде\n             */\n            hideLegend?: false,\n\n            /*\n             * Скрыть график в тултипe\n             */\n            hideTooltip?: false,\n\n            /*\n             * Z-index графика\n             */\n            zIndex,\n\n            /*\n             * Тип графика\n             */\n            chart: 'bar',\n\n            /**\n             * Радиус закругления углов графика типа bar\n             */\n            radius?: {\n                /**\n                 * Верхний pадиус закругления углов графика типа bar\n                 */\n                top?,\n\n                /**\n                 * Нижний радиус закругления углов графика типа bar\n                 */\n                bottom?,\n            },\n\n            /*\n             * Тип иконки для графика\n             */\n            icon,\n\n            /*\n             * Параметры графика\n             */\n            properties: {\n\n                /*\n                * Название графика (отображается в легендах и тултипе)\n                */\n                name,\n\n                /*\n                * Ключ данных\n                */\n                dataKey,\n\n                /*\n                * Форматирование значения графика для тултипа\n                */\n                formatter?,\n\n                /*\n                * Цвет заливки графика\n                */\n                fill,\n\n                /*\n                * Цвет бордера графика\n                */\n                strokeWidth?,\n            },\n\n            /**\n             * Данные для построения графика\n             */\n            data: [\n                /**\n                 * Метка\n                 */\n                label,\n\n                /**\n                 * Значение\n                 */\n                value\n            ];\n        },\n\n        /*\n         * Пример графика типа line\n         */\n        {\n            /*\n             * Скрыть график\n             */\n            hide?: false,\n\n            /*\n             * Скрыть график в легенде\n             */\n            hideLegend?: false,\n\n            /*\n             * Скрыть график в тултипe\n             */\n            hideTooltip?: false,\n\n            /*\n             * Z-index графика\n             */\n            zIndex,\n\n            /*\n             * Тип графика\n             */\n            chart: 'line',\n\n            /*\n             * Тип иконки для графика\n             */\n            icon,\n\n            /*\n             * Параметры графика\n             */\n            properties: {\n\n                /*\n                 * Название графика (отображается в легендах и тултипе)\n                 */\n                name,\n\n                /*\n                 * Ключ данных\n                 */\n                dataKey,\n\n                /*\n                 * Цвет линии графика\n                 */\n                stroke?: '#3182bd',\n\n                /*\n                 * Отображение точек на графике\n                 */\n                dot?,\n\n                /*\n                 * Параметры для точек грфика (если dot: true)\n                 */\n                dotSettings: [{\n\n                    /*\n                     * Значение media query\n                     */\n                    media,\n\n                    /*\n                     * Значение маштаба при ховере\n                     */\n                    scale,\n\n                    /*\n                     * Начальный значения маштаба\n                     */\n                    initScale,\n\n                    /*\n                     * Ширина точки\n                     */\n                    width,\n\n                    /*\n                     * Высота точки\n                     */\n                    height,\n                }],\n\n                /*\n                 * Наследование цвета\n                 */\n                inheritStroke?: false,\n\n                /*\n                 * Форматирование значения графика для тултипа\n                 */\n                formatter?,\n\n                /*\n                 * Тип линии\n                 */\n                type? 'linear',\n\n                /*\n                 * Толщина линии\n                 */\n                strokeWidth?: 1,\n\n                /*\n                 * Прерывистость линии\n                 */\n                strokeDasharray?,\n            },\n\n            /*\n             *  Массив данных для отрисовки\n             */\n            data: [\n\n                /**\n                 * Метка\n                 */\n                label,\n\n                /**\n                 * Значение\n                 */\n                value,\n            ],\n        },\n\n        /*\n         * Пример графика типа area\n         */\n        {\n            /*\n             * Скрыть график\n             */\n            hide?: false,\n\n            /*\n             * Скрыть график в легенде\n             */\n            hideLegend?: false,\n\n            /*\n             * Скрыть график в тултипe\n             */\n            hideTooltip?: false,\n\n            /*\n             * Z-index графика\n             */\n            zIndex,\n\n            /*\n             * Тип графика\n             */\n            chart: 'ara',\n\n            /*\n             * Тип иконки для графика\n             */\n            icon,\n\n            /*\n             * Оффсет для градиента (только для типа area)\n             */\n            offset,\n\n            /**\n             * Параметры градиента\n             */\n            gradient: {\n\n                /**\n                 * Индефикатор градиента\n                 */\n                gid,\n\n                /**\n                 * Параметра точек для градиента\n                 */\n                points: [\n\n                    /**\n                     * Отступ\n                     */\n                    offset: number,\n\n                    /**\n                     * Цвет\n                     */\n                    stopColor: string,\n\n                    /**\n                     * Прозрачность\n                     */\n                    stopOpacity: number,\n                ];\n            };\n\n            /*\n             * Параметры графика\n             */\n            properties: {\n\n                /*\n                 * Название графика (отображается в легендах и тултипе)\n                 */\n                name,\n\n                /*\n                 * Ключ данных\n                 */\n                dataKey,\n\n                /*\n                 * Цвет линии графика\n                 */\n                stroke?: '#3182bd',\n\n                /*\n                 * Отображение точек на графике\n                 */\n                dot?,\n\n                /*\n                 * Параметры для точек грфика (если dot: true)\n                 */\n                dotSettings: [{\n\n                    /*\n                     * Значение media query\n                     */\n                    media,\n\n                    /*\n                     * Значение маштаба при ховере\n                     */\n                    scale,\n\n                    /*\n                     * Начальный значения маштаба\n                     */\n                    initScale,\n\n                    /*\n                     * Ширина точки\n                     */\n                    width,\n\n                    /*\n                     * Высота точки\n                     */\n                    height,\n                }],\n\n                /*\n                 * Наследование цвета\n                 */\n                inheritStroke?: false,\n\n                /*\n                 * Форматирование значения графика для тултипа\n                 */\n                formatter?,\n\n                /*\n                 * Тип линии\n                 */\n                type? 'linear',\n\n                /*\n                 * Толщина линии\n                 */\n                strokeWidth?: 1,\n\n                /*\n                 * Прерывистость линии\n                 */\n                strokeDasharray?,\n            },\n\n            /**\n             * Данные для построения графика\n             */\n            data: [\n\n                /**\n                 * Метка\n                 */\n                label,\n\n                /**\n                 * Значение\n                 */\n                value,\n            ]\n        },\n    ],\n};\n"})})]})}var development=function development_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(development_createMdxContent,props)})):development_createMdxContent(props)},CHANGELOGraw_namespaceObject="# Change Log\n\n## 3.2.2\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   typography@4.2.0\n\n## 3.2.1\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   typography@4.1.0\n\n## 3.2.0\n\n### Minor Changes\n\n### [#713](https://github.com/core-ds/core-components/pull/713)\n\n-   Теперь каждый пакет публикуется с исходниками\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   typography@4.0.0\n\n## 3.1.12\n\n### Patch Changes\n\n### [#766](https://github.com/core-ds/core-components/pull/766)\n\n-   Удален скрипт отправки статистики (send-stats)\n\n-   Обновлены зависимости\n    -   typography@3.2.2\n\n## 3.1.11\n\n### Patch Changes\n\n### [#632](https://github.com/core-ds/core-components/pull/632)\n\n-   Исправлено название свойства strokeDasharray (strokeDashArray -> strokeDasharray)\n\n## 3.1.10\n\n### Patch Changes\n\n### [#588](https://github.com/core-ds/core-components/pull/588)\n\n-   Добавлен \\_\\_esModule в cjs экспорт\n\n-   Обновлены зависимости\n    -   typography@3.2.1\n\n## 3.1.9\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   typography@3.2.0\n\n## 3.1.8\n\n### Patch Changes\n\n### [#526](https://github.com/core-ds/core-components/pull/526)\n\n-   В зависимости добавлена библиотека tslib\n\n-   Обновлены зависимости\n    -   typography@3.1.1\n\n## 3.1.7\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   typography@3.1.0\n\n## 3.1.6\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   typography@3.0.8\n\n## 3.1.5\n\n### Patch Changes\n\n### [#418](https://github.com/core-ds/core-components/pull/418)\n\n-   Исправлена проблема с default-импортом в cjs форматах\n\n-   Обновлены зависимости\n    -   typography@3.0.7\n\n## 3.1.4\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   typography@3.0.6\n\n## 3.1.3\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   typography@3.0.5\n\n## 3.1.2\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   typography@3.0.4\n\n## 3.1.1\n\n### Patch Changes\n\n-   Обновлены зависимости\n    -   typography@3.0.3\n\nAll notable changes to this project will be documented in this file.\nSee [Conventional Commits](https://conventionalcommits.org) for commit guidelines.\n\n# [3.1.0](https://github.com/core-ds/core-components/compare/@alfalab/core-components-chart@3.0.1...@alfalab/core-components-chart@3.1.0) (2022-09-01)\n\n### Features\n\n-   testing-library versions update ([#216](https://github.com/core-ds/core-components/issues/216)) ([33b6225](https://github.com/core-ds/core-components/commit/33b62259a1332f535f367502590ea37e7ad051d4))\n\n## [3.0.1](https://github.com/core-ds/core-components/compare/@alfalab/core-components-chart@3.0.0...@alfalab/core-components-chart@3.0.1) (2022-08-19)\n\n**Note:** Version bump only for package @alfalab/core-components-chart\n\n# [3.0.0](https://github.com/core-ds/core-components/compare/@alfalab/core-components-chart@2.2.1...@alfalab/core-components-chart@3.0.0) (2022-08-17)\n\n### Features\n\n-   removed dist directory in published packages ([#200](https://github.com/core-ds/core-components/issues/200)) ([8af8fee](https://github.com/core-ds/core-components/commit/8af8fee53ca0bd19fa2d1ca1422e0df23096e2c8))\n\n### BREAKING CHANGES\n\n-   Изменена директория расположения индексных файлов в опубликованных пакетах (удалена\n    директория dist)\n\nCo-authored-by: Vladimir Gevak <VGevak@alfabank.ru>\n\n## [2.2.1](https://github.com/core-ds/core-components/compare/@alfalab/core-components-chart@2.2.0...@alfalab/core-components-chart@2.2.1) (2022-08-17)\n\n### Bug Fixes\n\n-   returned dist directory ([#199](https://github.com/core-ds/core-components/issues/199)) ([fabc15e](https://github.com/core-ds/core-components/commit/fabc15effa1457ca65ec7238206f1b1fc2a2a613))\n\n# [2.2.0](https://github.com/core-ds/core-components/compare/@alfalab/core-components-chart@2.1.3...@alfalab/core-components-chart@2.2.0) (2022-08-04)\n\n### Features\n\n-   react 18 support ([#159](https://github.com/core-ds/core-components/issues/159)) ([2e6693c](https://github.com/core-ds/core-components/commit/2e6693c62f534e333aadb7d3fff4ffd78ac84c63))\n\n## [2.1.3](https://github.com/core-ds/core-components/compare/@alfalab/core-components-chart@2.1.2...@alfalab/core-components-chart@2.1.3) (2022-07-18)\n\n**Note:** Version bump only for package @alfalab/core-components-chart\n\n## [2.1.2](https://github.com/core-ds/core-components/compare/@alfalab/core-components-chart@2.1.1...@alfalab/core-components-chart@2.1.2) (2022-07-15)\n\n### Bug Fixes\n\n-   bump packages version ([#153](https://github.com/core-ds/core-components/issues/153)) ([fd3e082](https://github.com/core-ds/core-components/commit/fd3e08205672129cdce04e1000c673f2cd9c10da))\n\n## [2.1.1](https://github.com/core-ds/core-components/compare/@alfalab/core-components-chart@2.1.0...@alfalab/core-components-chart@2.1.1) (2022-07-14)\n\n**Note:** Version bump only for package @alfalab/core-components-chart\n\n# [2.1.0](https://github.com/core-ds/core-components/compare/@alfalab/core-components-chart@2.0.5...@alfalab/core-components-chart@2.1.0) (2022-06-28)\n\n### Features\n\n-   circumflexus retrieval ([#57](https://github.com/core-ds/core-components/issues/57)) ([3820da8](https://github.com/core-ds/core-components/commit/3820da818bcdcbee6904c648b3e29c3c828fe202))\n\n## [2.0.2](https://github.com/core-ds/core-components/compare/@alfalab/core-components-chart@2.0.1...@alfalab/core-components-chart@2.0.2) (2022-03-30)\n\n**Note:** Version bump only for package @alfalab/core-components-chart\n\n## [2.0.1](https://github.com/core-ds/core-components/compare/@alfalab/core-components-chart@2.0.0...@alfalab/core-components-chart@2.0.1) (2022-03-03)\n\n**Note:** Version bump only for package @alfalab/core-components-chart\n\n# [2.0.0](https://github.com/core-ds/core-components/compare/@alfalab/core-components-chart@1.2.2...@alfalab/core-components-chart@2.0.0) (2022-03-01)\n\n### Features\n\n-   Исправить импорты в сторях. ([#998](https://github.com/core-ds/core-components/issues/998)) ([e6a654a](https://github.com/core-ds/core-components/commit/e6a654a0599451c7d149484cb61d8067eed083b7))\n\n-   refactor/calendar-range (#984) ([714f615](https://github.com/core-ds/core-components/commit/714f61590586bafe1060e652943e95c133ed002a)), closes [#984](https://github.com/core-ds/core-components/issues/984)\n\n### BREAKING CHANGES\n\n-   Большое обновление CalendarRange\n\n-   feat(date-input): add some improvements\n\n-   feat(date-input): some updates\n\n-   feat(date-input): validation\n\n-   feat(calendar): change period selection logic\n\n-   fix(calendar): range styles\n\n-   fix(calendar): fix styles, add rangeComplete flag\n\n-   refactor(calendar-range): temporary\n\n-   fix(calendar-range): fix hook\n\n-   fix(calendar-range): fix period\n\n-   fix(calendar-range): fix tests, fix max date\n\n-   fix: update exports\n\n-   feat(calendar): allow empty values for PeriodSlider, update today\n\n-   fix(calendar-range): hide error icon\n\n-   chore(calendar-range): demo\n\n-   feat(calendar): use IconButton\n\n-   feat(calendar-range): add onChange, update demo\n\n-   fix(calendar-range): update width\n\n-   test(calendar-range): update snapshot\n\n-   fix: import date-fns separately\n\n-   fix(calendar-range): fix rest props\n\nCo-authored-by: dmitrsavk <dmitrsavk@yandex.ru>\n\n## [1.2.2](https://github.com/core-ds/core-components/compare/@alfalab/core-components-chart@1.2.1...@alfalab/core-components-chart@1.2.2) (2022-01-17)\n\n**Note:** Version bump only for package @alfalab/core-components-chart\n\n## [1.2.1](https://github.com/core-ds/core-components/compare/@alfalab/core-components-chart@1.2.0...@alfalab/core-components-chart@1.2.1) (2021-10-19)\n\n### Bug Fixes\n\n-   **chart:** fix deps, export types ([b46450a](https://github.com/core-ds/core-components/commit/b46450ae954b10f0138c393482fe1271b001f085))\n\n# [1.2.0](https://github.com/core-ds/core-components/compare/@alfalab/core-components-chart@1.1.0...@alfalab/core-components-chart@1.2.0) (2021-10-11)\n\n### Features\n\n-   **chart:** added border radius to bar charts ([cfd0ad2](https://github.com/core-ds/core-components/commit/cfd0ad2c23a2b80de0bc5dfae7b65a14263e37e9))\n-   **chart:** added chart component ([1119943](https://github.com/core-ds/core-components/commit/11199435e9ab53ae159707e94714a34952ad56c1))\n-   **chart:** added description ([8275346](https://github.com/core-ds/core-components/commit/827534640af0c0b06c1105755e9435d43cae8acd))\n-   **chart:** added props for legend icons height ([5c9b321](https://github.com/core-ds/core-components/commit/5c9b32154e6f39cddd3ac9668830959adba64648))\n-   **chart:** bar radius ([e39251a](https://github.com/core-ds/core-components/commit/e39251a37a52b6f434932439da0b86a03a26d901))\n-   **chart:** beautifyed ([67cc96e](https://github.com/core-ds/core-components/commit/67cc96e6afc020c3af5491d3d7ba0b89f50dbaf3))\n-   **chart:** edited doc ([8728271](https://github.com/core-ds/core-components/commit/8728271dc7f733c9b14a27c83a7136c22ef39ed6))\n-   **chart:** fix doc ([9d1e888](https://github.com/core-ds/core-components/commit/9d1e8889615f0701a43a9fbceca867557002ef31))\n-   **chart:** fixed after pull master ) ([4c7d241](https://github.com/core-ds/core-components/commit/4c7d241da264cde81e50573f96a2f035c31306e1))\n-   **chart:** fixed build error ([2efdd22](https://github.com/core-ds/core-components/commit/2efdd22f27e8229b2ad4cb7d355f61b218ea1bc1))\n-   **chart:** fixed comments ([a611b9c](https://github.com/core-ds/core-components/commit/a611b9c1c9bab1d5a15c2021bff270e9bbf5a934))\n-   **chart:** fixed comments ([7ad1caf](https://github.com/core-ds/core-components/commit/7ad1caf5be9f2da6a218b2c97cc7d96efb4d286d))\n-   **chart:** fixed comments ([555acb6](https://github.com/core-ds/core-components/commit/555acb699549c52f85d0dd58009ab1692344eb44))\n-   **chart:** fixed comments ([379e53d](https://github.com/core-ds/core-components/commit/379e53ddf8c857424600d5fc49b41c03f5ac11ea))\n-   **chart:** more description ([9a4c076](https://github.com/core-ds/core-components/commit/9a4c0762782c2f8ccee0e0c7c660514a10119960))\n-   **chart:** pulled master ([176f7ae](https://github.com/core-ds/core-components/commit/176f7ae6e7cdb2a3e18d2136523e5be6ecdbde3e))\n-   **chart:** resolved conflicts ([7f734ba](https://github.com/core-ds/core-components/commit/7f734bab0347af6e5d56d717d8b5cc0cf192f9f3))\n\n# 1.1.0 (2021-09-30)\n\n### Features\n\n-   **chart:** add component ([#835](https://github.com/core-ds/core-components/issues/835)) ([17d840b](https://github.com/core-ds/core-components/commit/17d840b9f9f64474491d3ec58d3cda53ad07f0ca))\n";function Component_docs_createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{of:Component_stories}),"\n",(0,jsx_runtime.jsx)(blocks.yt,{name:"Chart",children:"Используется для построения графиков."}),"\n",(0,jsx_runtime.jsx)(blocks.mQ,{description:(0,jsx_runtime.jsx)(description,{}),changelog:(0,jsx_runtime.jsx)(dist.UG,{children:CHANGELOGraw_namespaceObject}),development:(0,jsx_runtime.jsx)(development,{})})]})}var Component_docs=function Component_docs_MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(Component_docs_createMdxContent,props)})):Component_docs_createMdxContent()}},"./.storybook/blocks/index.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Ft:function(){return ArgsTabs},Eg:function(){return Changelog},yt:function(){return ComponentHeader},ZV:function(){return CssVars},mQ:function(){return Tabs}});var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),index_module={changelog:"changelog_UmYwo"},jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),Changelog=function Changelog(_ref){var content=_ref.content,_ref$root=_ref.root,root=void 0!==_ref$root&&_ref$root;return(0,jsx_runtime.jsx)("div",{className:classnames_default()(index_module.changelog,root&&index_module.root,"sb-unstyled"),children:content})};try{Changelog.displayName="Changelog",Changelog.__docgenInfo={description:"",displayName:"Changelog",props:{content:{defaultValue:null,description:"",name:"content",required:!0,type:{name:"ReactNode"}},root:{defaultValue:{value:"false"},description:"",name:"root",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[".storybook/blocks/changelog/changelog.tsx#Changelog"]={docgenInfo:Changelog.__docgenInfo,name:"Changelog",path:".storybook/blocks/changelog/changelog.tsx#Changelog"})}catch(__react_docgen_typescript_loader_error){}var slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),modern=__webpack_require__("./dist/link/modern/index.js"),esm=__webpack_require__("./node_modules/storybook-addon-live-examples/dist/esm/index.js"),css_vars_module_cssVars="cssVars_OsBA8",rootBlockRegexp=/:root {([^}]*)}/g,mixinRegexp=/(?:@define-mixin)(.*{[^}]*})/g,CssVars=function CssVars(_ref){var css=_ref.css,title=_ref.title,expandable=_ref.expandable,_ref$type=_ref.type,type=void 0===_ref$type?"vars":_ref$type,_useState=(0,react.useState)(""),_useState2=(0,slicedToArray.Z)(_useState,2),vars=_useState2[0],setVars=_useState2[1],_useState3=(0,react.useState)(!expandable),_useState4=(0,slicedToArray.Z)(_useState3,2),open=_useState4[0],setOpen=_useState4[1],isVars="vars"===type,regexp=isVars?rootBlockRegexp:mixinRegexp;return(0,react.useEffect)((function(){for(var rootBlockMatch=regexp.exec(css),rootBlocks=[];rootBlockMatch;)rootBlocks.push(rootBlockMatch[1]),rootBlockMatch=regexp.exec(css);var result=rootBlocks.reduce((function(acc,item,index){var divider=index===rootBlocks.length-1?"":"\n";return"".concat(acc).concat(item).concat(divider)}),isVars?":root {":"");isVars&&(result+="}"),setVars(result)}),[]),(0,jsx_runtime.jsxs)("div",{className:classnames_default()("sb-unstyled",css_vars_module_cssVars),children:[title&&(0,jsx_runtime.jsx)("h2",{className:classnames_default()("sbdocs","sbdocs-h2"),children:title}),vars&&(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[expandable&&(0,jsx_runtime.jsx)(modern.Link,{view:"default",onClick:function onClick(){return setOpen(!open)},pseudo:!0,children:open?"Скрыть":"Показать"}),open&&(0,jsx_runtime.jsx)(esm.en,{language:"css",code:vars,live:!1})]})]})};try{CssVars.displayName="CssVars",CssVars.__docgenInfo={description:"",displayName:"CssVars",props:{css:{defaultValue:null,description:"",name:"css",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},expandable:{defaultValue:null,description:"",name:"expandable",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:"vars"},description:"",name:"type",required:!1,type:{name:"enum",value:[{value:'"vars"'},{value:'"mixins"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[".storybook/blocks/css-vars/css-vars.tsx#CssVars"]={docgenInfo:CssVars.__docgenInfo,name:"CssVars",path:".storybook/blocks/css-vars/css-vars.tsx#CssVars"})}catch(__react_docgen_typescript_loader_error){}var defineProperty=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),typography_modern=__webpack_require__("./dist/typography/modern/index.js"),space_modern=__webpack_require__("./dist/space/modern/index.js"),dist_esm=__webpack_require__("./node_modules/@alfalab/utils/dist/esm/index.js"),GithubIcon=__webpack_require__("./.storybook/components/icons/GithubIcon.jsx"),usages_namespaceObject=JSON.parse('{"updatedAt":1696397264102,"withSuffix":{"projects":0,"imports":0,"search":"withSuffix"},"vars":{"projects":0,"imports":0,"search":"vars"},"UniversalDateInput":{"projects":0,"imports":0,"search":"UniversalDateInput*"},"Underlay":{"projects":16,"imports":38,"search":"Underlay"},"Typography":{"projects":343,"imports":8102,"search":"Typography"},"Tooltip":{"projects":231,"imports":687,"search":"Tooltip*"},"ToastPlate":{"projects":4,"imports":4,"search":"ToastPlate*"},"Toast":{"projects":25,"imports":43,"search":"Toast*"},"TimeInput":{"projects":2,"imports":2,"search":"TimeInput"},"Textarea":{"projects":101,"imports":228,"search":"Textarea"},"Tag":{"projects":161,"imports":454,"search":"Tag*"},"Tabs":{"projects":135,"imports":262,"search":"Tabs*"},"Table":{"projects":98,"imports":443,"search":"Table"},"SystemMessage":{"projects":6,"imports":20,"search":"SystemMessage*"},"Switch":{"projects":92,"imports":230,"search":"Switch"},"Steps":{"projects":18,"imports":24,"search":"Steps"},"StepperInput":{"projects":0,"imports":0,"search":"StepperInput*"},"SteppedProgressBar":{"projects":9,"imports":10,"search":"SteppedProgressBar"},"Status":{"projects":104,"imports":257,"search":"Status"},"Stack":{"projects":3,"imports":3,"search":"Stack"},"Spinner":{"projects":197,"imports":703,"search":"Spinner"},"Space":{"projects":192,"imports":1893,"search":"Space"},"SortableList":{"projects":0,"imports":0,"search":"SortableList"},"SliderInput":{"projects":16,"imports":20,"search":"SliderInput"},"Slider":{"projects":2,"imports":2,"search":"Slider"},"Skeleton":{"projects":159,"imports":820,"search":"Skeleton"},"SidePanel":{"projects":27,"imports":59,"search":"SidePanel*"},"SelectWithTags":{"projects":17,"imports":26,"search":"SelectWithTags"},"Select":{"projects":206,"imports":631,"search":"Select*"},"SegmentedControl":{"projects":6,"imports":6,"search":"SegmentedControl"},"Scrollbar":{"projects":18,"imports":31,"search":"Scrollbar"},"RadioGroup":{"projects":149,"imports":396,"search":"RadioGroup*"},"Radio":{"projects":102,"imports":220,"search":"Radio"},"PureCell":{"projects":55,"imports":362,"search":"PureCell"},"ProgressBar":{"projects":26,"imports":35,"search":"ProgressBar"},"Portal":{"projects":13,"imports":30,"search":"Portal"},"PopupSheet":{"projects":0,"imports":0,"search":"PopupSheet"},"Popover":{"projects":70,"imports":149,"search":"Popover"},"Plate":{"projects":166,"imports":533,"search":"Plate*"},"PickerButton":{"projects":69,"imports":100,"search":"PickerButton*"},"PhoneInput":{"projects":77,"imports":104,"search":"PhoneInput"},"PatternLock":{"projects":1,"imports":1,"search":"PatternLock"},"PasswordInput":{"projects":17,"imports":28,"search":"PasswordInput"},"PassCode":{"projects":1,"imports":1,"search":"PassCode"},"Pagination":{"projects":25,"imports":54,"search":"Pagination"},"NumberInput":{"projects":8,"imports":17,"search":"NumberInput*"},"NotificationManager":{"projects":62,"imports":64,"search":"NotificationManager"},"Notification":{"projects":114,"imports":160,"search":"Notification"},"Mq":{"projects":24,"imports":47,"search":"Mq"},"Modal":{"projects":292,"imports":1058,"search":"Modal*"},"Markdown":{"projects":0,"imports":0,"search":"Markdown*"},"MaskedInput":{"projects":94,"imports":272,"search":"MaskedInput"},"Loader":{"projects":67,"imports":155,"search":"Loader"},"ListHeader":{"projects":9,"imports":10,"search":"ListHeader"},"List":{"projects":116,"imports":332,"search":"List"},"Link":{"projects":266,"imports":1340,"search":"Link"},"KeyboardFocusable":{"projects":3,"imports":3,"search":"KeyboardFocusable"},"IntlPhoneInput":{"projects":1,"imports":1,"search":"IntlPhoneInput"},"InternationalPhoneInput":{"projects":0,"imports":0,"search":"InternationalPhoneInput*"},"InputAutocomplete":{"projects":128,"imports":274,"search":"InputAutocomplete*"},"Input":{"projects":217,"imports":978,"search":"Input*"},"Indicator":{"projects":3,"imports":3,"search":"Indicator"},"IconView":{"projects":0,"imports":0,"search":"IconView"},"IconButton":{"projects":180,"imports":655,"search":"IconButton"},"HatchingProgressBar":{"projects":0,"imports":0,"search":"HatchingProgressBar"},"Grid":{"projects":141,"imports":1021,"search":"Grid"},"GenericWrapper":{"projects":19,"imports":74,"search":"GenericWrapper"},"Gap":{"projects":90,"imports":600,"search":"Gap"},"Gallery":{"projects":3,"imports":4,"search":"Gallery"},"FormControl":{"projects":5,"imports":8,"search":"FormControl*"},"FilterTag":{"projects":30,"imports":64,"search":"FilterTag*"},"FileUploadItem":{"projects":40,"imports":56,"search":"FileUploadItem"},"Dropzone":{"projects":20,"imports":26,"search":"Dropzone"},"Drawer":{"projects":36,"imports":47,"search":"Drawer"},"Divider":{"projects":93,"imports":316,"search":"Divider"},"DateTimeInput":{"projects":2,"imports":2,"search":"DateTimeInput*"},"DateRangeInput":{"projects":5,"imports":5,"search":"DateRangeInput*"},"DateInput":{"projects":24,"imports":30,"search":"DateInput"},"CustomPickerButton":{"projects":0,"imports":0,"search":"CustomPickerButton*"},"CustomButton":{"projects":8,"imports":13,"search":"CustomButton"},"Confirmation":{"projects":40,"imports":61,"search":"Confirmation*"},"ConfirmationV1":{"projects":4,"imports":4,"search":"ConfirmationV1"},"Comment":{"projects":1,"imports":1,"search":"Comment"},"Collapse":{"projects":117,"imports":246,"search":"Collapse"},"CodeInput":{"projects":5,"imports":5,"search":"CodeInput*"},"CircularProgressBar":{"projects":19,"imports":25,"search":"CircularProgressBar"},"CheckboxGroup":{"projects":49,"imports":85,"search":"CheckboxGroup*"},"Checkbox":{"projects":169,"imports":551,"search":"Checkbox"},"Chart":{"projects":1,"imports":1,"search":"Chart"},"CDNIcon":{"projects":19,"imports":97,"search":"CDNIcon"},"CardImage":{"projects":19,"imports":37,"search":"CardImage"},"CalendarWithSkeleton":{"projects":1,"imports":1,"search":"CalendarWithSkeleton"},"CalendarRange":{"projects":30,"imports":52,"search":"CalendarRange"},"CalendarInput":{"projects":96,"imports":177,"search":"CalendarInput*"},"Calendar":{"projects":16,"imports":31,"search":"Calendar*"},"Button":{"projects":348,"imports":4520,"search":"Button*"},"BottomSheet":{"projects":59,"imports":139,"search":"BottomSheet"},"BankCard":{"projects":2,"imports":2,"search":"BankCard"},"BaseModal":{"projects":9,"imports":13,"search":"BaseModal"},"Badge":{"projects":136,"imports":383,"search":"Badge"},"Backdrop":{"projects":8,"imports":8,"search":"Backdrop"},"AmountInput":{"projects":81,"imports":164,"search":"AmountInput"},"Attach":{"projects":42,"imports":52,"search":"Attach"},"Amount":{"projects":109,"imports":447,"search":"Amount"},"Alert":{"projects":99,"imports":345,"search":"Alert"},"ActionButton":{"projects":10,"imports":19,"search":"ActionButton"}}'),ComponentHeader_module_component="component_qx5zQ",ComponentHeader_module_title="title_vmrmp",ComponentHeader_module_titleMobile="titleMobile_RhdZ4",ComponentHeader_module_text="text_TIocB",ComponentHeader_module_info="info_iGRHP",ComponentHeader_module_commonLink="commonLink_WJRCZ",ComponentHeader_module_links="links_kuMT8",ComponentHeader_module_usageLink="usageLink_ilI5I",ComponentHeader_module_github="github_ks4z8",ComponentHeader_module_design="design_NpKuj",mq_modern=__webpack_require__("./dist/mq/modern/index.js"),ComponentHeader=function ComponentHeader(_ref){var _usages$name,_usages$name2,_usages$name3,_usages$name4,_usages$name5,_usages$name6,name=_ref.name,design=_ref.design,children=_ref.children,_useMatchMedia=(0,mq_modern.useMatchMedia)("--tablet-m"),isDesktop=(0,slicedToArray.Z)(_useMatchMedia,1)[0],packageName=name.replace(/([a-z0-9])([A-Z])/g,"$1-$2").replace(/([A-Z])([A-Z])(?=[a-z])/g,"$1-$2").toLowerCase(),githubLink="https://github.com/core-ds/core-components/tree/master/packages/".concat(packageName),Title=isDesktop?typography_modern.Typography.Title:typography_modern.Typography.TitleMobile;return(0,jsx_runtime.jsxs)("div",{className:classnames_default()("sb-unstyled",ComponentHeader_module_component),children:[(0,jsx_runtime.jsx)(Title,{tag:"h1",view:"xlarge",className:classnames_default()(ComponentHeader_module_title,(0,defineProperty.Z)({},ComponentHeader_module_titleMobile,!isDesktop)),children:name}),children&&(0,jsx_runtime.jsx)(typography_modern.Typography.Text,{tag:"p",view:"primary-medium",className:ComponentHeader_module_text,children:children}),(0,jsx_runtime.jsxs)("div",{className:ComponentHeader_module_links,children:[design&&(0,jsx_runtime.jsx)("a",{className:classnames_default()(ComponentHeader_module_design,(0,defineProperty.Z)({},ComponentHeader_module_commonLink,!design)),href:design,target:"_blank",children:"Figma"}),(0,jsx_runtime.jsxs)("a",{className:ComponentHeader_module_github,href:githubLink,target:"_blank",children:[(0,jsx_runtime.jsx)(GithubIcon.E,{fill:"var(--color-light-graphic-primary)"}),"Github"]})]}),(0,jsx_runtime.jsx)(space_modern.Space,{direction:"horizontal",align:"center",className:ComponentHeader_module_info,children:(null===(_usages$name=usages_namespaceObject[name])||void 0===_usages$name?void 0:_usages$name.projects)>0&&(0,jsx_runtime.jsxs)(typography_modern.Typography.Text,{view:"primary-small",color:"secondary",children:["Используется в"," ",(0,jsx_runtime.jsxs)(modern.Link,{href:"http://design/design-system-usage/usage-chart?component=".concat(null===(_usages$name2=usages_namespaceObject[name])||void 0===_usages$name2?void 0:_usages$name2.search),target:"_blank",view:"secondary",underline:!1,title:"Необходимо подключение к VPN",className:ComponentHeader_module_usageLink,children:[null===(_usages$name3=usages_namespaceObject[name])||void 0===_usages$name3?void 0:_usages$name3.projects," ",(0,dist_esm._6)(null===(_usages$name4=usages_namespaceObject[name])||void 0===_usages$name4?void 0:_usages$name4.projects,"проекте","проектах","проектах")]})," и ","~",null===(_usages$name5=usages_namespaceObject[name])||void 0===_usages$name5?void 0:_usages$name5.imports," ",(0,dist_esm._6)(null===(_usages$name6=usages_namespaceObject[name])||void 0===_usages$name6?void 0:_usages$name6.imports,"файле","файлах","файлах")]})})]})};try{ComponentHeader.displayName="ComponentHeader",ComponentHeader.__docgenInfo={description:"",displayName:"ComponentHeader",props:{name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},design:{defaultValue:null,description:"",name:"design",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[".storybook/blocks/component-header/ComponentHeader.tsx#ComponentHeader"]={docgenInfo:ComponentHeader.__docgenInfo,name:"ComponentHeader",path:".storybook/blocks/component-header/ComponentHeader.tsx#ComponentHeader"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__("./.storybook/blocks/grid/index.ts");var _TabTitle,tabs_modern=__webpack_require__("./dist/tabs/modern/index.js"),tabs_index_module_tabs="tabs_BRA6G",TabName=function(TabName){return TabName.DESCRIPTION="DESCRIPTION",TabName.PROPS="PROPS",TabName.CSS_VARS="CSS_VARS",TabName.CHANGELOG="CHANGELOG",TabName.DEVELOPMENT="DEVELOPMENT",TabName}(TabName||{}),TabTitle=(_TabTitle={},(0,defineProperty.Z)(_TabTitle,TabName.DESCRIPTION,"Описание"),(0,defineProperty.Z)(_TabTitle,TabName.PROPS,"Свойства"),(0,defineProperty.Z)(_TabTitle,TabName.CSS_VARS,"CSS-переменные"),(0,defineProperty.Z)(_TabTitle,TabName.CHANGELOG,"Обновления"),(0,defineProperty.Z)(_TabTitle,TabName.DEVELOPMENT,"Разработчику"),_TabTitle),Tabs=function Tabs(_ref){var description=_ref.description,props=_ref.props,cssVars=_ref.cssVars,changelog=_ref.changelog,_ref$defaultSelected=_ref.defaultSelected,defaultSelected=void 0===_ref$defaultSelected?TabName.DESCRIPTION:_ref$defaultSelected,development=_ref.development,_useState=(0,react.useState)(defaultSelected),_useState2=(0,slicedToArray.Z)(_useState,2),selected=_useState2[0],setSelected=_useState2[1],handleChange=(0,react.useCallback)((function(_,_ref2){var selectedId=_ref2.selectedId;setSelected(selectedId)}),[]),tabs=(0,react.useMemo)((function(){return function renderTabs(){return[(0,jsx_runtime.jsx)(tabs_modern.Tab,{title:TabTitle[TabName.DESCRIPTION],id:TabName.DESCRIPTION,children:description},"description"),props?(0,jsx_runtime.jsx)(tabs_modern.Tab,{title:TabTitle[TabName.PROPS],id:TabName.PROPS,children:props},"props"):null,cssVars?(0,jsx_runtime.jsx)(tabs_modern.Tab,{title:TabTitle[TabName.CSS_VARS],id:TabName.CSS_VARS,children:cssVars},"css-vars"):null,development?(0,jsx_runtime.jsx)(tabs_modern.Tab,{title:TabTitle[TabName.DEVELOPMENT],id:TabName.DEVELOPMENT,children:development},"development"):null,changelog?(0,jsx_runtime.jsx)(tabs_modern.Tab,{title:TabTitle[TabName.CHANGELOG],id:TabName.CHANGELOG,children:(0,jsx_runtime.jsx)("div",{style:{marginTop:"32px"},children:(0,jsx_runtime.jsx)(Changelog,{content:changelog})})},"changelog"):null].filter(react.isValidElement)}()}),[description,props,cssVars]);return(0,jsx_runtime.jsx)(tabs_modern.Tabs,{className:"sb-unstyled",selectedId:selected,onChange:handleChange,containerClassName:tabs_index_module_tabs,children:tabs})};try{Tabs.displayName="Tabs",Tabs.__docgenInfo={description:"",displayName:"Tabs",props:{description:{defaultValue:null,description:"",name:"description",required:!0,type:{name:"ReactNode"}},props:{defaultValue:null,description:"",name:"props",required:!0,type:{name:"ReactNode"}},cssVars:{defaultValue:null,description:"",name:"cssVars",required:!1,type:{name:"ReactNode"}},changelog:{defaultValue:null,description:"",name:"changelog",required:!1,type:{name:"string"}},defaultSelected:{defaultValue:{value:"TabName.DESCRIPTION"},description:"",name:"defaultSelected",required:!1,type:{name:"enum",value:[{value:'"DESCRIPTION"'},{value:'"PROPS"'},{value:'"CSS_VARS"'},{value:'"CHANGELOG"'},{value:'"DEVELOPMENT"'}]}},development:{defaultValue:null,description:"",name:"development",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[".storybook/blocks/tabs/component.tsx#Tabs"]={docgenInfo:Tabs.__docgenInfo,name:"Tabs",path:".storybook/blocks/tabs/component.tsx#Tabs"})}catch(__react_docgen_typescript_loader_error){}var dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),args_tabs_index_module_tabsTypes="tabsTypes_QEaxU",args_tabs_index_module_error="error_EECcc",ArgsTabs=function ArgsTabs(_ref){var components=_ref.components,_useState=(0,react.useState)(0),_useState2=(0,slicedToArray.Z)(_useState,2),selected=_useState2[0],setSelected=_useState2[1],keys=Object.keys(components);return(0,jsx_runtime.jsx)(tabs_modern.Tabs,{className:classnames_default()(args_tabs_index_module_tabsTypes,"sb-unstyled"),selectedId:selected,onChange:function handleChange(_,_ref2){var selectedId=_ref2.selectedId;setSelected(selectedId)},view:"secondary",size:"xxs",scrollable:!0,children:keys.map((function(key,index){return(0,jsx_runtime.jsx)(tabs_modern.Tab,{id:index,title:key,children:components[key]?(0,jsx_runtime.jsx)(dist.Ed,{of:components[key]}):(0,jsx_runtime.jsx)("div",{className:args_tabs_index_module_error,children:"Что-то пошло не так "})},key)}))})};try{ArgsTabs.displayName="ArgsTabs",ArgsTabs.__docgenInfo={description:"",displayName:"ArgsTabs",props:{components:{defaultValue:null,description:"",name:"components",required:!0,type:{name:"Record<string, ReactNode>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[".storybook/blocks/args-tabs/component.tsx#ArgsTabs"]={docgenInfo:ArgsTabs.__docgenInfo,name:"ArgsTabs",path:".storybook/blocks/args-tabs/component.tsx#ArgsTabs"})}catch(__react_docgen_typescript_loader_error){}},"./.storybook/components/icons/GithubIcon.jsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{E:function(){return GithubIcon}});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),GithubIcon=function GithubIcon(_ref){var _ref$fill=_ref.fill,fill=void 0===_ref$fill?"#24292E":_ref$fill,_ref$width=_ref.width,width=void 0===_ref$width?32:_ref$width,_ref$height=_ref.height,height=void 0===_ref$height?32:_ref$height;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:width,height:height,viewBox:"0 0 32 32",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z",fill:fill})})};GithubIcon.__docgenInfo={description:"",methods:[],displayName:"GithubIcon",props:{fill:{defaultValue:{value:"'#24292E'",computed:!1},required:!1},width:{defaultValue:{value:"32",computed:!1},required:!1},height:{defaultValue:{value:"32",computed:!1},required:!1}}}}}]);