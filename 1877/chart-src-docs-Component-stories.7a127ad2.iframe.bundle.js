"use strict";(self.webpackChunk_alfalab_core_components=self.webpackChunk_alfalab_core_components||[]).push([[2697],{"./packages/chart/src/docs/Component.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},chart_bar:function(){return chart_bar},chart_histogram:function(){return chart_histogram},chart_line:function(){return chart_line}});var _chart_bar$parameters,_chart_bar$parameters2,_chart_bar$parameters3,_chart_line$parameter,_chart_line$parameter2,_chart_line$parameter3,_chart_histogram$para,_chart_histogram$para2,_chart_histogram$para3,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js");__webpack_require__("./node_modules/react/index.js");var _storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),date_fns_format__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/date-fns/esm/format/index.js"),_alfalab_core_components_chart__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./dist/chart/modern/index.js"),_screenshot_utils_screenshots_story_utils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/screenshot-utils/screenshots-story/utils.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js"),meta={title:"Components/Chart",component:_alfalab_core_components_chart__WEBPACK_IMPORTED_MODULE_2__.Chart,id:"Chart"},chart_bar={name:"Chart.Bar",render:function render(){var obj,series,iconTypes={circleLine:"circleLine",filledCircle:"filledCircle",strokeCircle:"strokeCircle",circle:"circle"},cartesianGridId="cartesianGrid",composeChartId="composeChart",xAxisId="xAxis",yAxisId="yAxis",legendId="legend",tooltipId="tooltip",brushId="brush",lineId="line",barIdFirst="barFirst",barIdSecond="barSecond",debounce=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("debounce",0,{},"responsiveContainer"),vertical=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("vertical",!1,cartesianGridId),horizontal=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("horizontal",!0,cartesianGridId),strokeDasharray=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("strokeDasharray",0,{},cartesianGridId),stroke=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("stroke","var(--color-light-neutral-400)",cartesianGridId),fill=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("fill","var(--color-light-base-bg-primary)",cartesianGridId),initMarginTop=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("initMargin.top",40,{},composeChartId),initMarginBottom=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("initMargin.bottom",20,{},composeChartId),marginLeft=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("initMargin.left",20,{},composeChartId),marginRight=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("initMargin.right",50,{},composeChartId),barCategoryGap=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("barCategoryGap","30%",composeChartId),barGap=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("barGap",4,{},composeChartId),maxBarSize=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("maxBarSize",24,{},composeChartId),xAxisHide=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hide",!1,xAxisId),xAxisOrientation=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("orientation",{bottom:"bottom",top:"top"},"bottom",xAxisId),xAxisAngle=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("angle",0,{},xAxisId),xAxisTickLine=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("tickLine",!1,xAxisId),xAxisTickSize=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("tickSize",6,{},xAxisId),xAxisMirror=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("mirror",!1,xAxisId),xAxisReversed=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("reversed",!1,xAxisId),xAxisTickMargin=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("tickMargin",10,{},xAxisId),xAxisMinTickGap=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("minTickGap",5,{},xAxisId),xAxisLine=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("axisLine",!1,xAxisId),yAxisHide=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hide",!1,yAxisId),yAxisOrientation=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("orientation",{left:"left",right:"right"},"left",yAxisId),yAxisAngle=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("angle",0,{},yAxisId),yAxisTickLine=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("tickLine",!1,yAxisId),yAxisTickSize=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("tickSize",6,{},yAxisId),yAxisMirror=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("mirror",!1,yAxisId),yAxisReversed=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("reversed",!1,yAxisId),yAxisTickCoiunt=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("tickCount",6,{},yAxisId),yAxisTickMargin=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("tickMargin",0,{},yAxisId),yAxisMinTickGap=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("minTickGap",5,{},yAxisId),yAxisLine=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("axisLine",!1,yAxisId),yAxisLabel=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("label","тыс.",yAxisId),legendAlign=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("align",{left:"left",center:"center",right:"right"},"center",legendId),legendVerticalAlign=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("verticalAlign",{bottom:"bottom",middle:"middle",top:"top"},"bottom",legendId),legendMarginTop=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("marginTop",10,{},legendId),legendIconHeight=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("iconHeight",16,{},legendId),tooltipArrow=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("arrow",!0,tooltipId),tooltipIsAnimationActive=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("isAnimationActive",!0,tooltipId),tooltipSeparator=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("separator"," ",tooltipId),tooltipOffset=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("offset",20,{},tooltipId),cursorStroke=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("cursor.stroke","var(--color-light-neutral-400)",tooltipId),cursorStrokeWidth=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("cursor.strokeWidth",1,{},tooltipId),tooltipFilterNull=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("filterNull",!0,tooltipId),tooltipAnimationBegin=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("animationBegin",0,{},tooltipId),tooltipAnimationDuration=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("animationDuration",500,{},tooltipId),tooltipAnimationEasing=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("animationEasing",{ease:"ease","ease-in":"ease-in","ease-out":"ease-out","ease-in-out":"ease-in-out",linear:"linear"},"ease",tooltipId),travellerWidth=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("travellerWidth",20,{},brushId),brushHeight=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("height",20,{},brushId),brushStartIndex=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("startIndex",0,{min:0,max:5},brushId),brushEndIndex=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("endIndex",5,{min:0,max:5},brushId),brushStroke=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("stroke","var(--color-static-status-blue)",brushId),brushMargin=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("brushMargin",10,{min:0,max:100},brushId),brushHeightAlwaysShowText=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("alwaysShowText",!0,brushId),lineHide=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hide",!1,lineId),lineHideLegend=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hideLegend",!1,lineId),lineHideTooltip=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hideTooltip",!1,lineId),lineZIndex=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("zIndex",50,{},lineId),lineIcon=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("icon",iconTypes,"circleLine",lineId),lineName=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("properties.name","остаток",lineId),lineStroke=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("properties.stroke","var(--color-static-status-blue)",lineId),lineDot=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("properties.dot",!1,lineId),lineScale=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("properties.dotSettings.scale",1.5,{},lineId),lineInitScale=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("properties.dotSettings.initScale",1,{},lineId),lineWidth=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("properties.dotSettings.width",18,{},lineId),lineType=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("properties.type",{linear:"linear",monotone:"monotone",step:"step"},"monotone",lineId),lineInheritStroke=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("properties.inheritStroke",!0,lineId),lineStrokeWidth=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("properties.strokeWidth",2,{},lineId),lineStrokeDasharray=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("properties.strokeDasharray","1 0",lineId),barHideLegendFirst=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hideLegend",!1,barIdFirst),barHideTooltipFirst=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hideTooltip",!1,barIdFirst),barZIndexFirst=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("zIndex",1,{},barIdFirst),barIconFirst=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("icon",iconTypes,"circle",barIdFirst),barFillFirst=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("properties.fill","var(--color-static-graphic-persimmon)",barIdFirst),barNameFirst=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("properties.name","расход",barIdFirst),barHideLegendSecond=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hideLegend",!1,barIdSecond),barHideTooltipSecond=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hideTooltip",!1,barIdSecond),barZIndexSecond=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("zIndex",10,{},barIdSecond),barIconSecond=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("icon",iconTypes,"circle",barIdSecond),barFillSecond=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("properties.fill","var(--color-static-graphic-green-jungle)",barIdSecond),barNameSecond=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("properties.name","приход",barIdSecond),previewStyles=(0,_screenshot_utils_screenshots_story_utils__WEBPACK_IMPORTED_MODULE_3__.FX)((0,_screenshot_utils_screenshots_story_utils__WEBPACK_IMPORTED_MODULE_3__.Ph)("wrapperStyles")),isPreview=Object.keys(previewStyles).length>0,responsiveContainer={debounce:debounce},cartesianGrid={vertical:vertical,horizontal:horizontal,strokeDasharray:strokeDasharray,stroke:stroke,fill:isPreview?"var(--color-light-base-bg-secondary)":fill},composeChart={initMargin:{top:initMarginTop,bottom:initMarginBottom,left:marginLeft,right:marginRight},barGap:barGap,maxBarSize:maxBarSize,barCategoryGap:barCategoryGap},xAxis={hide:xAxisHide,axisLine:xAxisLine,type:"category",allowDecimals:!0,allowDuplicatedCategory:!0,angle:xAxisAngle,tickCount:5,interval:"preserveStartEnd",minTickGap:xAxisMinTickGap,tickLine:xAxisTickLine,tickSize:xAxisTickSize,mirror:xAxisMirror,reversed:xAxisReversed,tickMargin:xAxisTickMargin,dataKey:"label",orientation:xAxisOrientation},yAxis={hide:yAxisHide,axisLine:yAxisLine,type:"number",allowDecimals:!0,allowDuplicatedCategory:!0,angle:yAxisAngle,tickCount:yAxisTickCoiunt,interval:"preserveStartEnd",minTickGap:yAxisMinTickGap,tickLine:yAxisTickLine,tickSize:yAxisTickSize,mirror:yAxisMirror,reversed:yAxisReversed,tickMargin:yAxisTickMargin,tickFormatter:function tickFormatter(decimal){return"".concat(decimal,"\xa0").concat(yAxisLabel)},orientation:yAxisOrientation},legend={verticalAlign:legendVerticalAlign,align:legendAlign,marginTop:legendMarginTop,iconHeight:legendIconHeight},tooltip={separator:tooltipSeparator,offset:tooltipOffset,filterNull:tooltipFilterNull,cursor:{stroke:cursorStroke,strokeWidth:cursorStrokeWidth},isAnimationActive:tooltipIsAnimationActive,animationBegin:tooltipAnimationBegin,animationDuration:tooltipAnimationDuration,animationEasing:tooltipAnimationEasing,arrow:tooltipArrow},brush={dataKey:"label",travellerWidth:travellerWidth,startIndex:brushStartIndex,endIndex:brushEndIndex,brushMargin:brushMargin,height:brushHeight,alwaysShowText:brushHeightAlwaysShowText,stroke:brushStroke},labelsBarChart=["Январь","Февраль","Март","Апрель","Май","Июнь"],barChartFirst={hide:barHideLegendFirst,hideLegend:barHideLegendFirst,hideTooltip:barHideTooltipFirst,zIndex:barZIndexFirst,chart:"bar",icon:barIconFirst,properties:{name:barNameFirst,dataKey:"uv",formatter:function formatter(decimal){return"".concat(1e3*decimal)},fill:barFillFirst},data:[{label:"Январь",value:80},{label:"Февраль",value:140},{label:"Март",value:70},{label:"Апрель",value:210},{label:"Май",value:80},{label:"Июнь",value:20}]},barChartSecond={hide:barHideLegendSecond,hideLegend:barHideLegendSecond,hideTooltip:barHideTooltipSecond,zIndex:barZIndexSecond,chart:"bar",icon:barIconSecond,properties:{name:barNameSecond,dataKey:"pv",formatter:function formatter(decimal){return"".concat(1e3*decimal)},fill:barFillSecond},data:[{label:"Январь",value:110},{label:"Февраль",value:190},{label:"Март",value:60},{label:"Апрель",value:230},{label:"Май",value:190},{label:"Июнь",value:30}]},lineChart={hide:lineHide,hideLegend:lineHideLegend,hideTooltip:lineHideTooltip,zIndex:lineZIndex,chart:"line",icon:lineIcon,properties:{name:lineName,dataKey:"cnt",stroke:lineStroke,dot:lineDot,dotSettings:{scale:lineScale,initScale:lineInitScale,width:lineWidth,height:lineWidth},inheritStroke:lineInheritStroke,formatter:function formatter(decimal){return"".concat(1e3*decimal)},type:lineType,strokeWidth:lineStrokeWidth,strokeDasharray:lineStrokeDasharray},data:[{label:"Январь",value:60},{label:"Февраль",value:95},{label:"Март",value:20},{label:"Апрель",value:180},{label:"Май",value:70},{label:"Июнь",value:10}]};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div",{style:(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)({display:"flex"},previewStyles),children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{style:(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)({},{marginBottom:"20px",top:25,width:"1050px",height:"600px"}),isPreview&&{width:"644px",height:"407px"}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_alfalab_core_components_chart__WEBPACK_IMPORTED_MODULE_2__.Chart,{id:"bar-chart",composeChart:composeChart,responsiveContainer:responsiveContainer,cartesianGrid:cartesianGrid,xAxis:xAxis,yAxis:yAxis,tooltip:tooltip,legend:!isPreview&&legend,brush:!isPreview&&brush,labels:labelsBarChart,series:[barChartFirst,barChartSecond,lineChart]})}),!isPreview&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{style:{width:"500px",height:"600px",overflow:"auto"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("pre",{children:JSON.stringify((series=JSON.parse(JSON.stringify(obj={id:"bar-chart",composeChart:composeChart,responsiveContainer:responsiveContainer,cartesianGrid:cartesianGrid,xAxis:xAxis,yAxis:yAxis,tooltip:tooltip,legend:legend,brush:brush,labels:labelsBarChart,series:[barChartFirst,barChartSecond,lineChart]})).series.map(function(item){return item.data=[{label:"label",value:"value"},"..."],item}),(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)({},obj),{},{labels:["label","label","..."],series:series})),null,2)})})]})}},chart_line={name:"Chart.Line",render:function render(){var obj,series,formatXAxis=function(time){return(0,date_fns_format__WEBPACK_IMPORTED_MODULE_6__.Z)(time,"dd LLL")},linesType={linear:"linear",monotone:"monotone",step:"step"},iconTypes={circleLine:"circleLine",filledCircle:"filledCircle",strokeCircle:"strokeCircle",circle:"circle"},cartesianGridId="cartesianGridId",composeChartId="composeChartId",xAxisId="xAxisId",yAxisId="yAxisId",legendId="legendId",tooltipId="tooltipId",brushId="brushId",lineId="lineId",areaId="areaId",debounce=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("debounce",0,{},"responsiveContainerId"),vertical=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("vertical",!0,cartesianGridId),horizontal=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("horizontal",!0,cartesianGridId),strokeDasharray=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("strokeDasharray",0,{},cartesianGridId),stroke=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("stroke","var(--color-light-neutral-400)",cartesianGridId),fill=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("fill","var(--color-light-base-bg-primary)",cartesianGridId),initMarginTop=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("initMargin.top",40,{},composeChartId),initMarginBottom=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("initMargin.bottom",20,{},composeChartId),marginLeft=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("initMargin.left",20,{},composeChartId),marginRight=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("initMargin.right",70,{},composeChartId),barCategoryGap=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("barCategoryGap","30%",composeChartId),barSize=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("barSize",24,{},composeChartId),maxBarSize=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("maxBarSize",24,{},composeChartId),xAxisHide=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hide",!1,xAxisId),xAxisOrientation=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("orientation",{bottom:"bottom",top:"top"},"bottom",xAxisId),xAxisAngle=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("angle",0,{},xAxisId),xAxisTickLine=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("tickLine",!1,xAxisId),xAxisTickSize=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("tickSize",6,{},xAxisId),xAxisMirror=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("mirror",!1,xAxisId),xAxisReversed=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("reversed",!1,xAxisId),xAxisTickMargin=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("tickMargin",2,{},xAxisId),xAxisMinTickGap=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("minTickGap",20,{},xAxisId),xAxisLine=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("axisLine",!1,xAxisId),yAxisHide=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hide",!1,yAxisId),yAxisOrientation=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("orientation",{left:"left",right:"right"},"left",yAxisId),yAxisAngle=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("angle",0,{},yAxisId),yAxisTickLine=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("tickLine",!1,yAxisId),yAxisTickSize=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("tickSize",6,{},yAxisId),yAxisMirror=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("mirror",!1,yAxisId),yAxisReversed=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("reversed",!1,yAxisId),yAxisTickCoiunt=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("tickCount",6,{},yAxisId),yAxisMinTickGap=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("minTickGap",5,{},yAxisId),yAxisTickMargin=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("tickMargin",0,{},yAxisId),yAxisLine=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("axisLine",!1,yAxisId),yAxisLabel=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("label","",yAxisId),legendAlign=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("align",{left:"left",center:"center",right:"right"},"right",legendId),legendVerticalAlign=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("verticalAlign",{bottom:"bottom",middle:"middle",top:"top"},"top",legendId),legendMarginTop=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("marginTop",20,{},legendId),legendIconHeight=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("iconHeight",20,{},legendId),tooltipArrow=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("arrow",!0,tooltipId),tooltipIsAnimationActive=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("isAnimationActive",!0,tooltipId),tooltipSeparator=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("separator"," ",tooltipId),tooltipOffset=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("offset",20,{},tooltipId),cursorStroke=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("cursor.stroke","var(--color-light-neutral-400)",tooltipId),cursorStrokeWidth=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("cursor.strokeWidth",1,{},tooltipId),tooltipFilterNull=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("filterNull",!0,tooltipId),tooltipAnimationBegin=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("animationBegin",0,{},tooltipId),tooltipAnimationDuration=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("animationDuration",500,{},tooltipId),tooltipAnimationEasing=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("animationEasing",{ease:"ease","ease-in":"ease-in","ease-out":"ease-out","ease-in-out":"ease-in-out",linear:"linear"},"ease",tooltipId),travellerWidth=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("travellerWidth",20,{},brushId),brushHeight=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("height",20,{},brushId),brushStartIndex=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("startIndex",0,{min:0,max:47},brushId),brushEndIndex=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("endIndex",47,{min:0,max:47},brushId),brushStroke=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("stroke","var(--color-static-status-blue)",brushId),brushMargin=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("brushMargin",10,{min:0,max:100},brushId),brushHeightAlwaysShowText=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("alwaysShowText",!0,brushId),lineHide=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hide",!1,lineId),lineHideLegend=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hideLegend",!1,lineId),lineHideTooltip=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hideTooltip",!1,lineId),lineIcon=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("icon",iconTypes,"strokeCircle",lineId),lineName=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("properties.name","текущий период",lineId),lineStroke=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("properties.stroke","var(--color-static-status-blue)",lineId),lineDot=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("properties.dot",!0,lineId),lineScale=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("properties.dotSettings.scale",1.5,{},lineId),lineInitScale=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("properties.dotSettings.initScale",0,{},lineId),lineStrokeWidth=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("properties.strokeWidth",2,{},lineId),lineInheritStroke=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("properties.inheritStroke",!0,lineId),lineType=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("properties.type",linesType,"monotone",lineId),lineWidth=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("properties.dotSettings.width",18,{},lineId),lineStrokeDasharray=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("properties.strokeDasharray","10 10",lineId),areaHide=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hide",!1,areaId),areaHideLegend=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hideLegend",!1,areaId),areaHideTooltip=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hideTooltip",!1,areaId),areaZIndex=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("zIndex",100,{},areaId),areaIcon=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("icon",iconTypes,"filledCircle",areaId),areaOffset=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("offset",.1,{min:0,max:1,step:.1},areaId),areaColor_1=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("gradient.points.color above","rgba(0, 112, 224, 0.2)",areaId),areaColorOpacity_1=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("gradient.points.opacity of color above",1,{min:0,max:1,step:.1},areaId),areaColor_2=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("gradient.points.color below","rgba(0, 128, 255, 0)",areaId),areaColorOpacity_2=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("gradient opacity of color below",1,{min:0,max:1,step:.1},areaId),areaName=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("properties.name","предыдущий период",areaId),areaType=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("properties.type",linesType,"monotone",areaId),areaStroke=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("properties.stroke","var(--color-static-status-blue)",areaId),areaScale=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("properties.dotSettings.scale",1.5,{},areaId),areaInitScale=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("properties.dotSettings.initScale",0,{},areaId),areaWidth=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("properties.dotSettings.width",18,{},areaId),areaStrokeWidth=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("properties.strokeWidth",2,{},areaId),areaDot=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("properties.dot",!0,areaId),responsiveContainer={debounce:debounce},cartesianGrid={vertical:vertical,horizontal:horizontal,strokeDasharray:strokeDasharray,stroke:stroke,fill:fill},composeChart={initMargin:{top:initMarginTop,bottom:initMarginBottom,left:marginLeft,right:marginRight},barCategoryGap:barCategoryGap,barSize:barSize,maxBarSize:maxBarSize},xAxis={hide:xAxisHide,axisLine:xAxisLine,type:"category",allowDecimals:!0,allowDuplicatedCategory:!0,angle:xAxisAngle,tickCount:5,interval:"preserveStartEnd",minTickGap:xAxisMinTickGap,tickLine:xAxisTickLine,tickSize:xAxisTickSize,mirror:xAxisMirror,reversed:xAxisReversed,dataKey:"label",tickMargin:xAxisTickMargin,orientation:xAxisOrientation,tickFormatter:formatXAxis,tickType:"point"},yAxis={hide:yAxisHide,axisLine:yAxisLine,type:"number",allowDecimals:!0,allowDuplicatedCategory:!0,angle:yAxisAngle,tickCount:yAxisTickCoiunt,interval:"preserveStartEnd",minTickGap:yAxisMinTickGap,tickLine:yAxisTickLine,tickSize:yAxisTickSize,mirror:yAxisMirror,reversed:yAxisReversed,tickFormatter:function tickFormatter(decimal){return"".concat(decimal,"\xa0").concat(yAxisLabel)},orientation:yAxisOrientation,tickMargin:yAxisTickMargin},legend={verticalAlign:legendVerticalAlign,align:legendAlign,marginTop:legendMarginTop,iconHeight:legendIconHeight},tooltip={separator:tooltipSeparator,offset:tooltipOffset,filterNull:tooltipFilterNull,cursor:{stroke:cursorStroke,strokeWidth:cursorStrokeWidth},isAnimationActive:tooltipIsAnimationActive,animationBegin:tooltipAnimationBegin,animationDuration:tooltipAnimationDuration,animationEasing:tooltipAnimationEasing,arrow:tooltipArrow,labelFormatter:formatXAxis},brush={dataKey:"label",travellerWidth:travellerWidth,startIndex:brushStartIndex,endIndex:brushEndIndex,brushMargin:brushMargin,height:brushHeight,stroke:brushStroke,alwaysShowText:brushHeightAlwaysShowText,tickFormatter:formatXAxis},labelsLineChart=[16082424e5,16083288e5,16084152e5,16085016e5,1608588e6,16086744e5,16087608e5,16088472e5,16089336e5,160902e7,16091064e5,16091928e5,16092792e5,16093656e5,1609452e6,16095384e5,16096248e5,16097112e5,16097976e5,1609884e6,16099704e5,16100568e5,16101432e5,16102296e5,1610316e6,16104024e5,16104888e5,16105752e5,16106616e5,1610748e6,16108344e5,16109208e5,16110072e5,16110936e5,161118e7,16112664e5,16113528e5,16114392e5,16115256e5,1611612e6,16116984e5,16117848e5,16118712e5,16119576e5,1612044e6,16121304e5,16122168e5,16123032e5],areaChart={hide:areaHide,hideLegend:areaHideLegend,hideTooltip:areaHideTooltip,zIndex:areaZIndex,chart:"area",icon:areaIcon,offset:areaOffset,gradient:{gid:"ar-grad",points:[{offset:0,stopColor:areaColor_1,stopOpacity:areaColorOpacity_1},{offset:95,stopColor:areaColor_2,stopOpacity:areaColorOpacity_2}]},properties:{name:areaName,dataKey:"a",type:areaType,stroke:areaStroke,dotSettings:{scale:areaScale,initScale:areaInitScale,width:areaWidth,height:areaWidth},dot:areaDot,strokeWidth:areaStrokeWidth},data:[{label:16082424e5,value:70},{label:16083288e5,value:40},{label:16084152e5,value:69},{label:16085016e5,value:84},{label:1608588e6,value:29},{label:16086744e5,value:74},{label:16087608e5,value:39},{label:16088472e5,value:74},{label:16089336e5,value:44},{label:160902e7,value:43},{label:16091064e5,value:57},{label:16091928e5,value:52},{label:16092792e5,value:62},{label:16093656e5,value:74},{label:1609452e6,value:81},{label:16095384e5,value:78},{label:16096248e5,value:91},{label:16097112e5,value:80},{label:16097976e5,value:90},{label:1609884e6,value:80},{label:16099704e5,value:91},{label:16100568e5,value:93},{label:16101432e5,value:72},{label:16102296e5,value:101},{label:1610316e6,value:88},{label:16104024e5,value:110},{label:16104888e5,value:119},{label:16105752e5,value:130},{label:16106616e5,value:98},{label:1610748e6,value:102},{label:16108344e5,value:139},{label:16109208e5,value:123},{label:16110072e5,value:127},{label:16110936e5,value:114},{label:161118e7,value:123},{label:16112664e5,value:86},{label:16113528e5,value:136},{label:16114392e5,value:139},{label:16115256e5,value:138},{label:1611612e6,value:153},{label:16116984e5,value:122},{label:16117848e5,value:169},{label:16118712e5,value:192},{label:16119576e5,value:195},{label:1612044e6,value:144},{label:16121304e5,value:142},{label:16122168e5,value:176},{label:16123032e5,value:174}]};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div",{style:{display:"flex"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{style:{marginBottom:"20px",top:25,width:"1050px",height:"600px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_alfalab_core_components_chart__WEBPACK_IMPORTED_MODULE_2__.Chart,{id:"line-chart",composeChart:composeChart,responsiveContainer:responsiveContainer,cartesianGrid:cartesianGrid,xAxis:xAxis,yAxis:yAxis,tooltip:tooltip,legend:legend,brush:brush,labels:labelsLineChart,series:[{hide:lineHide,hideLegend:lineHideLegend,hideTooltip:lineHideTooltip,zIndex:200,chart:"line",icon:lineIcon,properties:{name:lineName,dataKey:"b",stroke:lineStroke,dot:lineDot,dotSettings:{scale:lineScale,initScale:lineInitScale,width:lineWidth,height:lineWidth},inheritStroke:lineInheritStroke,type:lineType,strokeWidth:lineStrokeWidth,strokeDasharray:lineStrokeDasharray},data:[{label:16082424e5,value:35},{label:16083288e5,value:20},{label:16084152e5,value:34},{label:16085016e5,value:42},{label:1608588e6,value:14},{label:16086744e5,value:37},{label:16087608e5,value:19},{label:16088472e5,value:37},{label:16089336e5,value:22},{label:160902e7,value:21},{label:16091064e5,value:28},{label:16091928e5,value:26},{label:16092792e5,value:31},{label:16093656e5,value:37},{label:1609452e6,value:40},{label:16095384e5,value:39},{label:16096248e5,value:45},{label:16097112e5,value:40},{label:16097976e5,value:45},{label:1609884e6,value:40},{label:16099704e5,value:45},{label:16100568e5,value:46},{label:16101432e5,value:36},{label:16102296e5,value:50},{label:1610316e6,value:44},{label:16104024e5,value:55},{label:16104888e5,value:59},{label:16105752e5,value:65},{label:16106616e5,value:49},{label:1610748e6,value:51},{label:16108344e5,value:69},{label:16109208e5,value:61},{label:16110072e5,value:63},{label:16110936e5,value:57},{label:161118e7,value:61},{label:16112664e5,value:43},{label:16113528e5,value:68},{label:16114392e5,value:69},{label:16115256e5,value:69},{label:1611612e6,value:76},{label:16116984e5,value:61},{label:16117848e5,value:84},{label:16118712e5,value:96},{label:16119576e5,value:97},{label:1612044e6,value:72},{label:16121304e5,value:71},{label:16122168e5,value:88},{label:16123032e5,value:87}]},areaChart]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{style:{width:"500px",height:"600px",overflow:"auto"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("pre",{children:JSON.stringify((series=JSON.parse(JSON.stringify(obj={id:"line-chart",composeChart:composeChart,responsiveContainer:responsiveContainer,cartesianGrid:cartesianGrid,xAxis:xAxis,yAxis:yAxis,tooltip:tooltip,legend:legend,brush:brush,labels:labelsLineChart,series:[areaChart]})).series.map(function(item){return item.data=[{label:"label",value:"value"},"..."],item}),(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)({},obj),{},{labels:["label","label","..."],series:series})),null,2)})})]})}},chart_histogram={name:"Chart.Histogram",render:function render(){var obj,series,cartesianGridId="cartesianGrid",composeChartId="composeChart",xAxisId="xAxis",debounce=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("debounce",0,{},"responsiveContainer"),vertical=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("vertical",!1,cartesianGridId),horizontal=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("horizontal",!1,cartesianGridId),initMarginTop=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("initMargin.top",40,{},composeChartId),initMarginBottom=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("initMargin.bottom",20,{},composeChartId),marginLeft=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("initMargin.left",20,{},composeChartId),marginRight=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("initMargin.right",50,{},composeChartId),barCategoryGap=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("barCategoryGap","10%",composeChartId),barGap=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("barGap",4,{},composeChartId),maxBarSize=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("maxBarSize",64,{},composeChartId),xAxisHide=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hide",!1,xAxisId),xAxisOrientation=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("orientation",{bottom:"bottom",top:"top"},"bottom",xAxisId),xAxisTickLine=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("tickLine",!1,xAxisId),xAxisTickSize=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("tickSize",6,{},xAxisId),xAxisTickMargin=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("tickMargin",10,{},xAxisId),xAxisMinTickGap=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("minTickGap",5,{},xAxisId),xAxisLine=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("axisLine",!1,xAxisId),yAxisHide=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hide",!0,"yAxis"),barHideLegend=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hideLegend",!1,"bar"),barHideTooltip=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("hideTooltip",!1,"bar"),barZIndex=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("zIndex",10,{},"bar"),barIcon=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("icon",{circleLine:"circleLine",filledCircle:"filledCircle",strokeCircle:"strokeCircle",circle:"circle"},"circle","bar"),barRadius=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.object)("radius",{top:10,bottom:10},"bar"),barFormatter=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("labelList.formatter","","bar"),barLabelListOffset=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.number)("labelList.offset",10,{},"bar"),barFill=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("properties.fill","var(--color-static-graphic-green-jungle)","bar"),barName=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("properties.name","приход","bar"),responsiveContainer={debounce:debounce},cartesianGrid={vertical:vertical,horizontal:horizontal},composeChart={initMargin:{top:initMarginTop,bottom:initMarginBottom,left:marginLeft,right:marginRight},barGap:barGap,maxBarSize:maxBarSize,barCategoryGap:barCategoryGap},xAxis={hide:xAxisHide,axisLine:xAxisLine,type:"category",allowDecimals:!0,allowDuplicatedCategory:!0,interval:"preserveStartEnd",minTickGap:xAxisMinTickGap,tickLine:xAxisTickLine,tickSize:xAxisTickSize,tickMargin:xAxisTickMargin,dataKey:"label",orientation:xAxisOrientation},yAxis={hide:yAxisHide},labelsBarChart=["Long label","Label1","Label2","Label3","Label4","Label5","Label6","Label7"],barChart={hide:barHideLegend,hideLegend:barHideLegend,hideTooltip:barHideTooltip,zIndex:barZIndex,chart:"bar",icon:barIcon,radius:barRadius||0,labelList:{formatter:function formatter(decimal){return"".concat(decimal).concat(barFormatter)},offset:barLabelListOffset},properties:{name:barName,dataKey:"cm",formatter:function formatter(decimal){return"".concat(1e3*decimal)},fill:barFill},data:[{label:"Long label",value:5e3},{label:"Label1",value:650},{label:"Label2",value:3522},{label:"Label3",value:0},{label:"Label4",value:2e3},{label:"Label5",value:1043},{label:"Label6",value:600},{label:"Label7",value:1}]};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div",{style:{display:"flex"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{style:{marginBottom:"20px",top:25,width:"1050px",height:"600px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_alfalab_core_components_chart__WEBPACK_IMPORTED_MODULE_2__.Chart,{id:"bar-chart",composeChart:composeChart,responsiveContainer:responsiveContainer,cartesianGrid:cartesianGrid,xAxis:xAxis,yAxis:yAxis,labels:labelsBarChart,series:[barChart]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{style:{width:"500px",height:"600px",overflow:"auto"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("pre",{children:JSON.stringify((series=JSON.parse(JSON.stringify(obj={id:"bar-chart",composeChart:composeChart,responsiveContainer:responsiveContainer,cartesianGrid:cartesianGrid,xAxis:xAxis,yAxis:yAxis,labels:labelsBarChart,series:[barChart]})).series.map(function(item){return item.data=[{label:"label",value:"value"},"..."],item}),(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)({},obj),{},{labels:["label","label","..."],series:series})),null,2)})})]})}};__webpack_exports__.default=meta,chart_bar.parameters=(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)({},chart_bar.parameters),{},{docs:(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)({},null===(_chart_bar$parameters=chart_bar.parameters)||void 0===_chart_bar$parameters?void 0:_chart_bar$parameters.docs),{},{source:(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)({originalSource:"{\n  name: 'Chart.Bar',\n  render: () => {\n    const clearData = obj => {\n      const copy = JSON.parse(JSON.stringify(obj));\n      const labels = ['label', 'label', '...'];\n      const series = copy.series.map(item => {\n        item.data = [{\n          label: 'label',\n          value: 'value'\n        }, '...'];\n        return item;\n      });\n      return {\n        ...obj,\n        labels,\n        series\n      };\n    };\n    const orientationVertical = {\n      bottom: 'bottom',\n      top: 'top'\n    };\n    const orientationHorizontal = {\n      left: 'left',\n      right: 'right'\n    };\n    const alignHorizontal = {\n      left: 'left',\n      center: 'center',\n      right: 'right'\n    };\n    const alignVertical = {\n      bottom: 'bottom',\n      middle: 'middle',\n      top: 'top'\n    };\n    const linesType = {\n      linear: 'linear',\n      monotone: 'monotone',\n      step: 'step'\n    };\n    const animationType = {\n      ease: 'ease',\n      'ease-in': 'ease-in',\n      'ease-out': 'ease-out',\n      'ease-in-out': 'ease-in-out',\n      linear: 'linear'\n    };\n    const iconTypes = {\n      circleLine: 'circleLine',\n      filledCircle: 'filledCircle',\n      strokeCircle: 'strokeCircle',\n      circle: 'circle'\n    };\n    const responsiveContainerId = 'responsiveContainer';\n    const cartesianGridId = 'cartesianGrid';\n    const composeChartId = 'composeChart';\n    const xAxisId = 'xAxis';\n    const yAxisId = 'yAxis';\n    const legendId = 'legend';\n    const tooltipId = 'tooltip';\n    const brushId = 'brush';\n    const lineId = 'line';\n    const barIdFirst = 'barFirst';\n    const barIdSecond = 'barSecond';\n    const debounce = number('debounce', 0, {}, responsiveContainerId);\n    const vertical = boolean('vertical', false, cartesianGridId);\n    const horizontal = boolean('horizontal', true, cartesianGridId);\n    const strokeDasharray = number('strokeDasharray', 0, {}, cartesianGridId);\n    const stroke = text('stroke', 'var(--color-light-neutral-400)', cartesianGridId);\n    const fill = text('fill', 'var(--color-light-base-bg-primary)', cartesianGridId);\n    const initMarginTop = number('initMargin.top', 40, {}, composeChartId);\n    const initMarginBottom = number('initMargin.bottom', 20, {}, composeChartId);\n    const marginLeft = number('initMargin.left', 20, {}, composeChartId);\n    const marginRight = number('initMargin.right', 50, {}, composeChartId);\n    const barCategoryGap = text('barCategoryGap', '30%', composeChartId);\n    const barGap = number('barGap', 4, {}, composeChartId);\n    const maxBarSize = number('maxBarSize', 24, {}, composeChartId);\n    const xAxisHide = boolean('hide', false, xAxisId);\n    const xAxisOrientation = select('orientation', orientationVertical, 'bottom', xAxisId);\n    const xAxisAngle = number('angle', 0, {}, xAxisId);\n    const xAxisTickLine = boolean('tickLine', false, xAxisId);\n    const xAxisTickSize = number('tickSize', 6, {}, xAxisId);\n    const xAxisMirror = boolean('mirror', false, xAxisId);\n    const xAxisReversed = boolean('reversed', false, xAxisId);\n    const xAxisTickMargin = number('tickMargin', 10, {}, xAxisId);\n    const xAxisMinTickGap = number('minTickGap', 5, {}, xAxisId);\n    const xAxisLine = boolean('axisLine', false, xAxisId);\n    const yAxisHide = boolean('hide', false, yAxisId);\n    const yAxisOrientation = select('orientation', orientationHorizontal, 'left', yAxisId);\n    const yAxisAngle = number('angle', 0, {}, yAxisId);\n    const yAxisTickLine = boolean('tickLine', false, yAxisId);\n    const yAxisTickSize = number('tickSize', 6, {}, yAxisId);\n    const yAxisMirror = boolean('mirror', false, yAxisId);\n    const yAxisReversed = boolean('reversed', false, yAxisId);\n    const yAxisTickCoiunt = number('tickCount', 6, {}, yAxisId);\n    const yAxisTickMargin = number('tickMargin', 0, {}, yAxisId);\n    const yAxisMinTickGap = number('minTickGap', 5, {}, yAxisId);\n    const yAxisLine = boolean('axisLine', false, yAxisId);\n    const yAxisLabel = text('label', 'тыс.', yAxisId);\n    const legendAlign = select('align', alignHorizontal, 'center', legendId);\n    const legendVerticalAlign = select('verticalAlign', alignVertical, 'bottom', legendId);\n    const legendMarginTop = number('marginTop', 10, {}, legendId);\n    const legendIconHeight = number('iconHeight', 16, {}, legendId);\n    const tooltipArrow = boolean('arrow', true, tooltipId);\n    const tooltipIsAnimationActive = boolean('isAnimationActive', true, tooltipId);\n    const tooltipSeparator = text('separator', ' ', tooltipId);\n    const tooltipOffset = number('offset', 20, {}, tooltipId);\n    const cursorStroke = text('cursor.stroke', 'var(--color-light-neutral-400)', tooltipId);\n    const cursorStrokeWidth = number('cursor.strokeWidth', 1, {}, tooltipId);\n    const tooltipFilterNull = boolean('filterNull', true, tooltipId);\n    const tooltipAnimationBegin = number('animationBegin', 0, {}, tooltipId);\n    const tooltipAnimationDuration = number('animationDuration', 500, {}, tooltipId);\n    const tooltipAnimationEasing = select('animationEasing', animationType, 'ease', tooltipId);\n    const travellerWidth = number('travellerWidth', 20, {}, brushId);\n    const brushHeight = number('height', 20, {}, brushId);\n    const brushStartIndex = number('startIndex', 0, {\n      min: 0,\n      max: 5\n    }, brushId);\n    const brushEndIndex = number('endIndex', 5, {\n      min: 0,\n      max: 5\n    }, brushId);\n    const brushStroke = text('stroke', 'var(--color-static-status-blue)', brushId);\n    const brushMargin = number('brushMargin', 10, {\n      min: 0,\n      max: 100\n    }, brushId);\n    const brushHeightAlwaysShowText = boolean('alwaysShowText', true, brushId);\n    const lineHide = boolean('hide', false, lineId);\n    const lineHideLegend = boolean('hideLegend', false, lineId);\n    const lineHideTooltip = boolean('hideTooltip', false, lineId);\n    const lineZIndex = number('zIndex', 50, {}, lineId);\n    const lineIcon = select('icon', iconTypes, 'circleLine', lineId);\n    const lineName = text('properties.name', 'остаток', lineId);\n    const lineStroke = text('properties.stroke', 'var(--color-static-status-blue)', lineId);\n    const lineDot = boolean('properties.dot', false, lineId);\n    const lineScale = number('properties.dotSettings.scale', 1.5, {}, lineId);\n    const lineInitScale = number('properties.dotSettings.initScale', 1, {}, lineId);\n    const lineWidth = number('properties.dotSettings.width', 18, {}, lineId);\n    const lineType = select('properties.type', linesType, 'monotone', lineId);\n    const lineInheritStroke = boolean('properties.inheritStroke', true, lineId);\n    const lineStrokeWidth = number('properties.strokeWidth', 2, {}, lineId);\n    const lineStrokeDasharray = text('properties.strokeDasharray', '1 0', lineId);\n    const barHideLegendFirst = boolean('hideLegend', false, barIdFirst);\n    const barHideTooltipFirst = boolean('hideTooltip', false, barIdFirst);\n    const barZIndexFirst = number('zIndex', 1, {}, barIdFirst);\n    const barIconFirst = select('icon', iconTypes, 'circle', barIdFirst);\n    const barFillFirst = text('properties.fill', 'var(--color-static-graphic-persimmon)', barIdFirst);\n    const barNameFirst = text('properties.name', 'расход', barIdFirst);\n    const barHideLegendSecond = boolean('hideLegend', false, barIdSecond);\n    const barHideTooltipSecond = boolean('hideTooltip', false, barIdSecond);\n    const barZIndexSecond = number('zIndex', 10, {}, barIdSecond);\n    const barIconSecond = select('icon', iconTypes, 'circle', barIdSecond);\n    const barFillSecond = text('properties.fill', 'var(--color-static-graphic-green-jungle)', barIdSecond);\n    const barNameSecond = text('properties.name', 'приход', barIdSecond);\n    const previewStyles = stylesStringToObj(getQueryParam('wrapperStyles'));\n    const isPreview = Object.keys(previewStyles).length > 0;\n    const responsiveContainer = {\n      debounce\n    };\n    const cartesianGrid = {\n      vertical,\n      horizontal,\n      strokeDasharray,\n      stroke,\n      fill: isPreview ? 'var(--color-light-base-bg-secondary)' : fill\n    };\n    const composeChart = {\n      initMargin: {\n        top: initMarginTop,\n        bottom: initMarginBottom,\n        left: marginLeft,\n        right: marginRight\n      },\n      barGap,\n      maxBarSize,\n      barCategoryGap\n    };\n    const xAxis = {\n      hide: xAxisHide,\n      axisLine: xAxisLine,\n      type: 'category',\n      allowDecimals: true,\n      allowDuplicatedCategory: true,\n      angle: xAxisAngle,\n      tickCount: 5,\n      interval: 'preserveStartEnd',\n      minTickGap: xAxisMinTickGap,\n      tickLine: xAxisTickLine,\n      tickSize: xAxisTickSize,\n      mirror: xAxisMirror,\n      reversed: xAxisReversed,\n      tickMargin: xAxisTickMargin,\n      dataKey: 'label',\n      orientation: xAxisOrientation\n    };\n    const yAxis = {\n      hide: yAxisHide,\n      axisLine: yAxisLine,\n      type: 'number',\n      allowDecimals: true,\n      allowDuplicatedCategory: true,\n      angle: yAxisAngle,\n      tickCount: yAxisTickCoiunt,\n      interval: 'preserveStartEnd',\n      minTickGap: yAxisMinTickGap,\n      tickLine: yAxisTickLine,\n      tickSize: yAxisTickSize,\n      mirror: yAxisMirror,\n      reversed: yAxisReversed,\n      tickMargin: yAxisTickMargin,\n      tickFormatter: decimal => `${decimal}\\xa0${yAxisLabel}`,\n      orientation: yAxisOrientation\n    };\n    const legend = {\n      verticalAlign: legendVerticalAlign,\n      align: legendAlign,\n      marginTop: legendMarginTop,\n      iconHeight: legendIconHeight\n    };\n    const tooltip = {\n      separator: tooltipSeparator,\n      offset: tooltipOffset,\n      filterNull: tooltipFilterNull,\n      cursor: {\n        stroke: cursorStroke,\n        strokeWidth: cursorStrokeWidth\n      },\n      isAnimationActive: tooltipIsAnimationActive,\n      animationBegin: tooltipAnimationBegin,\n      animationDuration: tooltipAnimationDuration,\n      animationEasing: tooltipAnimationEasing,\n      arrow: tooltipArrow\n    };\n    const brush = {\n      dataKey: 'label',\n      travellerWidth,\n      startIndex: brushStartIndex,\n      endIndex: brushEndIndex,\n      brushMargin: brushMargin,\n      height: brushHeight,\n      alwaysShowText: brushHeightAlwaysShowText,\n      stroke: brushStroke\n    };\n    const labelsBarChart = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь'];\n    const barChartFirst = {\n      hide: barHideLegendFirst,\n      hideLegend: barHideLegendFirst,\n      hideTooltip: barHideTooltipFirst,\n      zIndex: barZIndexFirst,\n      chart: 'bar',\n      icon: barIconFirst,\n      properties: {\n        name: barNameFirst,\n        dataKey: 'uv',\n        formatter: decimal => `${decimal * 1000}`,\n        fill: barFillFirst\n      },\n      data: [{\n        label: 'Январь',\n        value: 80\n      }, {\n        label: 'Февраль',\n        value: 140\n      }, {\n        label: 'Март',\n        value: 70\n      }, {\n        label: 'Апрель',\n        value: 210\n      }, {\n        label: 'Май',\n        value: 80\n      }, {\n        label: 'Июнь',\n        value: 20\n      }]\n    };\n    const barChartSecond = {\n      hide: barHideLegendSecond,\n      hideLegend: barHideLegendSecond,\n      hideTooltip: barHideTooltipSecond,\n      zIndex: barZIndexSecond,\n      chart: 'bar',\n      icon: barIconSecond,\n      properties: {\n        name: barNameSecond,\n        dataKey: 'pv',\n        formatter: decimal => `${decimal * 1000}`,\n        fill: barFillSecond\n      },\n      data: [{\n        label: 'Январь',\n        value: 110\n      }, {\n        label: 'Февраль',\n        value: 190\n      }, {\n        label: 'Март',\n        value: 60\n      }, {\n        label: 'Апрель',\n        value: 230\n      }, {\n        label: 'Май',\n        value: 190\n      }, {\n        label: 'Июнь',\n        value: 30\n      }]\n    };\n    const lineChart = {\n      hide: lineHide,\n      hideLegend: lineHideLegend,\n      hideTooltip: lineHideTooltip,\n      zIndex: lineZIndex,\n      chart: 'line',\n      icon: lineIcon,\n      properties: {\n        name: lineName,\n        dataKey: 'cnt',\n        stroke: lineStroke,\n        dot: lineDot,\n        dotSettings: {\n          scale: lineScale,\n          initScale: lineInitScale,\n          width: lineWidth,\n          height: lineWidth\n        },\n        inheritStroke: lineInheritStroke,\n        formatter: decimal => `${decimal * 1000}`,\n        type: lineType,\n        strokeWidth: lineStrokeWidth,\n        strokeDasharray: lineStrokeDasharray\n      },\n      data: [{\n        label: 'Январь',\n        value: 60\n      }, {\n        label: 'Февраль',\n        value: 95\n      }, {\n        label: 'Март',\n        value: 20\n      }, {\n        label: 'Апрель',\n        value: 180\n      }, {\n        label: 'Май',\n        value: 70\n      }, {\n        label: 'Июнь',\n        value: 10\n      }]\n    };\n    const barChartOptions = {\n      id: 'bar-chart',\n      composeChart,\n      responsiveContainer,\n      cartesianGrid,\n      xAxis,\n      yAxis,\n      tooltip,\n      legend,\n      brush,\n      labels: labelsBarChart,\n      series: [barChartFirst, barChartSecond, lineChart]\n    };\n    const styleWrapperChart = {\n      marginBottom: '20px',\n      top: 25,\n      width: '1050px',\n      height: '600px'\n    };\n    return <div style={{\n      display: 'flex',\n      ...previewStyles\n    }}>\n                <div style={{\n        ...styleWrapperChart,\n        ...(isPreview && {\n          width: '644px',\n          height: '407px'\n        })\n      }}>\n                    <Chart id='bar-chart' composeChart={composeChart} responsiveContainer={responsiveContainer} cartesianGrid={cartesianGrid} xAxis={xAxis} yAxis={yAxis} tooltip={tooltip} legend={!isPreview && legend} brush={!isPreview && brush} labels={labelsBarChart} series={[barChartFirst, barChartSecond, lineChart]} />\n                </div>\n                {!isPreview && <div style={{\n        width: '500px',\n        height: '600px',\n        overflow: 'auto'\n      }}>\n                        <pre>{JSON.stringify(clearData(barChartOptions), null, 2)}</pre>\n                    </div>}\n            </div>;\n  }\n}"},null===(_chart_bar$parameters2=chart_bar.parameters)||void 0===_chart_bar$parameters2?void 0:null===(_chart_bar$parameters3=_chart_bar$parameters2.docs)||void 0===_chart_bar$parameters3?void 0:_chart_bar$parameters3.source)})}),chart_line.parameters=(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)({},chart_line.parameters),{},{docs:(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)({},null===(_chart_line$parameter=chart_line.parameters)||void 0===_chart_line$parameter?void 0:_chart_line$parameter.docs),{},{source:(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)({originalSource:"{\n  name: 'Chart.Line',\n  render: () => {\n    const clearData = obj => {\n      const copy = JSON.parse(JSON.stringify(obj));\n      const labels = ['label', 'label', '...'];\n      const series = copy.series.map(item => {\n        item.data = [{\n          label: 'label',\n          value: 'value'\n        }, '...'];\n        return item;\n      });\n      return {\n        ...obj,\n        labels,\n        series\n      };\n    };\n    const formatXAxis = time => format(time, 'dd LLL');\n    const orientationVertical = {\n      bottom: 'bottom',\n      top: 'top'\n    };\n    const orientationHorizontal = {\n      left: 'left',\n      right: 'right'\n    };\n    const alignHorizontal = {\n      left: 'left',\n      center: 'center',\n      right: 'right'\n    };\n    const alignVertical = {\n      bottom: 'bottom',\n      middle: 'middle',\n      top: 'top'\n    };\n    const linesType = {\n      linear: 'linear',\n      monotone: 'monotone',\n      step: 'step'\n    };\n    const animationType = {\n      ease: 'ease',\n      'ease-in': 'ease-in',\n      'ease-out': 'ease-out',\n      'ease-in-out': 'ease-in-out',\n      linear: 'linear'\n    };\n    const iconTypes = {\n      circleLine: 'circleLine',\n      filledCircle: 'filledCircle',\n      strokeCircle: 'strokeCircle',\n      circle: 'circle'\n    };\n    const responsiveContainerId = 'responsiveContainerId';\n    const cartesianGridId = 'cartesianGridId';\n    const composeChartId = 'composeChartId';\n    const xAxisId = 'xAxisId';\n    const yAxisId = 'yAxisId';\n    const legendId = 'legendId';\n    const tooltipId = 'tooltipId';\n    const brushId = 'brushId';\n    const lineId = 'lineId';\n    const areaId = 'areaId';\n    const debounce = number('debounce', 0, {}, responsiveContainerId);\n    const vertical = boolean('vertical', true, cartesianGridId);\n    const horizontal = boolean('horizontal', true, cartesianGridId);\n    const strokeDasharray = number('strokeDasharray', 0, {}, cartesianGridId);\n    const stroke = text('stroke', 'var(--color-light-neutral-400)', cartesianGridId);\n    const fill = text('fill', 'var(--color-light-base-bg-primary)', cartesianGridId);\n    const initMarginTop = number('initMargin.top', 40, {}, composeChartId);\n    const initMarginBottom = number('initMargin.bottom', 20, {}, composeChartId);\n    const marginLeft = number('initMargin.left', 20, {}, composeChartId);\n    const marginRight = number('initMargin.right', 70, {}, composeChartId);\n    const barCategoryGap = text('barCategoryGap', '30%', composeChartId);\n    const barSize = number('barSize', 24, {}, composeChartId);\n    const maxBarSize = number('maxBarSize', 24, {}, composeChartId);\n    const xAxisHide = boolean('hide', false, xAxisId);\n    const xAxisOrientation = select('orientation', orientationVertical, 'bottom', xAxisId);\n    const xAxisAngle = number('angle', 0, {}, xAxisId);\n    const xAxisTickLine = boolean('tickLine', false, xAxisId);\n    const xAxisTickSize = number('tickSize', 6, {}, xAxisId);\n    const xAxisMirror = boolean('mirror', false, xAxisId);\n    const xAxisReversed = boolean('reversed', false, xAxisId);\n    const xAxisTickMargin = number('tickMargin', 2, {}, xAxisId);\n    const xAxisMinTickGap = number('minTickGap', 20, {}, xAxisId);\n    const xAxisLine = boolean('axisLine', false, xAxisId);\n    const yAxisHide = boolean('hide', false, yAxisId);\n    const yAxisOrientation = select('orientation', orientationHorizontal, 'left', yAxisId);\n    const yAxisAngle = number('angle', 0, {}, yAxisId);\n    const yAxisTickLine = boolean('tickLine', false, yAxisId);\n    const yAxisTickSize = number('tickSize', 6, {}, yAxisId);\n    const yAxisMirror = boolean('mirror', false, yAxisId);\n    const yAxisReversed = boolean('reversed', false, yAxisId);\n    const yAxisTickCoiunt = number('tickCount', 6, {}, yAxisId);\n    const yAxisMinTickGap = number('minTickGap', 5, {}, yAxisId);\n    const yAxisTickMargin = number('tickMargin', 0, {}, yAxisId);\n    const yAxisLine = boolean('axisLine', false, yAxisId);\n    const yAxisLabel = text('label', '', yAxisId);\n    const legendAlign = select('align', alignHorizontal, 'right', legendId);\n    const legendVerticalAlign = select('verticalAlign', alignVertical, 'top', legendId);\n    const legendMarginTop = number('marginTop', 20, {}, legendId);\n    const legendIconHeight = number('iconHeight', 20, {}, legendId);\n    const tooltipArrow = boolean('arrow', true, tooltipId);\n    const tooltipIsAnimationActive = boolean('isAnimationActive', true, tooltipId);\n    const tooltipSeparator = text('separator', ' ', tooltipId);\n    const tooltipOffset = number('offset', 20, {}, tooltipId);\n    const cursorStroke = text('cursor.stroke', 'var(--color-light-neutral-400)', tooltipId);\n    const cursorStrokeWidth = number('cursor.strokeWidth', 1, {}, tooltipId);\n    const tooltipFilterNull = boolean('filterNull', true, tooltipId);\n    const tooltipAnimationBegin = number('animationBegin', 0, {}, tooltipId);\n    const tooltipAnimationDuration = number('animationDuration', 500, {}, tooltipId);\n    const tooltipAnimationEasing = select('animationEasing', animationType, 'ease', tooltipId);\n    const travellerWidth = number('travellerWidth', 20, {}, brushId);\n    const brushHeight = number('height', 20, {}, brushId);\n    const brushStartIndex = number('startIndex', 0, {\n      min: 0,\n      max: 47\n    }, brushId);\n    const brushEndIndex = number('endIndex', 47, {\n      min: 0,\n      max: 47\n    }, brushId);\n    const brushStroke = text('stroke', 'var(--color-static-status-blue)', brushId);\n    const brushMargin = number('brushMargin', 10, {\n      min: 0,\n      max: 100\n    }, brushId);\n    const brushHeightAlwaysShowText = boolean('alwaysShowText', true, brushId);\n    const lineHide = boolean('hide', false, lineId);\n    const lineHideLegend = boolean('hideLegend', false, lineId);\n    const lineHideTooltip = boolean('hideTooltip', false, lineId);\n    const lineIcon = select('icon', iconTypes, 'strokeCircle', lineId);\n    const lineName = text('properties.name', 'текущий период', lineId);\n    const lineStroke = text('properties.stroke', 'var(--color-static-status-blue)', lineId);\n    const lineDot = boolean('properties.dot', true, lineId);\n    const lineScale = number('properties.dotSettings.scale', 1.5, {}, lineId);\n    const lineInitScale = number('properties.dotSettings.initScale', 0, {}, lineId);\n    const lineStrokeWidth = number('properties.strokeWidth', 2, {}, lineId);\n    const lineInheritStroke = boolean('properties.inheritStroke', true, lineId);\n    const lineType = select('properties.type', linesType, 'monotone', lineId);\n    const lineWidth = number('properties.dotSettings.width', 18, {}, lineId);\n    const lineStrokeDasharray = text('properties.strokeDasharray', '10 10', lineId);\n    const areaHide = boolean('hide', false, areaId);\n    const areaHideLegend = boolean('hideLegend', false, areaId);\n    const areaHideTooltip = boolean('hideTooltip', false, areaId);\n    const areaZIndex = number('zIndex', 100, {}, areaId);\n    const areaIcon = select('icon', iconTypes, 'filledCircle', areaId);\n    const areaOffset = number('offset', 0.1, {\n      min: 0,\n      max: 1,\n      step: 0.1\n    }, areaId);\n    const areaColor_1 = text('gradient.points.color above', 'rgba(0, 112, 224, 0.2)', areaId);\n    const areaColorOpacity_1 = number('gradient.points.opacity of color above', 1, {\n      min: 0,\n      max: 1,\n      step: 0.1\n    }, areaId);\n    const areaColor_2 = text('gradient.points.color below', 'rgba(0, 128, 255, 0)', areaId);\n    const areaColorOpacity_2 = number('gradient opacity of color below', 1, {\n      min: 0,\n      max: 1,\n      step: 0.1\n    }, areaId);\n    const areaName = text('properties.name', 'предыдущий период', areaId);\n    const areaType = select('properties.type', linesType, 'monotone', areaId);\n    const areaStroke = text('properties.stroke', 'var(--color-static-status-blue)', areaId);\n    const areaScale = number('properties.dotSettings.scale', 1.5, {}, areaId);\n    const areaInitScale = number('properties.dotSettings.initScale', 0, {}, areaId);\n    const areaWidth = number('properties.dotSettings.width', 18, {}, areaId);\n    const areaStrokeWidth = number('properties.strokeWidth', 2, {}, areaId);\n    const areaDot = boolean('properties.dot', true, areaId);\n    const responsiveContainer = {\n      debounce\n    };\n    const cartesianGrid = {\n      vertical,\n      horizontal,\n      strokeDasharray,\n      stroke,\n      fill\n    };\n    const composeChart = {\n      initMargin: {\n        top: initMarginTop,\n        bottom: initMarginBottom,\n        left: marginLeft,\n        right: marginRight\n      },\n      barCategoryGap,\n      barSize,\n      maxBarSize\n    };\n    const xAxis = {\n      hide: xAxisHide,\n      axisLine: xAxisLine,\n      type: 'category',\n      allowDecimals: true,\n      allowDuplicatedCategory: true,\n      angle: xAxisAngle,\n      tickCount: 5,\n      interval: 'preserveStartEnd',\n      minTickGap: xAxisMinTickGap,\n      tickLine: xAxisTickLine,\n      tickSize: xAxisTickSize,\n      mirror: xAxisMirror,\n      reversed: xAxisReversed,\n      dataKey: 'label',\n      tickMargin: xAxisTickMargin,\n      orientation: xAxisOrientation,\n      tickFormatter: formatXAxis,\n      tickType: 'point'\n    };\n    const yAxis = {\n      hide: yAxisHide,\n      axisLine: yAxisLine,\n      type: 'number',\n      allowDecimals: true,\n      allowDuplicatedCategory: true,\n      angle: yAxisAngle,\n      tickCount: yAxisTickCoiunt,\n      interval: 'preserveStartEnd',\n      minTickGap: yAxisMinTickGap,\n      tickLine: yAxisTickLine,\n      tickSize: yAxisTickSize,\n      mirror: yAxisMirror,\n      reversed: yAxisReversed,\n      tickFormatter: decimal => `${decimal}\\xa0${yAxisLabel}`,\n      orientation: yAxisOrientation,\n      tickMargin: yAxisTickMargin\n    };\n    const legend = {\n      verticalAlign: legendVerticalAlign,\n      align: legendAlign,\n      marginTop: legendMarginTop,\n      iconHeight: legendIconHeight\n    };\n    const tooltip = {\n      separator: tooltipSeparator,\n      offset: tooltipOffset,\n      filterNull: tooltipFilterNull,\n      cursor: {\n        stroke: cursorStroke,\n        strokeWidth: cursorStrokeWidth\n      },\n      isAnimationActive: tooltipIsAnimationActive,\n      animationBegin: tooltipAnimationBegin,\n      animationDuration: tooltipAnimationDuration,\n      animationEasing: tooltipAnimationEasing,\n      arrow: tooltipArrow,\n      labelFormatter: formatXAxis\n    };\n    const brush = {\n      dataKey: 'label',\n      travellerWidth,\n      startIndex: brushStartIndex,\n      endIndex: brushEndIndex,\n      brushMargin: brushMargin,\n      height: brushHeight,\n      stroke: brushStroke,\n      alwaysShowText: brushHeightAlwaysShowText,\n      tickFormatter: formatXAxis\n    };\n    const labelsLineChart = [1608242400000, 1608328800000, 1608415200000, 1608501600000, 1608588000000, 1608674400000, 1608760800000, 1608847200000, 1608933600000, 1609020000000, 1609106400000, 1609192800000, 1609279200000, 1609365600000, 1609452000000, 1609538400000, 1609624800000, 1609711200000, 1609797600000, 1609884000000, 1609970400000, 1610056800000, 1610143200000, 1610229600000, 1610316000000, 1610402400000, 1610488800000, 1610575200000, 1610661600000, 1610748000000, 1610834400000, 1610920800000, 1611007200000, 1611093600000, 1611180000000, 1611266400000, 1611352800000, 1611439200000, 1611525600000, 1611612000000, 1611698400000, 1611784800000, 1611871200000, 1611957600000, 1612044000000, 1612130400000, 1612216800000, 1612303200000];\n    const lineChart = {\n      hide: lineHide,\n      hideLegend: lineHideLegend,\n      hideTooltip: lineHideTooltip,\n      zIndex: 200,\n      chart: 'line',\n      icon: lineIcon,\n      properties: {\n        name: lineName,\n        dataKey: 'b',\n        stroke: lineStroke,\n        dot: lineDot,\n        dotSettings: {\n          scale: lineScale,\n          initScale: lineInitScale,\n          width: lineWidth,\n          height: lineWidth\n        },\n        inheritStroke: lineInheritStroke,\n        type: lineType,\n        strokeWidth: lineStrokeWidth,\n        strokeDasharray: lineStrokeDasharray\n      },\n      data: [{\n        label: 1608242400000,\n        value: 35\n      }, {\n        label: 1608328800000,\n        value: 20\n      }, {\n        label: 1608415200000,\n        value: 34\n      }, {\n        label: 1608501600000,\n        value: 42\n      }, {\n        label: 1608588000000,\n        value: 14\n      }, {\n        label: 1608674400000,\n        value: 37\n      }, {\n        label: 1608760800000,\n        value: 19\n      }, {\n        label: 1608847200000,\n        value: 37\n      }, {\n        label: 1608933600000,\n        value: 22\n      }, {\n        label: 1609020000000,\n        value: 21\n      }, {\n        label: 1609106400000,\n        value: 28\n      }, {\n        label: 1609192800000,\n        value: 26\n      }, {\n        label: 1609279200000,\n        value: 31\n      }, {\n        label: 1609365600000,\n        value: 37\n      }, {\n        label: 1609452000000,\n        value: 40\n      }, {\n        label: 1609538400000,\n        value: 39\n      }, {\n        label: 1609624800000,\n        value: 45\n      }, {\n        label: 1609711200000,\n        value: 40\n      }, {\n        label: 1609797600000,\n        value: 45\n      }, {\n        label: 1609884000000,\n        value: 40\n      }, {\n        label: 1609970400000,\n        value: 45\n      }, {\n        label: 1610056800000,\n        value: 46\n      }, {\n        label: 1610143200000,\n        value: 36\n      }, {\n        label: 1610229600000,\n        value: 50\n      }, {\n        label: 1610316000000,\n        value: 44\n      }, {\n        label: 1610402400000,\n        value: 55\n      }, {\n        label: 1610488800000,\n        value: 59\n      }, {\n        label: 1610575200000,\n        value: 65\n      }, {\n        label: 1610661600000,\n        value: 49\n      }, {\n        label: 1610748000000,\n        value: 51\n      }, {\n        label: 1610834400000,\n        value: 69\n      }, {\n        label: 1610920800000,\n        value: 61\n      }, {\n        label: 1611007200000,\n        value: 63\n      }, {\n        label: 1611093600000,\n        value: 57\n      }, {\n        label: 1611180000000,\n        value: 61\n      }, {\n        label: 1611266400000,\n        value: 43\n      }, {\n        label: 1611352800000,\n        value: 68\n      }, {\n        label: 1611439200000,\n        value: 69\n      }, {\n        label: 1611525600000,\n        value: 69\n      }, {\n        label: 1611612000000,\n        value: 76\n      }, {\n        label: 1611698400000,\n        value: 61\n      }, {\n        label: 1611784800000,\n        value: 84\n      }, {\n        label: 1611871200000,\n        value: 96\n      }, {\n        label: 1611957600000,\n        value: 97\n      }, {\n        label: 1612044000000,\n        value: 72\n      }, {\n        label: 1612130400000,\n        value: 71\n      }, {\n        label: 1612216800000,\n        value: 88\n      }, {\n        label: 1612303200000,\n        value: 87\n      }]\n    };\n    const areaChart = {\n      hide: areaHide,\n      hideLegend: areaHideLegend,\n      hideTooltip: areaHideTooltip,\n      zIndex: areaZIndex,\n      chart: 'area',\n      icon: areaIcon,\n      offset: areaOffset,\n      gradient: {\n        gid: 'ar-grad',\n        points: [{\n          offset: 0,\n          stopColor: areaColor_1,\n          stopOpacity: areaColorOpacity_1\n        }, {\n          offset: 95,\n          stopColor: areaColor_2,\n          stopOpacity: areaColorOpacity_2\n        }]\n      },\n      properties: {\n        name: areaName,\n        dataKey: 'a',\n        type: areaType,\n        stroke: areaStroke,\n        dotSettings: {\n          scale: areaScale,\n          initScale: areaInitScale,\n          width: areaWidth,\n          height: areaWidth\n        },\n        dot: areaDot,\n        strokeWidth: areaStrokeWidth\n      },\n      data: [{\n        label: 1608242400000,\n        value: 70\n      }, {\n        label: 1608328800000,\n        value: 40\n      }, {\n        label: 1608415200000,\n        value: 69\n      }, {\n        label: 1608501600000,\n        value: 84\n      }, {\n        label: 1608588000000,\n        value: 29\n      }, {\n        label: 1608674400000,\n        value: 74\n      }, {\n        label: 1608760800000,\n        value: 39\n      }, {\n        label: 1608847200000,\n        value: 74\n      }, {\n        label: 1608933600000,\n        value: 44\n      }, {\n        label: 1609020000000,\n        value: 43\n      }, {\n        label: 1609106400000,\n        value: 57\n      }, {\n        label: 1609192800000,\n        value: 52\n      }, {\n        label: 1609279200000,\n        value: 62\n      }, {\n        label: 1609365600000,\n        value: 74\n      }, {\n        label: 1609452000000,\n        value: 81\n      }, {\n        label: 1609538400000,\n        value: 78\n      }, {\n        label: 1609624800000,\n        value: 91\n      }, {\n        label: 1609711200000,\n        value: 80\n      }, {\n        label: 1609797600000,\n        value: 90\n      }, {\n        label: 1609884000000,\n        value: 80\n      }, {\n        label: 1609970400000,\n        value: 91\n      }, {\n        label: 1610056800000,\n        value: 93\n      }, {\n        label: 1610143200000,\n        value: 72\n      }, {\n        label: 1610229600000,\n        value: 101\n      }, {\n        label: 1610316000000,\n        value: 88\n      }, {\n        label: 1610402400000,\n        value: 110\n      }, {\n        label: 1610488800000,\n        value: 119\n      }, {\n        label: 1610575200000,\n        value: 130\n      }, {\n        label: 1610661600000,\n        value: 98\n      }, {\n        label: 1610748000000,\n        value: 102\n      }, {\n        label: 1610834400000,\n        value: 139\n      }, {\n        label: 1610920800000,\n        value: 123\n      }, {\n        label: 1611007200000,\n        value: 127\n      }, {\n        label: 1611093600000,\n        value: 114\n      }, {\n        label: 1611180000000,\n        value: 123\n      }, {\n        label: 1611266400000,\n        value: 86\n      }, {\n        label: 1611352800000,\n        value: 136\n      }, {\n        label: 1611439200000,\n        value: 139\n      }, {\n        label: 1611525600000,\n        value: 138\n      }, {\n        label: 1611612000000,\n        value: 153\n      }, {\n        label: 1611698400000,\n        value: 122\n      }, {\n        label: 1611784800000,\n        value: 169\n      }, {\n        label: 1611871200000,\n        value: 192\n      }, {\n        label: 1611957600000,\n        value: 195\n      }, {\n        label: 1612044000000,\n        value: 144\n      }, {\n        label: 1612130400000,\n        value: 142\n      }, {\n        label: 1612216800000,\n        value: 176\n      }, {\n        label: 1612303200000,\n        value: 174\n      }]\n    };\n    const lineChartOptions = {\n      id: 'line-chart',\n      composeChart,\n      responsiveContainer,\n      cartesianGrid,\n      xAxis,\n      yAxis,\n      tooltip,\n      legend,\n      brush,\n      labels: labelsLineChart,\n      series: [areaChart]\n    };\n    return <div style={{\n      display: 'flex'\n    }}>\n                <div style={{\n        marginBottom: '20px',\n        top: 25,\n        width: '1050px',\n        height: '600px'\n      }}>\n                    <Chart id={'line-chart'} composeChart={composeChart} responsiveContainer={responsiveContainer} cartesianGrid={cartesianGrid} xAxis={xAxis} yAxis={yAxis} tooltip={tooltip} legend={legend} brush={brush} labels={labelsLineChart} series={[lineChart, areaChart]} />\n                </div>\n                <div style={{\n        width: '500px',\n        height: '600px',\n        overflow: 'auto'\n      }}>\n                    <pre>{JSON.stringify(clearData(lineChartOptions), null, 2)}</pre>\n                </div>\n            </div>;\n  }\n}"},null===(_chart_line$parameter2=chart_line.parameters)||void 0===_chart_line$parameter2?void 0:null===(_chart_line$parameter3=_chart_line$parameter2.docs)||void 0===_chart_line$parameter3?void 0:_chart_line$parameter3.source)})}),chart_histogram.parameters=(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)({},chart_histogram.parameters),{},{docs:(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)({},null===(_chart_histogram$para=chart_histogram.parameters)||void 0===_chart_histogram$para?void 0:_chart_histogram$para.docs),{},{source:(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_5__.Z)({originalSource:"{\n  name: 'Chart.Histogram',\n  render: () => {\n    const clearData = obj => {\n      const copy = JSON.parse(JSON.stringify(obj));\n      const labels = ['label', 'label', '...'];\n      const series = copy.series.map(item => {\n        item.data = [{\n          label: 'label',\n          value: 'value'\n        }, '...'];\n        return item;\n      });\n      return {\n        ...obj,\n        labels,\n        series\n      };\n    };\n    const orientationVertical = {\n      bottom: 'bottom',\n      top: 'top'\n    };\n    const iconTypes = {\n      circleLine: 'circleLine',\n      filledCircle: 'filledCircle',\n      strokeCircle: 'strokeCircle',\n      circle: 'circle'\n    };\n    const responsiveContainerId = 'responsiveContainer';\n    const cartesianGridId = 'cartesianGrid';\n    const composeChartId = 'composeChart';\n    const xAxisId = 'xAxis';\n    const yAxisId = 'yAxis';\n    const barId = 'bar';\n    const debounce = number('debounce', 0, {}, responsiveContainerId);\n    const vertical = boolean('vertical', false, cartesianGridId);\n    const horizontal = boolean('horizontal', false, cartesianGridId);\n    const initMarginTop = number('initMargin.top', 40, {}, composeChartId);\n    const initMarginBottom = number('initMargin.bottom', 20, {}, composeChartId);\n    const marginLeft = number('initMargin.left', 20, {}, composeChartId);\n    const marginRight = number('initMargin.right', 50, {}, composeChartId);\n    const barCategoryGap = text('barCategoryGap', '10%', composeChartId);\n    const barGap = number('barGap', 4, {}, composeChartId);\n    const maxBarSize = number('maxBarSize', 64, {}, composeChartId);\n    const xAxisHide = boolean('hide', false, xAxisId);\n    const xAxisOrientation = select('orientation', orientationVertical, 'bottom', xAxisId);\n    const xAxisTickLine = boolean('tickLine', false, xAxisId);\n    const xAxisTickSize = number('tickSize', 6, {}, xAxisId);\n    const xAxisTickMargin = number('tickMargin', 10, {}, xAxisId);\n    const xAxisMinTickGap = number('minTickGap', 5, {}, xAxisId);\n    const xAxisLine = boolean('axisLine', false, xAxisId);\n    const yAxisHide = boolean('hide', true, yAxisId);\n    const barHideLegend = boolean('hideLegend', false, barId);\n    const barHideTooltip = boolean('hideTooltip', false, barId);\n    const barZIndex = number('zIndex', 10, {}, barId);\n    const barIcon = select('icon', iconTypes, 'circle', barId);\n    const barRadius = object('radius', {\n      top: 10,\n      bottom: 10\n    }, barId);\n    const barFormatter = text('labelList.formatter', '', barId);\n    const barLabelListOffset = number('labelList.offset', 10, {}, barId);\n    const barFill = text('properties.fill', 'var(--color-static-graphic-green-jungle)', barId);\n    const barName = text('properties.name', 'приход', barId);\n    const responsiveContainer = {\n      debounce\n    };\n    const cartesianGrid = {\n      vertical,\n      horizontal\n    };\n    const composeChart = {\n      initMargin: {\n        top: initMarginTop,\n        bottom: initMarginBottom,\n        left: marginLeft,\n        right: marginRight\n      },\n      barGap,\n      maxBarSize,\n      barCategoryGap\n    };\n    const xAxis = {\n      hide: xAxisHide,\n      axisLine: xAxisLine,\n      type: 'category',\n      allowDecimals: true,\n      allowDuplicatedCategory: true,\n      interval: 'preserveStartEnd',\n      minTickGap: xAxisMinTickGap,\n      tickLine: xAxisTickLine,\n      tickSize: xAxisTickSize,\n      tickMargin: xAxisTickMargin,\n      dataKey: 'label',\n      orientation: xAxisOrientation\n    };\n    const yAxis = {\n      hide: yAxisHide\n    };\n    const labelsBarChart = ['Long label', 'Label1', 'Label2', 'Label3', 'Label4', 'Label5', 'Label6', 'Label7'];\n    const barChart = {\n      hide: barHideLegend,\n      hideLegend: barHideLegend,\n      hideTooltip: barHideTooltip,\n      zIndex: barZIndex,\n      chart: 'bar',\n      icon: barIcon,\n      radius: barRadius || 0,\n      labelList: {\n        formatter: decimal => `${decimal}${barFormatter}`,\n        offset: barLabelListOffset\n      },\n      properties: {\n        name: barName,\n        dataKey: 'cm',\n        formatter: decimal => `${decimal * 1000}`,\n        fill: barFill\n      },\n      data: [{\n        label: 'Long label',\n        value: 5000\n      }, {\n        label: 'Label1',\n        value: 650\n      }, {\n        label: 'Label2',\n        value: 3522\n      }, {\n        label: 'Label3',\n        value: 0\n      }, {\n        label: 'Label4',\n        value: 2000\n      }, {\n        label: 'Label5',\n        value: 1043\n      }, {\n        label: 'Label6',\n        value: 600\n      }, {\n        label: 'Label7',\n        value: 1\n      }]\n    };\n    const barChartOptions = {\n      id: 'bar-chart',\n      composeChart,\n      responsiveContainer,\n      cartesianGrid,\n      xAxis,\n      yAxis,\n      labels: labelsBarChart,\n      series: [barChart]\n    };\n    return <div style={{\n      display: 'flex'\n    }}>\n                <div style={{\n        marginBottom: '20px',\n        top: 25,\n        width: '1050px',\n        height: '600px'\n      }}>\n                    <Chart id='bar-chart' composeChart={composeChart} responsiveContainer={responsiveContainer} cartesianGrid={cartesianGrid} xAxis={xAxis} yAxis={yAxis} labels={labelsBarChart} series={[barChart]} />\n                </div>\n                <div style={{\n        width: '500px',\n        height: '600px',\n        overflow: 'auto'\n      }}>\n                    <pre>{JSON.stringify(clearData(barChartOptions), null, 2)}</pre>\n                </div>\n            </div>;\n  }\n}"},null===(_chart_histogram$para2=chart_histogram.parameters)||void 0===_chart_histogram$para2?void 0:null===(_chart_histogram$para3=_chart_histogram$para2.docs)||void 0===_chart_histogram$para3?void 0:_chart_histogram$para3.source)})});let __namedExportsOrder=["chart_bar","chart_line","chart_histogram"]},"./packages/screenshot-utils/screenshots-story/utils.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{DO:function(){return isJsonObj},FX:function(){return stylesStringToObj},Ph:function(){return getQueryParam},Qh:function(){return parseKnobs}});var _home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),queryParams=__webpack_require__("./node_modules/querystring/index.js").parse(document.location.search),getQueryParam=function(param){var parse=arguments.length>1&&void 0!==arguments[1]&&arguments[1],value=queryParams[param];return parse?parseValue(value):value},parseKnobs=function(){return Object.entries(queryParams).reduce(function(acc,_ref){var _ref2=(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_1__.Z)(_ref,2),k=_ref2[0],v=_ref2[1];return k.startsWith("knob-")&&(acc[k.replace("knob-","")]=parseValue(v)),acc},{})};function parseValue(value){if(value){if(["true","false"].includes(value))return"true"===value;if(!Number.isNaN(+value)&&!Number.isNaN(parseFloat(value)))return parseFloat(value);try{return JSON.parse(value)}catch(e){return value}}}function stylesStringToObj(){var str=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";if(!str)return{};var properties=str.split(";").map(function(v){return v.trim()}),obj={};return properties.forEach(function(property){var _property$split$map=property.split(":").map(function(v){return v.trim()}),_property$split$map2=(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_1__.Z)(_property$split$map,2),name=_property$split$map2[0],val=_property$split$map2[1];obj[name]=val}),obj}function isJsonObj(str){try{var ret=JSON.parse(str);return"object"==typeof ret}catch(e){return!1}}},"./node_modules/querystring/decode.js":function(module){function hasOwnProperty(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop)}module.exports=function(qs,sep,eq,options){sep=sep||"&",eq=eq||"=";var obj={};if("string"!=typeof qs||0===qs.length)return obj;var regexp=/\+/g;qs=qs.split(sep);var maxKeys=1e3;options&&"number"==typeof options.maxKeys&&(maxKeys=options.maxKeys);var len=qs.length;maxKeys>0&&len>maxKeys&&(len=maxKeys);for(var i=0;i<len;++i){var kstr,vstr,k,v,x=qs[i].replace(regexp,"%20"),idx=x.indexOf(eq);idx>=0?(kstr=x.substr(0,idx),vstr=x.substr(idx+1)):(kstr=x,vstr=""),k=decodeURIComponent(kstr),v=decodeURIComponent(vstr),hasOwnProperty(obj,k)?Array.isArray(obj[k])?obj[k].push(v):obj[k]=[obj[k],v]:obj[k]=v}return obj}},"./node_modules/querystring/encode.js":function(module){var stringifyPrimitive=function(v){switch(typeof v){case"string":return v;case"boolean":return v?"true":"false";case"number":return isFinite(v)?v:"";default:return""}};module.exports=function(obj,sep,eq,name){return(sep=sep||"&",eq=eq||"=",null===obj&&(obj=void 0),"object"==typeof obj)?Object.keys(obj).map(function(k){var ks=encodeURIComponent(stringifyPrimitive(k))+eq;return Array.isArray(obj[k])?obj[k].map(function(v){return ks+encodeURIComponent(stringifyPrimitive(v))}).join(sep):ks+encodeURIComponent(stringifyPrimitive(obj[k]))}).join(sep):name?encodeURIComponent(stringifyPrimitive(name))+eq+encodeURIComponent(stringifyPrimitive(obj)):""}},"./node_modules/querystring/index.js":function(__unused_webpack_module,exports,__webpack_require__){exports.decode=exports.parse=__webpack_require__("./node_modules/querystring/decode.js"),exports.encode=exports.stringify=__webpack_require__("./node_modules/querystring/encode.js")}}]);