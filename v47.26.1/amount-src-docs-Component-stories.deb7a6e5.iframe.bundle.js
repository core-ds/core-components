"use strict";(self.webpackChunk_alfalab_core_components=self.webpackChunk_alfalab_core_components||[]).push([[4725],{"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Z:function(){return _toConsumableArray}});var arrayLikeToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js");function _arrayWithoutHoles(arr){if(Array.isArray(arr))return(0,arrayLikeToArray.Z)(arr)}function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}var unsupportedIterableToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js");function _nonIterableSpread(){throw TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||(0,unsupportedIterableToArray.Z)(arr)||_nonIterableSpread()}},"./packages/amount/src/docs/Component.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},amount:function(){return amount},default:function(){return Component_stories}});var _amount$parameters,_amount$parameters2,_amount$parameters2$d,objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),unsupportedIterableToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js");function _createForOfIteratorHelper(o,allowArrayLike){var it="undefined"!=typeof Symbol&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=(0,unsupportedIterableToArray.Z)(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=it.call(o)},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}var toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js");__webpack_require__("./node_modules/react/index.js");var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),esm=__webpack_require__("./node_modules/@alfalab/utils/dist/esm/index.js"),grid=__webpack_require__("./.storybook/blocks/grid/index.ts"),modern=__webpack_require__("./dist/amount/modern/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),meta={title:"Components/Amount",component:modern.Amount,id:"Amount"},deprecatedCurrencies=["RUR"],sortDeprecatedCurrencies=function(currencies){var _step,newCurrencies=(0,toConsumableArray.Z)(currencies),_iterator=_createForOfIteratorHelper(currencies);try{for(_iterator.s();!(_step=_iterator.n()).done;)!function(){var currency=_step.value;if(deprecatedCurrencies.includes(currency)){var index=newCurrencies.findIndex(function(item){return item===currency});newCurrencies.push(newCurrencies.splice(index,1)[0])}}()}catch(err){_iterator.e(err)}finally{_iterator.f()}return newCurrencies},amount={name:"Amount",render:function render(){var currencyCodes=sortDeprecatedCurrencies((0,esm.vr)()),value=(0,dist.number)("value",10099),currency=(0,dist.select)("currency",currencyCodes,"RUB"),minority=(0,dist.number)("minority",100),showPlus=(0,dist.boolean)("showPlus",!1),view=(0,dist.select)("view",["default","withZeroMinorPart"],"default"),codeFormat=(0,dist.select)("codeFormat",["symbolic","letter"],"symbolic"),bold=(0,dist.select)("bold",["full","major","none"],"bold"),transparentMinor=(0,dist.boolean)("transparentMinor",!0);return(0,jsx_runtime.jsxs)(grid.Container,{children:[(0,jsx_runtime.jsxs)(grid.Row,{children:[(0,jsx_runtime.jsx)(grid.Col,{children:"Amount"}),(0,jsx_runtime.jsx)(grid.Col,{children:"Amount.Pure (Без стилей)"})]}),(0,jsx_runtime.jsxs)(grid.Row,{children:[(0,jsx_runtime.jsx)(grid.Col,{children:(0,jsx_runtime.jsx)(modern.Amount,{value:value,currency:currency,minority:minority,showPlus:showPlus,view:view,codeFormat:codeFormat,bold:bold,transparentMinor:transparentMinor})}),(0,jsx_runtime.jsx)(grid.Col,{children:(0,jsx_runtime.jsx)(modern.Amount.Pure,{value:value,currency:currency,minority:minority,showPlus:showPlus,view:view})})]})]})}},Component_stories=meta;amount.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},amount.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_amount$parameters=amount.parameters)||void 0===_amount$parameters?void 0:_amount$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: 'Amount',\n  render: () => {\n    const currencyCodes = sortDeprecatedCurrencies(getAllCurrencyCodes());\n    const value = number('value', 10099);\n    const currency = select('currency', currencyCodes, 'RUB');\n    const minority = number('minority', 100);\n    const showPlus = boolean('showPlus', false);\n    const view = select('view', ['default', 'withZeroMinorPart'], 'default');\n    const codeFormat = select('codeFormat', ['symbolic', 'letter'], 'symbolic');\n    const bold = select('bold', ['full', 'major', 'none'], 'bold');\n    const transparentMinor = boolean('transparentMinor', true);\n    return <Container>\n                <Row>\n                    <Col>Amount</Col>\n                    <Col>Amount.Pure (Без стилей)</Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Amount value={value} currency={currency} minority={minority} showPlus={showPlus} view={view} codeFormat={codeFormat} bold={bold} transparentMinor={transparentMinor} />\n                    </Col>\n                    <Col>\n                        <Amount.Pure value={value} currency={currency} minority={minority} showPlus={showPlus} view={view} />\n                    </Col>\n                </Row>\n            </Container>;\n  }\n}"},null===(_amount$parameters2=amount.parameters)||void 0===_amount$parameters2?void 0:null===(_amount$parameters2$d=_amount$parameters2.docs)||void 0===_amount$parameters2$d?void 0:_amount$parameters2$d.source)})});let __namedExportsOrder=["amount"]}}]);