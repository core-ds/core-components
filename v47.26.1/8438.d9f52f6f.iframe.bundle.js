"use strict";(self.webpackChunk_alfalab_core_components=self.webpackChunk_alfalab_core_components||[]).push([[8438],{"./packages/select-with-tags/src/Component.responsive.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{x:function(){return SelectWithTags}});var _home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectWithoutProperties_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_alfalab_core_components_bottom_sheet__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./dist/bottom-sheet/modern/index.js"),_alfalab_core_components_form_control_desktop__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./dist/form-control/modern/desktop/index.js"),_alfalab_core_components_form_control_mobile__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./dist/form-control/modern/mobile/index.js"),_alfalab_core_components_mq__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./dist/mq/modern/index.js"),_alfalab_core_components_popover__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./dist/popover/modern/index.js"),_alfalab_core_components_shared__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./dist/shared/modern/index.js"),_components_base_select_with_tags__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./packages/select-with-tags/src/components/base-select-with-tags/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["breakpoint","defaultMatchMediaValue"],SelectWithTags=(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function(_ref,ref){var _ref$breakpoint=_ref.breakpoint,breakpoint=void 0===_ref$breakpoint?(0,_alfalab_core_components_shared__WEBPACK_IMPORTED_MODULE_6__.getComponentBreakpoint)():_ref$breakpoint,defaultMatchMediaValue=_ref.defaultMatchMediaValue,restProps=(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectWithoutProperties_js__WEBPACK_IMPORTED_MODULE_9__.Z)(_ref,_excluded),_useMatchMedia=(0,_alfalab_core_components_mq__WEBPACK_IMPORTED_MODULE_4__.useMatchMedia)("(min-width: ".concat(breakpoint,"px)"),defaultMatchMediaValue),isDesktop=(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_10__.Z)(_useMatchMedia,1)[0];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_components_base_select_with_tags__WEBPACK_IMPORTED_MODULE_7__.X,(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_11__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_11__.Z)({},restProps),{},{ref:ref,view:isDesktop?"desktop":"mobile",Popover:_alfalab_core_components_popover__WEBPACK_IMPORTED_MODULE_5__.Popover,BottomSheet:_alfalab_core_components_bottom_sheet__WEBPACK_IMPORTED_MODULE_1__.BottomSheet,FormControlComponent:isDesktop?_alfalab_core_components_form_control_desktop__WEBPACK_IMPORTED_MODULE_2__.FormControlDesktop:_alfalab_core_components_form_control_mobile__WEBPACK_IMPORTED_MODULE_3__.FormControlMobile}))});SelectWithTags.displayName="SelectWithTags";try{SelectWithTags.displayName="SelectWithTags",SelectWithTags.__docgenInfo={description:"",displayName:"SelectWithTags",props:{size:{defaultValue:null,description:"Размер компонента\n@description s, m, l, xl deprecated, используйте вместо них 48, 56, 64, 72 соответственно",name:"size",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'},{value:"48"},{value:"56"},{value:"64"},{value:"72"}]}},disabled:{defaultValue:null,description:"Управление возможностью выбора значения",name:"disabled",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Атрибут name",name:"name",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"Плейсхолдер поля",name:"placeholder",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Дополнительный класс",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"Атрибут id",name:"id",required:!1,type:{name:"string"}},onFocus:{defaultValue:null,description:"Обработчик фокуса поля",name:"onFocus",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"Обработчик блюра поля",name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void)"}},onScroll:{defaultValue:null,description:"Обработчик скрола",name:"onScroll",required:!1,type:{name:"((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)"}},block:{defaultValue:null,description:"Растягивает компонент на ширину контейнера",name:"block",required:!1,type:{name:"boolean"}},clear:{defaultValue:null,description:"Флаг, показать крестик для очистки поля",name:"clear",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"Отображение ошибки",name:"error",required:!1,type:{name:"ReactNode"}},hint:{defaultValue:null,description:"Подсказка под полем",name:"hint",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"Лейбл поля",name:"label",required:!1,type:{name:"ReactNode"}},labelView:{defaultValue:null,description:"Вид лейбла внутри / снаружи",name:"labelView",required:!1,type:{name:"enum",value:[{value:'"inner"'},{value:'"outer"'}]}},fieldClassName:{defaultValue:null,description:"Дополнительный класс для поля",name:"fieldClassName",required:!1,type:{name:"string"}},onClear:{defaultValue:null,description:"Обработчик нажатия на крестик для очистки поля",name:"onClear",required:!1,type:{name:"((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}},dataTestId:{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования.\nДля пункта меню используется модификатор -option, компонента поиска -search,\nкомпонента выпадающего меню -options-list, компонента BottomSheet -bottom-sheet,\nкомпонента поля -field, компонета FormControl -field-form-control",name:"dataTestId",required:!1,type:{name:"string"}},open:{defaultValue:null,description:"Управление открытием",name:"open",required:!1,type:{name:"boolean"}},popoverProps:{defaultValue:null,description:"Дополнительные пропсы для Popover",name:"popoverProps",required:!1,type:{name:'Omit<PopoverProps, "className" | "dataTestId" | "open" | "position" | "zIndex" | "update" | "anchorElement" | "preventFlip">'}},onOpen:{defaultValue:null,description:"Обработчик открытия\\закрытия селекта",name:"onOpen",required:!1,type:{name:"((payload: { open?: boolean; name?: string; }) => void) | undefined"}},updatePopover:{defaultValue:null,description:"Хранит функцию, с помощью которой можно обновить положение поповера",name:"updatePopover",required:!1,type:{name:"MutableRefObject<(() => void)>"}},preventFlip:{defaultValue:null,description:"Запрещает поповеру менять свою позицию.\nНапример, если места снизу недостаточно,то он все равно будет показан снизу",name:"preventFlip",required:!1,type:{name:"boolean"}},fieldProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент поля",name:"fieldProps",required:!1,type:{name:"unknown"}},optionsListClassName:{defaultValue:null,description:"Дополнительный класс выпадающего меню",name:"optionsListClassName",required:!1,type:{name:"string"}},optionClassName:{defaultValue:null,description:"Дополнительный класс для пункта меню",name:"optionClassName",required:!1,type:{name:"string"}},optionGroupClassName:{defaultValue:null,description:"Дополнительный класс для компонента группы пунктов",name:"optionGroupClassName",required:!1,type:{name:"string"}},popperClassName:{defaultValue:null,description:"Дополнительный класс для поповера",name:"popperClassName",required:!1,type:{name:"string"}},options:{defaultValue:null,description:"Список вариантов выбора",name:"options",required:!0,type:{name:"(OptionShape | GroupShape)[]"}},defaultOpen:{defaultValue:null,description:"Начальное состояние селекта",name:"defaultOpen",required:!1,type:{name:"boolean"}},optionsSize:{defaultValue:null,description:"Размер пунктов меню\n@description s, m, l, xl deprecated, используйте вместо них 48, 56, 64, 72 соответственно",name:"optionsSize",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'},{value:"48"},{value:"56"},{value:"64"},{value:"72"}]}},optionsListWidth:{defaultValue:null,description:"Управляет шириной выпадающего меню.\nШирину определяет контент, либо ширина равна ширине поля",name:"optionsListWidth",required:!1,type:{name:"enum",value:[{value:'"content"'},{value:'"field"'}]}},allowUnselect:{defaultValue:null,description:"Позволяет снять выбранное значение",name:"allowUnselect",required:!1,type:{name:"boolean"}},closeOnSelect:{defaultValue:null,description:"Закрывать меню после выбора?",name:"closeOnSelect",required:!1,type:{name:"boolean"}},circularNavigation:{defaultValue:null,description:"При навигации с клавиатуры переходить от последнего пункта меню к первому и наоборот.",name:"circularNavigation",required:!1,type:{name:"boolean"}},popoverPosition:{defaultValue:null,description:"Позиционирование выпадающего списка",name:"popoverPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"right"'},{value:'"left"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},visibleOptions:{defaultValue:null,description:"Количество видимых пунктов меню (5 = 5.5)",name:"visibleOptions",required:!1,type:{name:"number"}},valueRenderer:{defaultValue:null,description:"Кастомный рендер выбранного пункта",name:"valueRenderer",required:!1,type:{name:"(({ selected, selectedMultiple, }: { selected?: OptionShape; selectedMultiple: OptionShape[]; }) => ReactNode)"}},Arrow:{defaultValue:null,description:"Компонент стрелки",name:"Arrow",required:!1,type:{name:"false | ComponentType<ArrowProps> | null"}},optionsListProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент списка",name:"optionsListProps",required:!1,type:{name:"unknown"}},optionProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент пункта меню",name:"optionProps",required:!1,type:{name:"unknown"}},groupOptionProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент группового пункта меню",name:"groupOptionProps",required:!1,type:{name:"AnyObject"}},OptionsList:{defaultValue:null,description:"Компонент выпадающего меню",name:"OptionsList",required:!1,type:{name:"ComponentType<OptionsListProps & RefAttributes<HTMLDivElement>>"}},Optgroup:{defaultValue:null,description:"Компонент группы",name:"Optgroup",required:!1,type:{name:"ComponentType<OptgroupProps>"}},Option:{defaultValue:null,description:"Компонент пункта меню",name:"Option",required:!1,type:{name:"ComponentType<OptionProps>"}},showSearch:{defaultValue:null,description:"Включает отображение поиска",name:"showSearch",required:!1,type:{name:"boolean"}},Search:{defaultValue:null,description:"Компонент поиска",name:"Search",required:!1,type:{name:"ComponentType<SearchProps>"}},searchProps:{defaultValue:null,description:"Настройки поиска",name:"searchProps",required:!1,type:{name:"{ componentProps?: SearchProps; accessor?: ((option: OptionShape) => string); filterFn?: ((optionText: string, search: string) => boolean) | undefined; value?: string | undefined; onChange?: ((value: string) => void) | undefined; filterGroup?: boolean | undefined; groupAccessor?: ((group: Gro..."}},zIndexPopover:{defaultValue:null,description:"z-index поповера",name:"zIndexPopover",required:!1,type:{name:"number"}},showEmptyOptionsList:{defaultValue:null,description:"Показывать OptionsList, если он пустой",name:"showEmptyOptionsList",required:!1,type:{name:"boolean"}},limitDynamicOptionGroupSize:{defaultValue:null,description:"Ограничение динамического размера группы вариантов выбора",name:"limitDynamicOptionGroupSize",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"Значение поля ввода",name:"value",required:!0,type:{name:"string"}},onInput:{defaultValue:null,description:"Обработчик ввода",name:"onInput",required:!0,type:{name:"(event: ChangeEvent<HTMLInputElement>) => void"}},selected:{defaultValue:null,description:"Список выбранных пунктов (controlled-селект)",name:"selected",required:!1,type:{name:"(string | OptionShape)[]"}},onChange:{defaultValue:null,description:"Обработчик выбора",name:"onChange",required:!1,type:{name:"((payload: { selectedMultiple: (string | OptionShape)[]; initiator?: OptionShape | null; name?: string; }) => void) | undefined"}},autocomplete:{defaultValue:null,description:"Режим автокомплита",name:"autocomplete",required:!1,type:{name:"boolean"}},match:{defaultValue:null,description:"Функция сравнения при поиске",name:"match",required:!1,type:{name:"OptionMatcher"}},Tag:{defaultValue:null,description:"Компонент Тэг",name:"Tag",required:!1,type:{name:"TagComponent"}},collapseTagList:{defaultValue:null,description:"Показывать тэги только в одном ряду, а если не помещаются в один ряд - схлопнуть в одну кнопку",name:"collapseTagList",required:!1,type:{name:"boolean"}},moveInputToNewLine:{defaultValue:null,description:"Если текст не помещается в инпут, то нужно перенести инпут на новую строку.",name:"moveInputToNewLine",required:!1,type:{name:"boolean"}},transformCollapsedTagText:{defaultValue:null,description:"Трансформировать текст компонента Тэг который отображает общее количество выбранных элементов",name:"transformCollapsedTagText",required:!1,type:{name:"((collapsedCount: number) => string)"}},transformTagText:{defaultValue:null,description:"Трансформировать текст компонента Тэг",name:"transformTagText",required:!1,type:{name:"((tagText?: ReactNode) => ReactNode)"}},breakpoint:{defaultValue:{value:"getComponentBreakpoint()"},description:"Контрольная точка, с нее начинается desktop версия",name:"breakpoint",required:!1,type:{name:"number"}},defaultMatchMediaValue:{defaultValue:null,description:"Значение по-умолчанию для хука useMatchMedia",name:"defaultMatchMediaValue",required:!1,type:{name:"boolean | (() => boolean)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/select-with-tags/src/Component.responsive.tsx#SelectWithTags"]={docgenInfo:SelectWithTags.__docgenInfo,name:"SelectWithTags",path:"packages/select-with-tags/src/Component.responsive.tsx#SelectWithTags"})}catch(__react_docgen_typescript_loader_error){}},"./packages/select-with-tags/src/components/base-select-with-tags/index.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{X:function(){return BaseSelectWithTags}});var objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react=__webpack_require__("./node_modules/react/index.js"),react_merge_refs_esm=__webpack_require__("./node_modules/react-merge-refs/dist/react-merge-refs.esm.js"),shared=__webpack_require__("./dist/select/modern/shared/index.js"),defaultMatch=function(option,inputValue){return -1!==option.value.toLowerCase().indexOf((inputValue||"").toLowerCase(),0)},optionsIsGroupShapes=function(options){var item=options[0];return!!item&&(0,shared.isGroup)(item)},filterOptions=function(options,inputValue){var math=arguments.length>2&&void 0!==arguments[2]?arguments[2]:defaultMatch;return optionsIsGroupShapes(options)?options.reduce(function(acc,group){var matchedOptions=group.options.filter(function(option){return math(option,inputValue)});return matchedOptions.length>0&&acc.push((0,objectSpread2.Z)((0,objectSpread2.Z)({},group),{},{options:matchedOptions})),acc},[]):options.filter(function(option){return math(option,inputValue)})},defineProperty=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),esm=__webpack_require__("./node_modules/@alfalab/hooks/dist/esm/index.js"),getElementSize=function(element,property){var size=+window.getComputedStyle(element).getPropertyValue(property).replace("px","");return Number.isNaN(size)?0:size},getTagWidth=function(tag){var tagMarginLeft=getElementSize(tag,"margin-left"),tagMarginRight=getElementSize(tag,"margin-right");return tag.getBoundingClientRect().width+tagMarginRight+tagMarginLeft},calculateTotalElementsPerRow=function(container,input){var containerWidth=container.getBoundingClientRect().width;if(containerWidth-=getElementSize(container,"padding-left")+getElementSize(container,"padding-right"),input){var inputMinWidth=getElementSize(input,"min-width");containerWidth-=getElementSize(input,"margin-left")+getElementSize(input,"margin-right")+inputMinWidth}var tags=container.getElementsByTagName("button"),latestTag=tags[tags.length-1];latestTag&&"collapse-last-tag-element"===latestTag.getAttribute("data-collapse")&&(containerWidth-=getTagWidth(latestTag));for(var totalTagsWidth=0,totalVisibleElements=0,i=0;i<tags.length;i++){var tag=tags[i];if("collapse-last-tag-element"===tag.getAttribute("data-collapse"))break;(totalTagsWidth+=getTagWidth(tag))<containerWidth&&(totalVisibleElements+=1)}return totalVisibleElements},desktop=__webpack_require__("./dist/tag/modern/desktop/index.js"),CrossCircleMIcon=__webpack_require__("./node_modules/@alfalab/icons-glyph/CrossCircleMIcon.js"),index_module={tag:"tag_FY9oJ",tagNoClose:"tagNoClose_bkg0f",tagContentWrap:"tagContentWrap_jFIHW",cursorPointer:"cursorPointer_p2Oep",tagCross:"tagCross_u6yby"},jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["option","onClick","handleDeleteTag","checked","disabled"],component_Tag=function(_ref){var _ref$option=_ref.option,content=_ref$option.content,key=_ref$option.key,onClick=_ref.onClick,handleDeleteTag=_ref.handleDeleteTag,checked=_ref.checked,disabled=_ref.disabled,props=(0,objectWithoutProperties.Z)(_ref,_excluded),handleClick=(0,react.useCallback)(function(){handleDeleteTag&&handleDeleteTag(key)},[handleDeleteTag,key]);return(0,jsx_runtime.jsx)(desktop.TagDesktop,(0,objectSpread2.Z)((0,objectSpread2.Z)({size:32,shape:"rectangular",onClick:onClick,checked:checked,className:classnames_default()(index_module.tag,(0,defineProperty.Z)({},index_module.tagNoClose,!handleDeleteTag)),disabled:disabled},props),{},{children:(0,jsx_runtime.jsxs)("span",{className:classnames_default()(index_module.tagContentWrap,(0,defineProperty.Z)({},index_module.cursorPointer,!disabled)),children:[content,handleDeleteTag&&(0,jsx_runtime.jsx)("span",{className:index_module.tagCross,onClick:handleClick,children:(0,jsx_runtime.jsx)(CrossCircleMIcon.CrossCircleMIcon,{width:16,height:16})})]})}),key)};try{component_Tag.displayName="Tag",component_Tag.__docgenInfo={description:"",displayName:"Tag",props:{option:{defaultValue:null,description:"",name:"option",required:!0,type:{name:"OptionShape"}},handleDeleteTag:{defaultValue:null,description:"",name:"handleDeleteTag",required:!1,type:{name:"((key: string) => void)"}},size:{defaultValue:null,description:"Размер компонента\n@description xxs, xs, s, m, l, xl deprecated, используйте вместо них 32, 40, 48, 56, 64, 72 соответственно",name:"size",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'},{value:"48"},{value:"56"},{value:"64"},{value:"72"},{value:"32"},{value:"40"},{value:'"xxs"'},{value:'"xs"'}]}},onClick:{defaultValue:null,description:"Обработчик нажатия",name:"onClick",required:!1,type:{name:"((event: MouseEvent<HTMLButtonElement, MouseEvent>, payload: { checked: boolean; name?: string; }) => void)"}},checked:{defaultValue:null,description:"Отображение кнопки в отмеченном (зажатом) состоянии",name:"checked",required:!1,type:{name:"boolean"}},colors:{defaultValue:null,description:"Набор цветов для компонента",name:"colors",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"inverted"'}]}},leftAddons:{defaultValue:null,description:"Слот слева",name:"leftAddons",required:!1,type:{name:"ReactNode"}},rightAddons:{defaultValue:null,description:"Слот справа",name:"rightAddons",required:!1,type:{name:"ReactNode"}},dataTestId:{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования",name:"dataTestId",required:!1,type:{name:"string"}},defaultMatchMediaValue:{defaultValue:null,description:"Значение по-умолчанию для хука useMatchMedia",name:"defaultMatchMediaValue",required:!1,type:{name:"boolean | (() => boolean)"}},view:{defaultValue:null,description:"Стиль тега",name:"view",required:!1,type:{name:"enum",value:[{value:'"outlined"'},{value:'"filled"'}]}},shape:{defaultValue:null,description:"Форма тега",name:"shape",required:!1,type:{name:"enum",value:[{value:'"rounded"'},{value:'"rectangular"'}]}},childrenClassName:{defaultValue:null,description:"Дополнительный класс для обёртки children",name:"childrenClassName",required:!1,type:{name:"string"}},childrenRef:{defaultValue:null,description:"ref на children",name:"childrenRef",required:!1,type:{name:"RefObject<HTMLSpanElement>"}},variant:{defaultValue:null,description:"@deprecated данный проп больше не используется, временно оставлен для обратной совместимости\nИспользуйте props shape и view\nВариант тега",name:"variant",required:!1,type:{name:"enum",value:[{value:'"alt"'},{value:'"default"'}]}},allowBackdropBlur:{defaultValue:null,description:"Включает размытие фона для некоторых вариантов тега\n@description Может привести к просадке fps и другим багам. Старайтесь не размещать слишком много заблюреных элементов на одной странице.",name:"allowBackdropBlur",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/select-with-tags/src/components/tag/component.tsx#Tag"]={docgenInfo:component_Tag.__docgenInfo,name:"Tag",path:"packages/select-with-tags/src/components/tag/component.tsx#Tag"})}catch(__react_docgen_typescript_loader_error){}var tag_list_index_module={component:"component_H8dWc","size-72":"size-72_Lke8U",contentWrapper:"contentWrapper_up1O8",placeholder:"placeholder_sQ_7l",input:"input_LboKB","size-64":"size-64__nLXX","size-56":"size-56_HJKeD","size-48":"size-48_Vq2P_",hasInnerLabel:"hasInnerLabel_nUSST",hasTags:"hasTags_Wud_3",addons:"addons_dGzqn",field:"field__FnTv",disabled:"disabled_rypkB",hidden:"hidden_JDkwd",focusVisible:"focusVisible_zDAeu","addons-size-56":"addons-size-56_Gh_Bq","addons-size-64":"addons-size-64__y6HC","addons-size-72":"addons-size-72_vjlEh",label:"label_TVxR9"},component_excluded=["size","open","disabled","placeholder","selectedMultiple","Arrow","innerProps","className","fieldClassName","value","autocomplete","label","valueRenderer","onInput","handleDeleteTag","collapseTagList","moveInputToNewLine","transformCollapsedTagText","transformTagText","isOpen","handleUpdatePopover","Tag","setSelectedItems","toggleMenu","labelView","inputRef","FormControlComponent"],_excluded2=["onClick"],SIZE_TO_CLASSNAME_MAP={s:"size-48",m:"size-56",l:"size-64",xl:"size-72",48:"size-48",56:"size-56",64:"size-64",72:"size-72"},TagList=function(_ref){var _ref$size=_ref.size,size=void 0===_ref$size?72:_ref$size,open=_ref.open,disabled=_ref.disabled,placeholder=_ref.placeholder,_ref$selectedMultiple=_ref.selectedMultiple,selectedMultiple=void 0===_ref$selectedMultiple?[]:_ref$selectedMultiple,Arrow=_ref.Arrow,innerProps=_ref.innerProps,className=_ref.className,fieldClassName=_ref.fieldClassName,_ref$value=_ref.value,value=void 0===_ref$value?"":_ref$value,autocomplete=_ref.autocomplete,label=_ref.label,onInput=(_ref.valueRenderer,_ref.onInput),handleDeleteTag=_ref.handleDeleteTag,collapseTagList=_ref.collapseTagList,moveInputToNewLine=_ref.moveInputToNewLine,transformCollapsedTagText=_ref.transformCollapsedTagText,transformTagText=_ref.transformTagText,isOpen=_ref.isOpen,handleUpdatePopover=_ref.handleUpdatePopover,_ref$Tag=_ref.Tag,Tag=void 0===_ref$Tag?component_Tag:_ref$Tag,labelView=(_ref.setSelectedItems,_ref.toggleMenu,_ref.labelView),_ref$inputRef=_ref.inputRef,FormControlComponent=_ref.FormControlComponent,restProps=(0,objectWithoutProperties.Z)(_ref,component_excluded),_useState=(0,react.useState)(!1),_useState2=(0,slicedToArray.Z)(_useState,2),focused=_useState2[0],setFocused=_useState2[1],_useState3=(0,react.useState)(!1),_useState4=(0,slicedToArray.Z)(_useState3,2),isShowMoreEnabled=_useState4[0],setShowMoreEnabled=_useState4[1],_useState5=(0,react.useState)(1),_useState6=(0,slicedToArray.Z)(_useState5,2),visibleElements=_useState6[0],setVisibleElements=_useState6[1],_useState7=(0,react.useState)(!1),_useState8=(0,slicedToArray.Z)(_useState7,2),inputOnNewLine=_useState8[0],setInputOnNewLine=_useState8[1],wrapperRef=(0,react.useRef)(null),inputRef=(0,react.useRef)(null),contentWrapperRef=(0,react.useRef)(null),_useFocus=(0,esm.KK)(wrapperRef,"keyboard"),focusVisible=(0,slicedToArray.Z)(_useFocus,1)[0],_useFocus3=(0,esm.KK)(inputRef,"keyboard"),inputFocusVisible=(0,slicedToArray.Z)(_useFocus3,1)[0];(0,esm.CZ)(function(){setShowMoreEnabled(isOpen)},[isOpen]),(0,react.useEffect)(function(){setVisibleElements(selectedMultiple.length)},[selectedMultiple.length]),(0,esm.CZ)(function(){collapseTagList&&contentWrapperRef.current&&setVisibleElements(calculateTotalElementsPerRow(contentWrapperRef.current,autocomplete&&inputRef.current?inputRef.current:null)),null==handleUpdatePopover||handleUpdatePopover()},[collapseTagList,visibleElements,autocomplete]);var handleFocus=(0,react.useCallback)(function(){return setFocused(!0)},[]),handleBlur=(0,react.useCallback)(function(){return setFocused(!1)},[]),inputTextIsOverflow=(0,react.useCallback)(function(){return inputRef.current&&inputRef.current.scrollWidth>inputRef.current.clientWidth},[]),handleMouseDown=(0,react.useCallback)(function(event){event.preventDefault()},[]),_ref2=innerProps||{},onClick=_ref2.onClick,restInnerProps=(0,objectWithoutProperties.Z)(_ref2,_excluded2),handleClick=(0,react.useCallback)(function(event){if(onClick&&contentWrapperRef.current){var eventTarget=event.target;eventTarget!==contentWrapperRef.current&&contentWrapperRef.current.contains(eventTarget)||onClick(event)}inputRef.current&&inputRef.current.focus()},[onClick]),handleKeyDown=(0,react.useCallback)(function(event){var lastSelectedTag=selectedMultiple[selectedMultiple.length-1];"Backspace"===event.key&&!value&&handleDeleteTag&&lastSelectedTag&&handleDeleteTag(lastSelectedTag.key)},[handleDeleteTag,selectedMultiple,value]),toggleShowMoreLessButton=(0,react.useCallback)(function(event){event&&(event.stopPropagation(),setShowMoreEnabled(function(v){return!v}),handleUpdatePopover&&handleUpdatePopover())},[handleUpdatePopover]);(0,react.useEffect)(function(){moveInputToNewLine&&(inputTextIsOverflow()&&!inputOnNewLine?setInputOnNewLine(!0):0===value.length&&setInputOnNewLine(!1))},[value,inputOnNewLine,inputTextIsOverflow,moveInputToNewLine]);var collapseTagTitle=(0,react.useMemo)(function(){return isShowMoreEnabled?"Свернуть":transformCollapsedTagText?transformCollapsedTagText(selectedMultiple.length-visibleElements):"Ещё ".concat(selectedMultiple.length-visibleElements)},[transformCollapsedTagText,isShowMoreEnabled,selectedMultiple.length,visibleElements]),filled=selectedMultiple.length>0||!!value;return(0,jsx_runtime.jsx)("div",{ref:wrapperRef,onFocus:handleFocus,onBlur:handleBlur,className:classnames_default()(className,tag_list_index_module.component,tag_list_index_module[SIZE_TO_CLASSNAME_MAP[size]]),children:(0,jsx_runtime.jsx)(FormControlComponent,(0,objectSpread2.Z)((0,objectSpread2.Z)({},restProps),{},{ref:null==innerProps?void 0:innerProps.ref,fieldClassName:classnames_default()(fieldClassName,tag_list_index_module.field,(0,defineProperty.Z)((0,defineProperty.Z)({},tag_list_index_module.focusVisible,focusVisible),tag_list_index_module.disabled,disabled)),block:!0,size:size,focused:open||focused,disabled:disabled,filled:filled||!!placeholder,onMouseDown:handleMouseDown,rightAddons:Arrow,onClick:handleClick,addonsClassName:classnames_default()(tag_list_index_module.addons,tag_list_index_module["addons-".concat(SIZE_TO_CLASSNAME_MAP[size])]),label:label,labelClassName:tag_list_index_module.label,labelView:labelView,children:(0,jsx_runtime.jsxs)("div",{className:classnames_default()(tag_list_index_module.contentWrapper,(0,defineProperty.Z)((0,defineProperty.Z)({},tag_list_index_module.hasInnerLabel,!!label&&"outer"!==labelView),tag_list_index_module.hasTags,selectedMultiple.length>0)),ref:contentWrapperRef,children:[selectedMultiple.map(function(option,index){return collapseTagList&&isShowMoreEnabled||index+1<=visibleElements?(0,jsx_runtime.jsx)(Tag,{checked:!0,disabled:disabled,option:(0,objectSpread2.Z)((0,objectSpread2.Z)({},option),{},{content:transformTagText?transformTagText(option.content):option.content}),handleDeleteTag:disabled?void 0:handleDeleteTag},option.key):null}),collapseTagList&&visibleElements<selectedMultiple.length&&(0,jsx_runtime.jsx)(Tag,{disabled:disabled,"data-collapse":"collapse-last-tag-element",onClick:toggleShowMoreLessButton,view:"filled",option:{key:"collapse",content:collapseTagTitle}}),autocomplete&&(0,jsx_runtime.jsx)("input",(0,objectSpread2.Z)((0,objectSpread2.Z)({},restInnerProps),{},{autoComplete:"off",ref:(0,react_merge_refs_esm.Z)([inputRef,void 0===_ref$inputRef?null:_ref$inputRef]),value:value,onChange:onInput,className:classnames_default()(tag_list_index_module.input,(0,defineProperty.Z)((0,defineProperty.Z)({},tag_list_index_module.focusVisible,inputFocusVisible),tag_list_index_module.hidden,!isOpen&&selectedMultiple.length>0)),disabled:disabled,onKeyDown:handleKeyDown,placeholder:filled?"":placeholder})),placeholder&&!filled&&!autocomplete&&(0,jsx_runtime.jsx)("span",{className:tag_list_index_module.placeholder,children:placeholder})]})}))})};try{TagList.displayName="TagList",TagList.__docgenInfo={description:"",displayName:"TagList",props:{className:{defaultValue:null,description:"Дополнительный класс",name:"className",required:!1,type:{name:"string"}},selected:{defaultValue:null,description:"Выбранный пункт",name:"selected",required:!1,type:{name:"OptionShape"}},selectedMultiple:{defaultValue:{value:"[]"},description:"Список выбранных пунктов",name:"selectedMultiple",required:!1,type:{name:"OptionShape[]"}},setSelectedItems:{defaultValue:null,description:"Метод для ручной установки выбранных пунктов",name:"setSelectedItems",required:!1,type:{name:"((selected: OptionShape[]) => void)"}},toggleMenu:{defaultValue:null,description:"Метод переключающий видимость выпадающего списка",name:"toggleMenu",required:!1,type:{name:"(() => void)"}},multiple:{defaultValue:null,description:"Флаг, можно ли выбрать несколько значений",name:"multiple",required:!1,type:{name:"boolean"}},open:{defaultValue:null,description:"Флаг, открыто ли меню",name:"open",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Флаг, поле заблокировано\nЗаблокированное состояние",name:"disabled",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Лейбл поля\nЛейбл компонента",name:"label",required:!1,type:{name:"ReactNode"}},labelView:{defaultValue:null,description:"Вид лейбла внутри / снаружи",name:"labelView",required:!1,type:{name:"enum",value:[{value:'"inner"'},{value:'"outer"'}]}},placeholder:{defaultValue:null,description:"Плейсхолдер поля",name:"placeholder",required:!1,type:{name:"string"}},error:{defaultValue:null,description:"Отображение ошибки",name:"error",required:!1,type:{name:"ReactNode"}},success:{defaultValue:null,description:"Отображение иконки успеха",name:"success",required:!1,type:{name:"boolean"}},hint:{defaultValue:null,description:"Подсказка под полем\nТекст подсказки",name:"hint",required:!1,type:{name:"ReactNode"}},Arrow:{defaultValue:null,description:"Компонент стрелки",name:"Arrow",required:!1,type:{name:"false | ReactElement<any, string | JSXElementConstructor<any>> | null"}},valueRenderer:{defaultValue:null,description:"Кастомный рендер выбранного пункта",name:"valueRenderer",required:!1,type:{name:"(({ selected, selectedMultiple, }: { selected?: OptionShape; selectedMultiple: OptionShape[]; }) => ReactNode)"}},innerProps:{defaultValue:null,description:"Внутренние свойства, которые должны быть установлены компоненту.",name:"innerProps",required:!1,type:{name:"({ onBlur?: ((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void); onFocus?: ((event: FocusEvent<...>) => void); onClick?: ((event: MouseEvent<...>) => void) | undefined; tabIndex?: number | undefined; id: string; } & RefAttributes<...> & AriaAttributes) | undefined"}},dataTestId:{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования\nИдентификатор для систем автоматизированного тестирования.\nДля слота слева используется модификатор -left-addons, слота справа -right-addons,\nошибки -error-message, текста подсказки -hint, внутренней части компонента -inner",name:"dataTestId",required:!1,type:{name:"string"}},size:{defaultValue:{value:"72"},description:"Размер компонента\n@description s, m, l, xl deprecated, используйте вместо них 48, 56, 64, 72 соответственно",name:"size",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'},{value:"48"},{value:"56"},{value:"64"},{value:"72"}]}},readOnly:{defaultValue:null,description:"Cостояние только для чтения",name:"readOnly",required:!1,type:{name:"boolean"}},block:{defaultValue:null,description:"Растягивает компонент на ширину контейнера",name:"block",required:!1,type:{name:"boolean"}},colors:{defaultValue:null,description:"Набор цветов для компонента",name:"colors",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"inverted"'}]}},leftAddons:{defaultValue:null,description:"Слот слева",name:"leftAddons",required:!1,type:{name:"ReactNode"}},rightAddons:{defaultValue:null,description:"Слот справа",name:"rightAddons",required:!1,type:{name:"ReactNode"}},leftAddonsProps:{defaultValue:null,description:"Свойства для обертки левых аддонов",name:"leftAddonsProps",required:!1,type:{name:"HTMLAttributes<HTMLDivElement>"}},rightAddonsProps:{defaultValue:null,description:"Свойства для обертки правых аддонов",name:"rightAddonsProps",required:!1,type:{name:"HTMLAttributes<HTMLDivElement>"}},bottomAddons:{defaultValue:null,description:"Слот под полем",name:"bottomAddons",required:!1,type:{name:"ReactNode"}},fieldClassName:{defaultValue:null,description:"Дополнительный класс для поля",name:"fieldClassName",required:!1,type:{name:"string"}},labelClassName:{defaultValue:null,description:"Дополнительный класс для лейбла",name:"labelClassName",required:!1,type:{name:"string"}},addonsClassName:{defaultValue:null,description:"Дополнительный класс для аддонов",name:"addonsClassName",required:!1,type:{name:"string"}},filled:{defaultValue:null,description:"Заполненное состояние",name:"filled",required:!1,type:{name:"boolean"}},focused:{defaultValue:null,description:"Выбранное (фокус) состояние",name:"focused",required:!1,type:{name:"boolean"}},inputWrapperClassName:{defaultValue:null,description:"Дополнительный класс для поля",name:"inputWrapperClassName",required:!1,type:{name:"string"}},breakpoint:{defaultValue:{value:"1024"},description:"Контрольная точка, с нее начинается desktop версия",name:"breakpoint",required:!1,type:{name:"number"}},defaultMatchMediaValue:{defaultValue:null,description:"Значение по-умолчанию для хука useMatchMedia",name:"defaultMatchMediaValue",required:!1,type:{name:"boolean | (() => boolean)"}},value:{defaultValue:{value:""},description:"",name:"value",required:!1,type:{name:"string"}},handleDeleteTag:{defaultValue:null,description:"",name:"handleDeleteTag",required:!1,type:{name:"((key: string) => void)"}},inputRef:{defaultValue:null,description:"",name:"inputRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},autocomplete:{defaultValue:null,description:"",name:"autocomplete",required:!1,type:{name:"boolean"}},isOpen:{defaultValue:null,description:"",name:"isOpen",required:!1,type:{name:"boolean"}},collapseTagList:{defaultValue:null,description:"",name:"collapseTagList",required:!1,type:{name:"boolean"}},moveInputToNewLine:{defaultValue:null,description:"",name:"moveInputToNewLine",required:!1,type:{name:"boolean"}},transformCollapsedTagText:{defaultValue:null,description:"",name:"transformCollapsedTagText",required:!1,type:{name:"((collapsedCount: number) => string)"}},transformTagText:{defaultValue:null,description:"",name:"transformTagText",required:!1,type:{name:"((tagText?: ReactNode) => ReactNode)"}},Tag:{defaultValue:{value:"({\n    option: { content, key },\n    onClick,\n    handleDeleteTag,\n    checked,\n    disabled,\n    ...props\n}) => {\n    const handleClick = useCallback(() => {\n        if (handleDeleteTag) {\n            handleDeleteTag(key);\n        }\n    }, [handleDeleteTag, key]);\n\n    return (\n        <CoreTag\n            key={key}\n            size={32}\n            shape='rectangular'\n            onClick={onClick}\n            checked={checked}\n            className={cn(styles.tag, { [styles.tagNoClose]: !handleDeleteTag })}\n            disabled={disabled}\n            {...props}\n        >\n            <span className={cn(styles.tagContentWrap, { [styles.cursorPointer]: !disabled })}>\n                {content}\n                {handleDeleteTag && (\n                    // eslint-disable-next-line\n                    <span className={styles.tagCross} onClick={handleClick}>\n                        <CrossCircleMIcon width={16} height={16} />\n                    </span>\n                )}\n            </span>\n        </CoreTag>\n    );\n}"},description:"",name:"Tag",required:!1,type:{name:"TagComponent"}},handleUpdatePopover:{defaultValue:null,description:"",name:"handleUpdatePopover",required:!1,type:{name:"(() => void)"}},FormControlComponent:{defaultValue:null,description:"",name:"FormControlComponent",required:!0,type:{name:'ForwardRefExoticComponent<Omit<BaseFormControlProps, "styles" | "colorStyles"> & { breakpoint?: number | undefined; defaultMatchMediaValue?: boolean | (() => boolean) | undefined; } & RefAttributes<...>>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/select-with-tags/src/components/tag-list/component.tsx#TagList"]={docgenInfo:TagList.__docgenInfo,name:"TagList",path:"packages/select-with-tags/src/components/tag-list/component.tsx#TagList"})}catch(__react_docgen_typescript_loader_error){}var Component_excluded=["OptionsList","Optgroup","Option","Arrow","value","selected","size","onOpen","onInput","onChange","options","autocomplete","match","allowUnselect","collapseTagList","moveInputToNewLine","transformCollapsedTagText","transformTagText","Tag","view","FormControlComponent","dataTestId","open","searchProps"],BaseSelectWithTags=(0,react.forwardRef)(function(_ref,ref){var _searchProps$componen,_ref$OptionsList=_ref.OptionsList,OptionsList=void 0===_ref$OptionsList?shared.OptionsList:_ref$OptionsList,_ref$Optgroup=_ref.Optgroup,Optgroup=void 0===_ref$Optgroup?shared.Optgroup:_ref$Optgroup,_ref$Option=_ref.Option,Option=void 0===_ref$Option?shared.Option:_ref$Option,_ref$Arrow=_ref.Arrow,Arrow=void 0===_ref$Arrow?shared.Arrow:_ref$Arrow,value=_ref.value,selectedProp=_ref.selected,_ref$size=_ref.size,onOpen=_ref.onOpen,onInput=_ref.onInput,onChange=_ref.onChange,options=_ref.options,_ref$autocomplete=_ref.autocomplete,match=_ref.match,_ref$allowUnselect=_ref.allowUnselect,_ref$collapseTagList=_ref.collapseTagList,_ref$moveInputToNewLi=_ref.moveInputToNewLine,transformCollapsedTagText=_ref.transformCollapsedTagText,transformTagText=_ref.transformTagText,Tag=_ref.Tag,view=_ref.view,FormControlComponent=_ref.FormControlComponent,dataTestId=_ref.dataTestId,openProp=_ref.open,searchProps=_ref.searchProps,restProps=(0,objectWithoutProperties.Z)(_ref,Component_excluded),controlled=!!selectedProp,_useState=(0,react.useState)(selectedProp||[]),_useState2=(0,slicedToArray.Z)(_useState,2),selectedTags=_useState2[0],setSelectedTags=_useState2[1],_useState3=(0,react.useState)(!1),_useState4=(0,slicedToArray.Z)(_useState3,2),open=_useState4[0],setOpen=_useState4[1],updatePopover=(0,react.useRef)(function(){return null}),inputRef=(0,react.useRef)(null),frozenValue=(0,react.useRef)([]),selected=selectedProp||selectedTags,isAutocomplete=void 0===_ref$autocomplete||_ref$autocomplete||!!match,resetValue=function(){value&&onInput({target:{value:""}})},handleUpdatePopover=(0,react.useCallback)(function(){updatePopover&&updatePopover.current&&requestAnimationFrame(function(){var _updatePopover$curren;return null===(_updatePopover$curren=updatePopover.current)||void 0===_updatePopover$curren?void 0:_updatePopover$curren.call(updatePopover)})},[]),updateSelectedTags=function(payload){null==onChange||onChange(payload),controlled||setSelectedTags(payload.selectedMultiple)},filteredOptions=(0,react.useMemo)(function(){return filterOptions(options,value,match)},[options,value,match]),isOpen=!!(null!=openProp?openProp:open);return(0,jsx_runtime.jsx)(shared.BaseSelect,(0,objectSpread2.Z)((0,objectSpread2.Z)({},restProps),{},{open:isOpen,dataTestId:dataTestId,view:view,ref:ref,Option:Option,Field:TagList,Optgroup:Optgroup,OptionsList:OptionsList,Arrow:Arrow,multiple:!0,updatePopover:updatePopover,allowUnselect:void 0===_ref$allowUnselect||_ref$allowUnselect,showEmptyOptionsList:!0,fieldProps:(0,objectSpread2.Z)({value:value,isOpen:isOpen,autocomplete:"desktop"===view&&isAutocomplete,onInput:onInput,handleDeleteTag:function(deletedKey){updateSelectedTags({selectedMultiple:selected.filter(function(tag){return deletedKey!==("string"==typeof tag?tag:tag.key)})})},Tag:Tag,collapseTagList:void 0!==_ref$collapseTagList&&_ref$collapseTagList,moveInputToNewLine:void 0===_ref$moveInputToNewLi||_ref$moveInputToNewLi,transformCollapsedTagText:transformCollapsedTagText,transformTagText:transformTagText,handleUpdatePopover:handleUpdatePopover,FormControlComponent:FormControlComponent},"mobile"===view&&isOpen?{selectedMultiple:frozenValue.current}:null),selected:selected,autocomplete:"desktop"===view&&isAutocomplete,size:void 0===_ref$size?72:_ref$size,options:filteredOptions,onChange:function(payload){updateSelectedTags(payload),resetValue()},onOpen:function(payload){var isOpen=payload.open;isOpen?frozenValue.current=selected:resetValue(),null==onOpen||onOpen(payload),setOpen(isOpen)}},"mobile"===view?{showSearch:isAutocomplete,Search:shared.Search,searchProps:(0,objectSpread2.Z)((0,objectSpread2.Z)({filterFn:function filterFn(){return!0}},searchProps),{},{value:value,componentProps:(0,objectSpread2.Z)((0,objectSpread2.Z)({leftAddons:null,clear:!0,onClear:resetValue},null==searchProps?void 0:searchProps.componentProps),{},{ref:(0,react_merge_refs_esm.Z)([inputRef,null==searchProps?void 0:null===(_searchProps$componen=searchProps.componentProps)||void 0===_searchProps$componen?void 0:_searchProps$componen.ref]),onChange:onInput})}),bottomSheetProps:{onClose:function(){updateSelectedTags({selectedMultiple:frozenValue.current})},containerProps:{onTouchMove:function(){var input=inputRef.current;input&&document.activeElement===input&&input.blur()}}},optionsListProps:(0,objectSpread2.Z)({footer:(0,jsx_runtime.jsx)(shared.Footer,{showClear:!0,handleClear:function(){setOpen(!1),updateSelectedTags({selectedMultiple:[]}),resetValue()},handleApply:function(){setOpen(!1),resetValue()},dataTestId:dataTestId})},restProps.optionsListProps)}:null))});try{BaseSelectWithTags.displayName="BaseSelectWithTags",BaseSelectWithTags.__docgenInfo={description:"",displayName:"BaseSelectWithTags",props:{size:{defaultValue:{value:"72"},description:"Размер компонента\n@description s, m, l, xl deprecated, используйте вместо них 48, 56, 64, 72 соответственно",name:"size",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'},{value:"48"},{value:"56"},{value:"64"},{value:"72"}]}},disabled:{defaultValue:null,description:"Управление возможностью выбора значения",name:"disabled",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Атрибут name",name:"name",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"Плейсхолдер поля",name:"placeholder",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Дополнительный класс",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"Атрибут id",name:"id",required:!1,type:{name:"string"}},onFocus:{defaultValue:null,description:"Обработчик фокуса поля",name:"onFocus",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"Обработчик блюра поля",name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void)"}},onScroll:{defaultValue:null,description:"Обработчик скрола",name:"onScroll",required:!1,type:{name:"((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)"}},block:{defaultValue:null,description:"Растягивает компонент на ширину контейнера",name:"block",required:!1,type:{name:"boolean"}},clear:{defaultValue:null,description:"Флаг, показать крестик для очистки поля",name:"clear",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"Отображение ошибки",name:"error",required:!1,type:{name:"ReactNode"}},hint:{defaultValue:null,description:"Подсказка под полем",name:"hint",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"Лейбл поля",name:"label",required:!1,type:{name:"ReactNode"}},labelView:{defaultValue:null,description:"Вид лейбла внутри / снаружи",name:"labelView",required:!1,type:{name:"enum",value:[{value:'"inner"'},{value:'"outer"'}]}},fieldClassName:{defaultValue:null,description:"Дополнительный класс для поля",name:"fieldClassName",required:!1,type:{name:"string"}},onClear:{defaultValue:null,description:"Обработчик нажатия на крестик для очистки поля",name:"onClear",required:!1,type:{name:"((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}},dataTestId:{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования.\nДля пункта меню используется модификатор -option, компонента поиска -search,\nкомпонента выпадающего меню -options-list, компонента BottomSheet -bottom-sheet,\nкомпонента поля -field, компонета FormControl -field-form-control",name:"dataTestId",required:!1,type:{name:"string"}},open:{defaultValue:null,description:"Управление открытием",name:"open",required:!1,type:{name:"boolean"}},popoverProps:{defaultValue:null,description:"Дополнительные пропсы для Popover",name:"popoverProps",required:!1,type:{name:'Omit<PopoverProps, "className" | "dataTestId" | "open" | "position" | "zIndex" | "update" | "anchorElement" | "preventFlip">'}},onOpen:{defaultValue:null,description:"Обработчик открытия\\закрытия селекта",name:"onOpen",required:!1,type:{name:"((payload: { open?: boolean; name?: string; }) => void) | undefined"}},updatePopover:{defaultValue:null,description:"Хранит функцию, с помощью которой можно обновить положение поповера",name:"updatePopover",required:!1,type:{name:"MutableRefObject<(() => void)>"}},preventFlip:{defaultValue:null,description:"Запрещает поповеру менять свою позицию.\nНапример, если места снизу недостаточно,то он все равно будет показан снизу",name:"preventFlip",required:!1,type:{name:"boolean"}},fieldProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент поля",name:"fieldProps",required:!1,type:{name:"unknown"}},optionsListClassName:{defaultValue:null,description:"Дополнительный класс выпадающего меню",name:"optionsListClassName",required:!1,type:{name:"string"}},optionClassName:{defaultValue:null,description:"Дополнительный класс для пункта меню",name:"optionClassName",required:!1,type:{name:"string"}},optionGroupClassName:{defaultValue:null,description:"Дополнительный класс для компонента группы пунктов",name:"optionGroupClassName",required:!1,type:{name:"string"}},popperClassName:{defaultValue:null,description:"Дополнительный класс для поповера",name:"popperClassName",required:!1,type:{name:"string"}},options:{defaultValue:null,description:"Список вариантов выбора",name:"options",required:!0,type:{name:"(OptionShape | GroupShape)[]"}},defaultOpen:{defaultValue:null,description:"Начальное состояние селекта",name:"defaultOpen",required:!1,type:{name:"boolean"}},optionsSize:{defaultValue:null,description:"Размер пунктов меню\n@description s, m, l, xl deprecated, используйте вместо них 48, 56, 64, 72 соответственно",name:"optionsSize",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'},{value:"48"},{value:"56"},{value:"64"},{value:"72"}]}},optionsListWidth:{defaultValue:null,description:"Управляет шириной выпадающего меню.\nШирину определяет контент, либо ширина равна ширине поля",name:"optionsListWidth",required:!1,type:{name:"enum",value:[{value:'"content"'},{value:'"field"'}]}},allowUnselect:{defaultValue:{value:"true"},description:"Позволяет снять выбранное значение",name:"allowUnselect",required:!1,type:{name:"boolean"}},closeOnSelect:{defaultValue:null,description:"Закрывать меню после выбора?",name:"closeOnSelect",required:!1,type:{name:"boolean"}},circularNavigation:{defaultValue:null,description:"При навигации с клавиатуры переходить от последнего пункта меню к первому и наоборот.",name:"circularNavigation",required:!1,type:{name:"boolean"}},popoverPosition:{defaultValue:null,description:"Позиционирование выпадающего списка",name:"popoverPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"right"'},{value:'"left"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},visibleOptions:{defaultValue:null,description:"Количество видимых пунктов меню (5 = 5.5)",name:"visibleOptions",required:!1,type:{name:"number"}},valueRenderer:{defaultValue:null,description:"Кастомный рендер выбранного пункта",name:"valueRenderer",required:!1,type:{name:"(({ selected, selectedMultiple, }: { selected?: OptionShape; selectedMultiple: OptionShape[]; }) => ReactNode)"}},Arrow:{defaultValue:{value:"({ open, className }: ArrowProps) => (\n    <ChevronDownMIcon className={cn(styles.arrow, className, { [styles.open]: open })} />\n)"},description:"Компонент стрелки",name:"Arrow",required:!1,type:{name:"false | ComponentType<ArrowProps> | null"}},optionsListProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент списка",name:"optionsListProps",required:!1,type:{name:"unknown"}},optionProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент пункта меню",name:"optionProps",required:!1,type:{name:"unknown"}},groupOptionProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент группового пункта меню",name:"groupOptionProps",required:!1,type:{name:"AnyObject"}},OptionsList:{defaultValue:{value:"forwardRef<HTMLDivElement, OptionsListProps>(\n    (\n        {\n            size = 48,\n            className,\n            optionGroupClassName,\n            scrollbarClassName,\n            Option,\n            getOptionProps,\n            groupOptionProps = {},\n            options = [],\n            Optgroup = DefaultOptgroup,\n            dataTestId,\n            emptyPlaceholder,\n            visibleOptions = DEFAULT_VISIBLE_OPTIONS,\n            onScroll,\n            open,\n            header,\n            footer,\n            showFooter = true,\n            optionsListWidth,\n            nativeScrollbar: nativeScrollbarProp,\n            flatOptions = [],\n            setHighlightedIndex,\n            selectedItems,\n            search,\n            setSelectedItems,\n            multiple,\n            limitDynamicOptionGroupSize = false,\n        },\n        ref,\n    ) => {\n        const [scrollTop, setScrollTop] = useState(true);\n        const [scrollBottom, setScrollBottom] = useState(false);\n\n        const query = '(max-width: 1023px)';\n        let [nativeScrollbar] = useMatchMedia(query, () =>\n            isClient() ? window.matchMedia(query).matches : true,\n        );\n\n        nativeScrollbar = Boolean(nativeScrollbarProp ?? nativeScrollbar);\n\n        const handleScroll = useCallback(\n            (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n                const scrolledToHeader = event.currentTarget.scrollTop <= 0;\n                const scrolledToFooter =\n                    event.currentTarget.scrollHeight - event.currentTarget.offsetHeight <=\n                    event.currentTarget.scrollTop;\n\n                setScrollTop(scrolledToHeader);\n                setScrollBottom(scrolledToFooter);\n\n                onScroll?.(event);\n            },\n            [onScroll],\n        );\n\n        const renderOption = (option: OptionShape, index: number) => (\n            <Option key={option.key} {...getOptionProps(option, index)} />\n        );\n\n        const listRef = useRef<HTMLDivElement>(null);\n        const scrollbarRef = useRef<HTMLDivElement>(null);\n        const counter = createCounter();\n        const renderGroup = (group: GroupShape) => {\n            const groupSelectedItems = selectedItems?.filter(({ key: selectedItemKey }) =>\n                group.options.some((option) => option.key === selectedItemKey),\n            );\n            const handleSelectedItems = (items: OptionShape[]) => {\n                setSelectedItems(\n                    (\n                        selectedItems?.filter(\n                            ({ key: selectedItemKey }) =>\n                                !group.options.some((option) => option.key === selectedItemKey),\n                        ) ?? []\n                    ).concat(items),\n                );\n            };\n\n            return (\n                <Optgroup\n                    className={optionGroupClassName}\n                    label={group.label}\n                    key={group.label}\n                    size={size}\n                    options={group.options}\n                    selectedItems={groupSelectedItems}\n                    setSelectedItems={handleSelectedItems}\n                    search={search}\n                    multiple={multiple}\n                    {...groupOptionProps}\n                >\n                    {group.options.map((option) => renderOption(option, counter()))}\n                </Optgroup>\n            );\n        };\n\n        const actualOptionsCount = limitDynamicOptionGroupSize && options.length > 0;\n\n        const measured = useVisibleOptions({\n            ...(!nativeScrollbar && { styleTargetRef: scrollbarRef }),\n            visibleOptions,\n            listRef,\n            open,\n            options,\n            actualOptionsCount,\n            size: actualOptionsCount\n                ? (() => {\n                      switch (typeof size) {\n                          case 'string':\n                              throw new Error(\n                                  'OptionsList with `limitDynamicOptionGroupSize` enabled needs a `size` with number type',\n                              );\n                          default:\n                              return size;\n                      }\n                  })()\n                : undefined,\n        });\n\n        if (options.length === 0 && !emptyPlaceholder && !header && !footer) {\n            return null;\n        }\n\n        const renderListItems = () => (\n            <React.Fragment>\n                {options.map((option) =>\n                    isGroup(option) ? renderGroup(option) : renderOption(option, counter()),\n                )}\n\n                {emptyPlaceholder && options.length === 0 && (\n                    <div className={styles.emptyPlaceholder}>{emptyPlaceholder}</div>\n                )}\n            </React.Fragment>\n        );\n\n        const renderWithCustomScrollbar = () => {\n            const scrollableNodeProps = {\n                onScroll: handleScroll,\n                'data-test-id': dataTestId,\n                ref: ref as React.RefObject<HTMLDivElement>,\n            };\n\n            return (\n                <Scrollbar\n                    className={cn(styles.scrollable, scrollbarClassName)}\n                    ref={scrollbarRef}\n                    horizontalAutoStretch={optionsListWidth === 'content'}\n                    scrollableNodeProps={scrollableNodeProps}\n                    contentNodeProps={{ ref: listRef }}\n                    maskProps={{ className: measured ? undefined : styles.mask }}\n                >\n                    {renderListItems()}\n                </Scrollbar>\n            );\n        };\n\n        const renderWithNativeScrollbar = () => (\n            <div\n                className={cn(styles.scrollable, scrollbarClassName)}\n                ref={mergeRefs([listRef, ref])}\n                onScroll={handleScroll}\n            >\n                {renderListItems()}\n            </div>\n        );\n\n        const resetHighlightedIndex = () => setHighlightedIndex?.(-1);\n\n        return (\n            <div\n                {...(nativeScrollbar && { 'data-test-id': dataTestId })}\n                className={cn(styles.optionsList, styles[SIZE_TO_CLASSNAME_MAP[size]], className)}\n            >\n                {header && (\n                    <div\n                        className={cn(styles.optionsListHeader, {\n                            [styles.headerHighlighted]: !scrollTop,\n                        })}\n                        onMouseEnter={resetHighlightedIndex}\n                    >\n                        {header}\n                    </div>\n                )}\n\n                {nativeScrollbar ? renderWithNativeScrollbar() : renderWithCustomScrollbar()}\n\n                {showFooter && footer && (\n                    <div\n                        onMouseEnter={resetHighlightedIndex}\n                        className={cn(styles.optionsListFooter, {\n                            [styles.withBorder]:\n                                visibleOptions &&\n                                flatOptions.length > visibleOptions &&\n                                !scrollBottom,\n                        })}\n                    >\n                        {footer}\n                    </div>\n                )}\n            </div>\n        );\n    },\n)"},description:"Компонент выпадающего меню",name:"OptionsList",required:!1,type:{name:"ComponentType<OptionsListProps & RefAttributes<HTMLDivElement>>"}},Optgroup:{defaultValue:{value:"({ children, className, label, size = 48 }: OptgroupProps) => (\n    <React.Fragment>\n        <div className={cn(styles.optgroup, className, styles[SIZE_TO_CLASSNAME_MAP[size]])}>\n            <span className={styles.label}>{label}</span>\n        </div>\n        {children}\n    </React.Fragment>\n)"},description:"Компонент группы",name:"Optgroup",required:!1,type:{name:"ComponentType<OptgroupProps>"}},Option:{defaultValue:{value:"({\n    size = 48,\n    className,\n    option,\n    children,\n    selected,\n    highlighted,\n    disabled,\n    multiple,\n    mobile,\n    Checkmark = mobile ? DefaultMobileCheckmark : DefaultCheckMark,\n    innerProps,\n    dataTestId,\n}) => {\n    const content = children || option.content || option.key;\n    const { showCheckMark = true } = option;\n\n    return (\n        <div\n            {...innerProps}\n            className={cn(styles.option, styles[SIZE_TO_CLASSNAME_MAP[size]], className, {\n                [styles.highlighted]: !mobile && highlighted,\n                [styles.selected]: selected,\n                [styles.disabled]: disabled,\n            })}\n            data-test-id={dataTestId}\n        >\n            {Checkmark && showCheckMark && (\n                <Checkmark\n                    disabled={disabled}\n                    selected={selected}\n                    multiple={multiple}\n                    position='before'\n                />\n            )}\n\n            <div\n                className={cn(styles.content, {\n                    [styles.textContent]: !isValidElement(content),\n                })}\n            >\n                {content}\n            </div>\n\n            {/** Workaround чтобы для клика показывать отметку справа и всегда в виде иконки */}\n            {Checkmark && showCheckMark && (\n                <Checkmark\n                    disabled={disabled}\n                    selected={selected}\n                    multiple={multiple}\n                    position='after'\n                />\n            )}\n        </div>\n    );\n}"},description:"Компонент пункта меню",name:"Option",required:!1,type:{name:"ComponentType<OptionProps>"}},showSearch:{defaultValue:null,description:"Включает отображение поиска",name:"showSearch",required:!1,type:{name:"boolean"}},Search:{defaultValue:null,description:"Компонент поиска",name:"Search",required:!1,type:{name:"ComponentType<SearchProps>"}},searchProps:{defaultValue:null,description:"Настройки поиска",name:"searchProps",required:!1,type:{name:"{ componentProps?: SearchProps; accessor?: ((option: OptionShape) => string); filterFn?: ((optionText: string, search: string) => boolean) | undefined; value?: string | undefined; onChange?: ((value: string) => void) | undefined; filterGroup?: boolean | undefined; groupAccessor?: ((group: Gro..."}},zIndexPopover:{defaultValue:null,description:"z-index поповера",name:"zIndexPopover",required:!1,type:{name:"number"}},showEmptyOptionsList:{defaultValue:null,description:"Показывать OptionsList, если он пустой",name:"showEmptyOptionsList",required:!1,type:{name:"boolean"}},limitDynamicOptionGroupSize:{defaultValue:null,description:"Ограничение динамического размера группы вариантов выбора",name:"limitDynamicOptionGroupSize",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"Значение поля ввода",name:"value",required:!0,type:{name:"string"}},onInput:{defaultValue:null,description:"Обработчик ввода",name:"onInput",required:!0,type:{name:"(event: ChangeEvent<HTMLInputElement>) => void"}},selected:{defaultValue:null,description:"Список выбранных пунктов (controlled-селект)",name:"selected",required:!1,type:{name:"(string | OptionShape)[]"}},onChange:{defaultValue:null,description:"Обработчик выбора",name:"onChange",required:!1,type:{name:"((payload: { selectedMultiple: (string | OptionShape)[]; initiator?: OptionShape | null; name?: string; }) => void) | undefined"}},autocomplete:{defaultValue:{value:"true"},description:"Режим автокомплита",name:"autocomplete",required:!1,type:{name:"boolean"}},match:{defaultValue:null,description:"Функция сравнения при поиске",name:"match",required:!1,type:{name:"OptionMatcher"}},Tag:{defaultValue:null,description:"Компонент Тэг",name:"Tag",required:!1,type:{name:"TagComponent"}},collapseTagList:{defaultValue:{value:"false"},description:"Показывать тэги только в одном ряду, а если не помещаются в один ряд - схлопнуть в одну кнопку",name:"collapseTagList",required:!1,type:{name:"boolean"}},moveInputToNewLine:{defaultValue:{value:"true"},description:"Если текст не помещается в инпут, то нужно перенести инпут на новую строку.",name:"moveInputToNewLine",required:!1,type:{name:"boolean"}},transformCollapsedTagText:{defaultValue:null,description:"Трансформировать текст компонента Тэг который отображает общее количество выбранных элементов",name:"transformCollapsedTagText",required:!1,type:{name:"((collapsedCount: number) => string)"}},transformTagText:{defaultValue:null,description:"Трансформировать текст компонента Тэг",name:"transformTagText",required:!1,type:{name:"((tagText?: ReactNode) => ReactNode)"}},breakpoint:{defaultValue:{value:"1024"},description:"Контрольная точка, с нее начинается desktop версия",name:"breakpoint",required:!1,type:{name:"number"}},defaultMatchMediaValue:{defaultValue:null,description:"Значение по-умолчанию для хука useMatchMedia",name:"defaultMatchMediaValue",required:!1,type:{name:"boolean | (() => boolean)"}},view:{defaultValue:null,description:"",name:"view",required:!0,type:{name:"enum",value:[{value:'"mobile"'},{value:'"desktop"'}]}},FormControlComponent:{defaultValue:null,description:"",name:"FormControlComponent",required:!0,type:{name:"ForwardRefExoticComponent<FormControlProps>"}},Popover:{defaultValue:null,description:"",name:"Popover",required:!1,type:{name:"ForwardRefExoticComponent<PopoverProps>"}},BottomSheet:{defaultValue:null,description:"",name:"BottomSheet",required:!1,type:{name:"ForwardRefExoticComponent<BottomSheetProps>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/select-with-tags/src/components/base-select-with-tags/Component.tsx#BaseSelectWithTags"]={docgenInfo:BaseSelectWithTags.__docgenInfo,name:"BaseSelectWithTags",path:"packages/select-with-tags/src/components/base-select-with-tags/Component.tsx#BaseSelectWithTags"})}catch(__react_docgen_typescript_loader_error){}}}]);