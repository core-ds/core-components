{
  "CodeInput": {
    "description": "",
    "props": [
      {
        "name": "fields",
        "type": "number",
        "required": false,
        "description": "Количество полей"
      },
      {
        "name": "initialValues",
        "type": "string",
        "required": false,
        "description": "Значение для предзаполнения"
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Заблокированное состояние"
      },
      {
        "name": "error",
        "type": "ReactNode",
        "required": false,
        "description": "Состояние с ошибкой"
      },
      {
        "name": "className",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс (native prop)"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования"
      },
      {
        "name": "clearCodeOnError",
        "type": "boolean",
        "required": false,
        "defaultValue": "true",
        "description": "Флаг - нужно ли очищать код при возникновении ошибки"
      },
      {
        "name": "errorVisibleDuration",
        "type": "number",
        "required": false,
        "defaultValue": "1300",
        "description": "Продолжительность отображения ошибки"
      },
      {
        "name": "onErrorAnimationEnd",
        "type": "(() => void)",
        "required": false,
        "description": "Коллбэк вызываемый после окончания проигрывания анимации при возникновении ошибки."
      },
      {
        "name": "onChange",
        "type": "((code: string) => void)",
        "required": false,
        "description": "Коллбек ввода значения"
      },
      {
        "name": "onComplete",
        "type": "((code: string) => void)",
        "required": false,
        "description": "Коллбек полного заполнения"
      },
      {
        "name": "breakpoint",
        "type": "number",
        "required": false,
        "defaultValue": "1024",
        "description": "Контрольная точка, с нее начинается desktop версия"
      },
      {
        "name": "client",
        "type": "\"desktop\" | \"mobile\"",
        "required": false,
        "description": "Версия, которая будет использоваться при серверном рендеринге"
      },
      {
        "name": "defaultMatchMediaValue",
        "type": "boolean | (() => boolean)",
        "required": false,
        "defaultValue": "client === undefined ? undefined : client === 'desktop'",
        "description": "Значение по-умолчанию для хука useMatchMedia\n@deprecated Используйте client"
      },
      {
        "name": "ref",
        "type": "Ref<CustomInputRef>",
        "required": false,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
      },
      {
        "name": "key",
        "type": "Key | null",
        "required": false,
        "description": ""
      }
    ]
  },
  "BaseCodeInput": {
    "description": "",
    "props": [
      {
        "name": "fields",
        "type": "number",
        "required": false,
        "defaultValue": 4,
        "description": "Количество полей"
      },
      {
        "name": "initialValues",
        "type": "string",
        "required": false,
        "defaultValue": "",
        "description": "Значение для предзаполнения"
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Заблокированное состояние"
      },
      {
        "name": "error",
        "type": "ReactNode",
        "required": false,
        "description": "Состояние с ошибкой"
      },
      {
        "name": "className",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс (native prop)"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования"
      },
      {
        "name": "clearCodeOnError",
        "type": "boolean",
        "required": false,
        "defaultValue": true,
        "description": "Флаг - нужно ли очищать код при возникновении ошибки"
      },
      {
        "name": "errorVisibleDuration",
        "type": "number",
        "required": false,
        "defaultValue": 1300,
        "description": "Продолжительность отображения ошибки"
      },
      {
        "name": "onErrorAnimationEnd",
        "type": "(() => void)",
        "required": false,
        "description": "Коллбэк вызываемый после окончания проигрывания анимации при возникновении ошибки."
      },
      {
        "name": "onChange",
        "type": "((code: string) => void)",
        "required": false,
        "description": "Коллбек ввода значения"
      },
      {
        "name": "onComplete",
        "type": "((code: string) => void)",
        "required": false,
        "description": "Коллбек полного заполнения"
      },
      {
        "name": "stylesInput",
        "type": "{ [key: string]: string; }",
        "required": false,
        "defaultValue": "{}",
        "description": "Основные стили компонента."
      },
      {
        "name": "ref",
        "type": "Ref<CustomInputRef>",
        "required": false,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
      },
      {
        "name": "key",
        "type": "Key | null",
        "required": false,
        "description": ""
      }
    ]
  },
  "Input": {
    "description": "",
    "props": [
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "accept",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "alt",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "autoComplete",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "capture",
        "type": "boolean | \"user\" | \"environment\"",
        "required": false,
        "description": ""
      },
      {
        "name": "checked",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "\"\" | \"anonymous\" | \"use-credentials\"",
        "required": false,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "height",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "list",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "max",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "maxLength",
        "type": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "min",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "minLength",
        "type": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "multiple",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "pattern",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "placeholder",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "readOnly",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "required",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "size",
        "type": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "src",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "step",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "type",
        "type": "HTMLInputTypeAttribute",
        "required": false,
        "description": ""
      },
      {
        "name": "width",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "index",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "value",
        "type": "string",
        "required": false,
        "defaultValue": "",
        "description": ""
      },
      {
        "name": "error",
        "type": "boolean",
        "required": true,
        "description": ""
      },
      {
        "name": "compact",
        "type": "boolean",
        "required": false,
        "defaultValue": false,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "(event: ChangeEvent<HTMLInputElement>, payload: { index: number; }) => void",
        "required": true,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "(event: KeyboardEvent<HTMLInputElement>, payload: { index: number; }) => void",
        "required": true,
        "description": ""
      },
      {
        "name": "stylesInput",
        "type": "{ [key: string]: string; }",
        "required": false,
        "defaultValue": "{}",
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLInputElement>",
        "required": false,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
      },
      {
        "name": "key",
        "type": "Key | null",
        "required": false,
        "description": ""
      }
    ]
  },
  "CodeInputDesktop": {
    "description": "",
    "props": [
      {
        "name": "fields",
        "type": "number",
        "required": false,
        "description": "Количество полей"
      },
      {
        "name": "initialValues",
        "type": "string",
        "required": false,
        "description": "Значение для предзаполнения"
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Заблокированное состояние"
      },
      {
        "name": "error",
        "type": "ReactNode",
        "required": false,
        "description": "Состояние с ошибкой"
      },
      {
        "name": "className",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс (native prop)"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования"
      },
      {
        "name": "clearCodeOnError",
        "type": "boolean",
        "required": false,
        "defaultValue": "true",
        "description": "Флаг - нужно ли очищать код при возникновении ошибки"
      },
      {
        "name": "errorVisibleDuration",
        "type": "number",
        "required": false,
        "defaultValue": "1300",
        "description": "Продолжительность отображения ошибки"
      },
      {
        "name": "onErrorAnimationEnd",
        "type": "(() => void)",
        "required": false,
        "description": "Коллбэк вызываемый после окончания проигрывания анимации при возникновении ошибки."
      },
      {
        "name": "onChange",
        "type": "((code: string) => void)",
        "required": false,
        "description": "Коллбек ввода значения"
      },
      {
        "name": "onComplete",
        "type": "((code: string) => void)",
        "required": false,
        "description": "Коллбек полного заполнения"
      },
      {
        "name": "ref",
        "type": "Ref<CustomInputRef>",
        "required": false,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
      },
      {
        "name": "key",
        "type": "Key | null",
        "required": false,
        "description": ""
      }
    ]
  },
  "CodeInputMobile": {
    "description": "",
    "props": [
      {
        "name": "fields",
        "type": "number",
        "required": false,
        "description": "Количество полей"
      },
      {
        "name": "initialValues",
        "type": "string",
        "required": false,
        "description": "Значение для предзаполнения"
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Заблокированное состояние"
      },
      {
        "name": "error",
        "type": "ReactNode",
        "required": false,
        "description": "Состояние с ошибкой"
      },
      {
        "name": "className",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс (native prop)"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования"
      },
      {
        "name": "clearCodeOnError",
        "type": "boolean",
        "required": false,
        "defaultValue": "true",
        "description": "Флаг - нужно ли очищать код при возникновении ошибки"
      },
      {
        "name": "errorVisibleDuration",
        "type": "number",
        "required": false,
        "defaultValue": "1300",
        "description": "Продолжительность отображения ошибки"
      },
      {
        "name": "onErrorAnimationEnd",
        "type": "(() => void)",
        "required": false,
        "description": "Коллбэк вызываемый после окончания проигрывания анимации при возникновении ошибки."
      },
      {
        "name": "onChange",
        "type": "((code: string) => void)",
        "required": false,
        "description": "Коллбек ввода значения"
      },
      {
        "name": "onComplete",
        "type": "((code: string) => void)",
        "required": false,
        "description": "Коллбек полного заполнения"
      },
      {
        "name": "ref",
        "type": "Ref<CustomInputRef>",
        "required": false,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
      },
      {
        "name": "key",
        "type": "Key | null",
        "required": false,
        "description": ""
      }
    ]
  }
}