{
  "NumberInputResponsive": {
    "description": "",
    "props": [
      {
        "name": "size",
        "type": "\"s\" | \"m\" | \"l\" | \"xl\" | 40 | 48 | 56 | 64 | 72",
        "required": false,
        "description": "Размер компонента\n@description s, m, l, xl deprecated, используйте вместо них 48, 56, 64, 72 соответственно"
      },
      {
        "name": "value",
        "type": "string | number | null",
        "required": false,
        "description": "Значение поля ввода"
      },
      {
        "name": "defaultValue",
        "type": "string | number | null",
        "required": false,
        "description": "Значение по-умолчанию"
      },
      {
        "name": "onChange",
        "type": "((e: ChangeEvent<HTMLInputElement> | null, payload: { value: number | null; }) => void)",
        "required": false,
        "description": "Обработчик события изменения значения"
      },
      {
        "name": "onClick",
        "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик клика по полю"
      },
      {
        "name": "onMouseDown",
        "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик MouseDown по полю"
      },
      {
        "name": "accept",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "alt",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "autoComplete",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "capture",
        "type": "boolean | \"user\" | \"environment\"",
        "required": false,
        "description": ""
      },
      {
        "name": "checked",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "\"\" | \"anonymous\" | \"use-credentials\"",
        "required": false,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "height",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "list",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "max",
        "type": "number",
        "required": false,
        "defaultValue": "Number.MAX_SAFE_INTEGER",
        "description": "Максимальное значение"
      },
      {
        "name": "maxLength",
        "type": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "min",
        "type": "number",
        "required": false,
        "defaultValue": "Number.MIN_SAFE_INTEGER",
        "description": "Минимальное значение"
      },
      {
        "name": "minLength",
        "type": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "multiple",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "pattern",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "placeholder",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "readOnly",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "required",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "src",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "step",
        "type": "number",
        "required": false,
        "description": "Шаг инкремента/декремента. Используйте только целочисленные значения"
      },
      {
        "name": "width",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Растягивает компонент на ширину контейнера"
      },
      {
        "name": "clear",
        "type": "boolean",
        "required": false,
        "description": "Крестик для очистки поля"
      },
      {
        "name": "colors",
        "type": "\"default\" | \"inverted\"",
        "required": false,
        "description": "Набор цветов для компонента"
      },
      {
        "name": "error",
        "type": "ReactNode",
        "required": false,
        "description": "Отображение ошибки"
      },
      {
        "name": "success",
        "type": "boolean",
        "required": false,
        "description": "Отображение иконки успеха"
      },
      {
        "name": "hint",
        "type": "ReactNode",
        "required": false,
        "description": "Текст подсказки"
      },
      {
        "name": "label",
        "type": "ReactNode",
        "required": false,
        "description": "Лейбл компонента"
      },
      {
        "name": "labelView",
        "type": "\"inner\" | \"outer\"",
        "required": false,
        "description": "Вид лейбла внутри / снаружи"
      },
      {
        "name": "wrapperRef",
        "type": "Ref<HTMLDivElement>",
        "required": false,
        "description": "Ref для обертки input"
      },
      {
        "name": "leftAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот слева"
      },
      {
        "name": "rightAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот справа"
      },
      {
        "name": "leftAddonsProps",
        "type": "HTMLAttributes<HTMLDivElement>",
        "required": false,
        "description": "Свойства для обертки левых аддонов"
      },
      {
        "name": "rightAddonsProps",
        "type": "HTMLAttributes<HTMLDivElement>",
        "required": false,
        "description": "Свойства для обертки правых аддонов"
      },
      {
        "name": "bottomAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот под инпутом"
      },
      {
        "name": "fieldClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для поля"
      },
      {
        "name": "inputClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс инпута"
      },
      {
        "name": "labelClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для лейбла"
      },
      {
        "name": "addonsClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для аддонов"
      },
      {
        "name": "focusedClassName",
        "type": "string",
        "required": false,
        "description": "Класс, который будет установлен при фокусе"
      },
      {
        "name": "filledClassName",
        "type": "string",
        "required": false,
        "description": "Класс, который будет установлен, если в поле есть значение"
      },
      {
        "name": "onClear",
        "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик нажатия на кнопку очистки"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования.\nДля кнопки инкремента используется модификатор -increment-button, декремента -decrement-button"
      },
      {
        "name": "disableUserInput",
        "type": "boolean",
        "required": false,
        "description": "Запрещает ввод с клавиатуры"
      },
      {
        "name": "breakpoint",
        "type": "number",
        "required": false,
        "defaultValue": "1024",
        "description": "Контрольная точка, с нее начинается desktop версия"
      },
      {
        "name": "client",
        "type": "\"desktop\" | \"mobile\"",
        "required": false,
        "description": "Версия, которая будет использоваться при серверном рендеринге"
      },
      {
        "name": "defaultMatchMediaValue",
        "type": "boolean | (() => boolean)",
        "required": false,
        "defaultValue": "client === undefined ? undefined : client === 'desktop'",
        "description": "Значение по-умолчанию для хука useMatchMedia\n@deprecated Используйте client"
      },
      {
        "name": "separator",
        "type": "\".\" | \",\"",
        "required": false,
        "description": "Разделитель ',' или '.'"
      },
      {
        "name": "fractionLength",
        "type": "number",
        "required": false,
        "description": "Количество символов после разделителя\nЕсли указан проп step, то всегда 0"
      },
      {
        "name": "ref",
        "type": "Ref<HTMLInputElement>",
        "required": false,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
      },
      {
        "name": "key",
        "type": "Key | null",
        "required": false,
        "description": ""
      }
    ]
  },
  "NumberInput": {
    "description": "",
    "props": [
      {
        "name": "value",
        "type": "string | number | null",
        "required": false,
        "description": "Значение поля ввода"
      },
      {
        "name": "defaultValue",
        "type": "string | number | null",
        "required": false,
        "description": "Значение по-умолчанию"
      },
      {
        "name": "separator",
        "type": "\".\" | \",\"",
        "required": false,
        "defaultValue": ",",
        "description": "Разделитель ',' или '.'"
      },
      {
        "name": "fractionLength",
        "type": "number",
        "required": false,
        "defaultValue": 15,
        "description": "Количество символов после разделителя\nЕсли указан проп step, то всегда 0"
      },
      {
        "name": "step",
        "type": "number",
        "required": false,
        "description": "Шаг инкремента/декремента. Используйте только целочисленные значения"
      },
      {
        "name": "min",
        "type": "number",
        "required": false,
        "defaultValue": "Number.MIN_SAFE_INTEGER",
        "description": "Минимальное значение"
      },
      {
        "name": "max",
        "type": "number",
        "required": false,
        "defaultValue": "Number.MAX_SAFE_INTEGER",
        "description": "Максимальное значение"
      },
      {
        "name": "view",
        "type": "\"desktop\" | \"mobile\"",
        "required": false,
        "description": "Отображение компонента в мобильном или десктопном виде"
      },
      {
        "name": "Input",
        "type": "FC<Omit<BaseInputProps, \"FormControlComponent\"> & { breakpoint?: number | undefined; client?: \"desktop\" | \"mobile\" | undefined; defaultMatchMediaValue?: boolean | ... 1 more ... | undefined; } & { ...; }>",
        "required": true,
        "description": "Компонент инпута"
      },
      {
        "name": "onChange",
        "type": "((e: ChangeEvent<HTMLInputElement> | null, payload: { value: number | null; }) => void)",
        "required": false,
        "description": "Обработчик события изменения значения"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования.\nДля кнопки инкремента используется модификатор -increment-button, декремента -decrement-button"
      },
      {
        "name": "size",
        "type": "\"s\" | \"m\" | \"l\" | \"xl\" | 40 | 48 | 56 | 64 | 72",
        "required": false,
        "defaultValue": 48,
        "description": "Размер компонента\n@description s, m, l, xl deprecated, используйте вместо них 48, 56, 64, 72 соответственно"
      },
      {
        "name": "onClick",
        "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик клика по полю"
      },
      {
        "name": "onMouseDown",
        "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик MouseDown по полю"
      },
      {
        "name": "accept",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "alt",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "autoComplete",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "capture",
        "type": "boolean | \"user\" | \"environment\"",
        "required": false,
        "description": ""
      },
      {
        "name": "checked",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "\"\" | \"anonymous\" | \"use-credentials\"",
        "required": false,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "height",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "list",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "maxLength",
        "type": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "minLength",
        "type": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "multiple",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "pattern",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "placeholder",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "readOnly",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "required",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "src",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "width",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Растягивает компонент на ширину контейнера"
      },
      {
        "name": "clear",
        "type": "boolean",
        "required": false,
        "description": "Крестик для очистки поля"
      },
      {
        "name": "colors",
        "type": "\"default\" | \"inverted\"",
        "required": false,
        "defaultValue": "default",
        "description": "Набор цветов для компонента"
      },
      {
        "name": "error",
        "type": "ReactNode",
        "required": false,
        "description": "Отображение ошибки"
      },
      {
        "name": "success",
        "type": "boolean",
        "required": false,
        "description": "Отображение иконки успеха"
      },
      {
        "name": "hint",
        "type": "ReactNode",
        "required": false,
        "description": "Текст подсказки"
      },
      {
        "name": "label",
        "type": "ReactNode",
        "required": false,
        "description": "Лейбл компонента"
      },
      {
        "name": "labelView",
        "type": "\"inner\" | \"outer\"",
        "required": false,
        "description": "Вид лейбла внутри / снаружи"
      },
      {
        "name": "wrapperRef",
        "type": "Ref<HTMLDivElement>",
        "required": false,
        "description": "Ref для обертки input"
      },
      {
        "name": "leftAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот слева"
      },
      {
        "name": "rightAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот справа"
      },
      {
        "name": "leftAddonsProps",
        "type": "HTMLAttributes<HTMLDivElement>",
        "required": false,
        "description": "Свойства для обертки левых аддонов"
      },
      {
        "name": "rightAddonsProps",
        "type": "HTMLAttributes<HTMLDivElement>",
        "required": false,
        "description": "Свойства для обертки правых аддонов"
      },
      {
        "name": "bottomAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот под инпутом"
      },
      {
        "name": "fieldClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для поля"
      },
      {
        "name": "inputClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс инпута"
      },
      {
        "name": "labelClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для лейбла"
      },
      {
        "name": "addonsClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для аддонов"
      },
      {
        "name": "focusedClassName",
        "type": "string",
        "required": false,
        "description": "Класс, который будет установлен при фокусе"
      },
      {
        "name": "filledClassName",
        "type": "string",
        "required": false,
        "description": "Класс, который будет установлен, если в поле есть значение"
      },
      {
        "name": "onClear",
        "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик нажатия на кнопку очистки"
      },
      {
        "name": "disableUserInput",
        "type": "boolean",
        "required": false,
        "description": "Запрещает ввод с клавиатуры"
      },
      {
        "name": "breakpoint",
        "type": "number",
        "required": false,
        "defaultValue": "1024",
        "description": "Контрольная точка, с нее начинается desktop версия"
      },
      {
        "name": "client",
        "type": "\"desktop\" | \"mobile\"",
        "required": false,
        "description": "Версия, которая будет использоваться при серверном рендеринге"
      },
      {
        "name": "defaultMatchMediaValue",
        "type": "boolean | (() => boolean)",
        "required": false,
        "description": "Значение по-умолчанию для хука useMatchMedia\n@deprecated Используйте client"
      },
      {
        "name": "ref",
        "type": "Ref<HTMLInputElement>",
        "required": false,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
      },
      {
        "name": "key",
        "type": "Key | null",
        "required": false,
        "description": ""
      }
    ]
  },
  "Steppers": {
    "description": "",
    "props": [
      {
        "name": "value",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "min",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "max",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "focused",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "onIncrement",
        "type": "() => void",
        "required": true,
        "description": ""
      },
      {
        "name": "onDecrement",
        "type": "() => void",
        "required": true,
        "description": ""
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "colors",
        "type": "\"default\" | \"inverted\"",
        "required": true,
        "description": ""
      },
      {
        "name": "size",
        "type": "\"s\" | \"m\" | \"l\" | \"xl\" | 40 | 48 | 56 | 64 | 72",
        "required": false,
        "defaultValue": 48,
        "description": ""
      }
    ]
  },
  "NumberInputDesktop": {
    "description": "",
    "props": [
      {
        "name": "size",
        "type": "\"s\" | \"m\" | \"l\" | \"xl\" | 40 | 48 | 56 | 64 | 72",
        "required": false,
        "description": "Размер компонента\n@description s, m, l, xl deprecated, используйте вместо них 48, 56, 64, 72 соответственно"
      },
      {
        "name": "value",
        "type": "string | number | null",
        "required": false,
        "description": "Значение поля ввода"
      },
      {
        "name": "defaultValue",
        "type": "string | number | null",
        "required": false,
        "description": "Значение по-умолчанию"
      },
      {
        "name": "onChange",
        "type": "((e: ChangeEvent<HTMLInputElement> | null, payload: { value: number | null; }) => void)",
        "required": false,
        "description": "Обработчик события изменения значения"
      },
      {
        "name": "onClick",
        "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик клика по полю"
      },
      {
        "name": "onMouseDown",
        "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик MouseDown по полю"
      },
      {
        "name": "accept",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "alt",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "autoComplete",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "capture",
        "type": "boolean | \"user\" | \"environment\"",
        "required": false,
        "description": ""
      },
      {
        "name": "checked",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "\"\" | \"anonymous\" | \"use-credentials\"",
        "required": false,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "height",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "list",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "max",
        "type": "number",
        "required": false,
        "defaultValue": "Number.MAX_SAFE_INTEGER",
        "description": "Максимальное значение"
      },
      {
        "name": "maxLength",
        "type": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "min",
        "type": "number",
        "required": false,
        "defaultValue": "Number.MIN_SAFE_INTEGER",
        "description": "Минимальное значение"
      },
      {
        "name": "minLength",
        "type": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "multiple",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "pattern",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "placeholder",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "readOnly",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "required",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "src",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "step",
        "type": "number",
        "required": false,
        "description": "Шаг инкремента/декремента. Используйте только целочисленные значения"
      },
      {
        "name": "width",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Растягивает компонент на ширину контейнера"
      },
      {
        "name": "clear",
        "type": "boolean",
        "required": false,
        "description": "Крестик для очистки поля"
      },
      {
        "name": "colors",
        "type": "\"default\" | \"inverted\"",
        "required": false,
        "description": "Набор цветов для компонента"
      },
      {
        "name": "error",
        "type": "ReactNode",
        "required": false,
        "description": "Отображение ошибки"
      },
      {
        "name": "success",
        "type": "boolean",
        "required": false,
        "description": "Отображение иконки успеха"
      },
      {
        "name": "hint",
        "type": "ReactNode",
        "required": false,
        "description": "Текст подсказки"
      },
      {
        "name": "label",
        "type": "ReactNode",
        "required": false,
        "description": "Лейбл компонента"
      },
      {
        "name": "labelView",
        "type": "\"inner\" | \"outer\"",
        "required": false,
        "description": "Вид лейбла внутри / снаружи"
      },
      {
        "name": "wrapperRef",
        "type": "Ref<HTMLDivElement>",
        "required": false,
        "description": "Ref для обертки input"
      },
      {
        "name": "leftAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот слева"
      },
      {
        "name": "rightAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот справа"
      },
      {
        "name": "leftAddonsProps",
        "type": "HTMLAttributes<HTMLDivElement>",
        "required": false,
        "description": "Свойства для обертки левых аддонов"
      },
      {
        "name": "rightAddonsProps",
        "type": "HTMLAttributes<HTMLDivElement>",
        "required": false,
        "description": "Свойства для обертки правых аддонов"
      },
      {
        "name": "bottomAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот под инпутом"
      },
      {
        "name": "fieldClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для поля"
      },
      {
        "name": "inputClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс инпута"
      },
      {
        "name": "labelClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для лейбла"
      },
      {
        "name": "addonsClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для аддонов"
      },
      {
        "name": "focusedClassName",
        "type": "string",
        "required": false,
        "description": "Класс, который будет установлен при фокусе"
      },
      {
        "name": "filledClassName",
        "type": "string",
        "required": false,
        "description": "Класс, который будет установлен, если в поле есть значение"
      },
      {
        "name": "onClear",
        "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик нажатия на кнопку очистки"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования.\nДля кнопки инкремента используется модификатор -increment-button, декремента -decrement-button"
      },
      {
        "name": "disableUserInput",
        "type": "boolean",
        "required": false,
        "description": "Запрещает ввод с клавиатуры"
      },
      {
        "name": "client",
        "type": "\"desktop\" | \"mobile\"",
        "required": false,
        "description": "Версия, которая будет использоваться при серверном рендеринге"
      },
      {
        "name": "defaultMatchMediaValue",
        "type": "boolean | (() => boolean)",
        "required": false,
        "description": "Значение по-умолчанию для хука useMatchMedia\n@deprecated Используйте client"
      },
      {
        "name": "separator",
        "type": "\".\" | \",\"",
        "required": false,
        "description": "Разделитель ',' или '.'"
      },
      {
        "name": "fractionLength",
        "type": "number",
        "required": false,
        "description": "Количество символов после разделителя\nЕсли указан проп step, то всегда 0"
      },
      {
        "name": "ref",
        "type": "Ref<HTMLInputElement>",
        "required": false,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
      },
      {
        "name": "key",
        "type": "Key | null",
        "required": false,
        "description": ""
      }
    ]
  },
  "NumberInputMobile": {
    "description": "",
    "props": [
      {
        "name": "size",
        "type": "\"s\" | \"m\" | \"l\" | \"xl\" | 40 | 48 | 56 | 64 | 72",
        "required": false,
        "description": "Размер компонента\n@description s, m, l, xl deprecated, используйте вместо них 48, 56, 64, 72 соответственно"
      },
      {
        "name": "value",
        "type": "string | number | null",
        "required": false,
        "description": "Значение поля ввода"
      },
      {
        "name": "defaultValue",
        "type": "string | number | null",
        "required": false,
        "description": "Значение по-умолчанию"
      },
      {
        "name": "onChange",
        "type": "((e: ChangeEvent<HTMLInputElement> | null, payload: { value: number | null; }) => void)",
        "required": false,
        "description": "Обработчик события изменения значения"
      },
      {
        "name": "onClick",
        "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик клика по полю"
      },
      {
        "name": "onMouseDown",
        "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик MouseDown по полю"
      },
      {
        "name": "accept",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "alt",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "autoComplete",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "capture",
        "type": "boolean | \"user\" | \"environment\"",
        "required": false,
        "description": ""
      },
      {
        "name": "checked",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "\"\" | \"anonymous\" | \"use-credentials\"",
        "required": false,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "height",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "list",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "max",
        "type": "number",
        "required": false,
        "defaultValue": "Number.MAX_SAFE_INTEGER",
        "description": "Максимальное значение"
      },
      {
        "name": "maxLength",
        "type": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "min",
        "type": "number",
        "required": false,
        "defaultValue": "Number.MIN_SAFE_INTEGER",
        "description": "Минимальное значение"
      },
      {
        "name": "minLength",
        "type": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "multiple",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "pattern",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "placeholder",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "readOnly",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "required",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "src",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "step",
        "type": "number",
        "required": false,
        "description": "Шаг инкремента/декремента. Используйте только целочисленные значения"
      },
      {
        "name": "width",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Растягивает компонент на ширину контейнера"
      },
      {
        "name": "clear",
        "type": "boolean",
        "required": false,
        "description": "Крестик для очистки поля"
      },
      {
        "name": "colors",
        "type": "\"default\" | \"inverted\"",
        "required": false,
        "description": "Набор цветов для компонента"
      },
      {
        "name": "error",
        "type": "ReactNode",
        "required": false,
        "description": "Отображение ошибки"
      },
      {
        "name": "success",
        "type": "boolean",
        "required": false,
        "description": "Отображение иконки успеха"
      },
      {
        "name": "hint",
        "type": "ReactNode",
        "required": false,
        "description": "Текст подсказки"
      },
      {
        "name": "label",
        "type": "ReactNode",
        "required": false,
        "description": "Лейбл компонента"
      },
      {
        "name": "labelView",
        "type": "\"inner\" | \"outer\"",
        "required": false,
        "description": "Вид лейбла внутри / снаружи"
      },
      {
        "name": "wrapperRef",
        "type": "Ref<HTMLDivElement>",
        "required": false,
        "description": "Ref для обертки input"
      },
      {
        "name": "leftAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот слева"
      },
      {
        "name": "rightAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот справа"
      },
      {
        "name": "leftAddonsProps",
        "type": "HTMLAttributes<HTMLDivElement>",
        "required": false,
        "description": "Свойства для обертки левых аддонов"
      },
      {
        "name": "rightAddonsProps",
        "type": "HTMLAttributes<HTMLDivElement>",
        "required": false,
        "description": "Свойства для обертки правых аддонов"
      },
      {
        "name": "bottomAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот под инпутом"
      },
      {
        "name": "fieldClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для поля"
      },
      {
        "name": "inputClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс инпута"
      },
      {
        "name": "labelClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для лейбла"
      },
      {
        "name": "addonsClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для аддонов"
      },
      {
        "name": "focusedClassName",
        "type": "string",
        "required": false,
        "description": "Класс, который будет установлен при фокусе"
      },
      {
        "name": "filledClassName",
        "type": "string",
        "required": false,
        "description": "Класс, который будет установлен, если в поле есть значение"
      },
      {
        "name": "onClear",
        "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик нажатия на кнопку очистки"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования.\nДля кнопки инкремента используется модификатор -increment-button, декремента -decrement-button"
      },
      {
        "name": "disableUserInput",
        "type": "boolean",
        "required": false,
        "description": "Запрещает ввод с клавиатуры"
      },
      {
        "name": "client",
        "type": "\"desktop\" | \"mobile\"",
        "required": false,
        "description": "Версия, которая будет использоваться при серверном рендеринге"
      },
      {
        "name": "defaultMatchMediaValue",
        "type": "boolean | (() => boolean)",
        "required": false,
        "description": "Значение по-умолчанию для хука useMatchMedia\n@deprecated Используйте client"
      },
      {
        "name": "separator",
        "type": "\".\" | \",\"",
        "required": false,
        "description": "Разделитель ',' или '.'"
      },
      {
        "name": "fractionLength",
        "type": "number",
        "required": false,
        "description": "Количество символов после разделителя\nЕсли указан проп step, то всегда 0"
      },
      {
        "name": "ref",
        "type": "Ref<HTMLInputElement>",
        "required": false,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
      },
      {
        "name": "key",
        "type": "Key | null",
        "required": false,
        "description": ""
      }
    ]
  }
}