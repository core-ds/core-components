{
  "ToastPlate": {
    "description": "",
    "props": [
      {
        "name": "titleClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для заголовка"
      },
      {
        "name": "contentClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для контентной области"
      },
      {
        "name": "actionSectionClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для области с кнопкой действия"
      },
      {
        "name": "badge",
        "type": "unsafe_BadgeProps | StatusBadgeViews",
        "required": false,
        "description": "Вид бэйджа"
      },
      {
        "name": "leftAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот слева, заменяет стандартную иконку"
      },
      {
        "name": "actionButton",
        "type": "ReactNode",
        "required": false,
        "description": "Кнопка действия"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования"
      },
      {
        "name": "hasCloser",
        "type": "boolean",
        "required": false,
        "description": "Управляет отображением кнопки закрытия уведомления"
      },
      {
        "name": "closerWrapperClassName",
        "type": "string",
        "required": false,
        "description": "Доп. класс враппера кнопки \"закрыть\"."
      },
      {
        "name": "closerClassName",
        "type": "string",
        "required": false,
        "description": "Доп. класс кнопки \"закрыть\"."
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Растягивает компонент на ширину контейнера"
      },
      {
        "name": "onClose",
        "type": "((event?: MouseEvent<HTMLButtonElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик клика по крестику"
      },
      {
        "name": "getBadgeIcons",
        "type": "Partial<Record<StatusBadgeViews, Partial<Record<StatusBadgeSizes, StatusBadgeIcon>>>>",
        "required": false,
        "description": "Функция, с помощью которой можно переопределить иконки в StatusBadge"
      },
      {
        "name": "colors",
        "type": "\"default\" | \"inverted\"",
        "required": false,
        "description": "Набор цветов для компонента"
      },
      {
        "name": "bottomButtonPosition",
        "type": "boolean",
        "required": false,
        "description": "Положение кнопки под заголовком компонента"
      },
      {
        "name": "breakpoint",
        "type": "number",
        "required": false,
        "defaultValue": "1024",
        "description": "Контрольная точка, с нее начинается desktop версия"
      },
      {
        "name": "client",
        "type": "\"desktop\" | \"mobile\"",
        "required": false,
        "description": "Версия, которая будет использоваться при серверном рендеринге"
      },
      {
        "name": "defaultMatchMediaValue",
        "type": "boolean | (() => boolean)",
        "required": false,
        "defaultValue": "client === undefined ? undefined : client === 'desktop'",
        "description": "Значение по-умолчанию для хука useMatchMedia\n@deprecated Используйте client"
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "required": false,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
      },
      {
        "name": "key",
        "type": "Key | null",
        "required": false,
        "description": ""
      }
    ]
  },
  "BaseToastPlate": {
    "description": "",
    "props": [
      {
        "name": "titleClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для заголовка"
      },
      {
        "name": "contentClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для контентной области"
      },
      {
        "name": "actionSectionClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для области с кнопкой действия"
      },
      {
        "name": "badge",
        "type": "unsafe_BadgeProps | StatusBadgeViews",
        "required": false,
        "description": "Вид бэйджа"
      },
      {
        "name": "leftAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот слева, заменяет стандартную иконку"
      },
      {
        "name": "actionButton",
        "type": "ReactNode",
        "required": false,
        "description": "Кнопка действия"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования"
      },
      {
        "name": "hasCloser",
        "type": "boolean",
        "required": false,
        "description": "Управляет отображением кнопки закрытия уведомления"
      },
      {
        "name": "closerWrapperClassName",
        "type": "string",
        "required": false,
        "description": "Доп. класс враппера кнопки \"закрыть\"."
      },
      {
        "name": "closerClassName",
        "type": "string",
        "required": false,
        "description": "Доп. класс кнопки \"закрыть\"."
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Растягивает компонент на ширину контейнера"
      },
      {
        "name": "onClose",
        "type": "((event?: MouseEvent<HTMLButtonElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик клика по крестику"
      },
      {
        "name": "getBadgeIcons",
        "type": "Partial<Record<StatusBadgeViews, Partial<Record<StatusBadgeSizes, StatusBadgeIcon>>>>",
        "required": false,
        "description": "Функция, с помощью которой можно переопределить иконки в StatusBadge"
      },
      {
        "name": "colors",
        "type": "\"default\" | \"inverted\"",
        "required": false,
        "defaultValue": "default",
        "description": "Набор цветов для компонента"
      },
      {
        "name": "bottomButtonPosition",
        "type": "boolean",
        "required": false,
        "defaultValue": false,
        "description": "Положение кнопки под заголовком компонента"
      },
      {
        "name": "styles",
        "type": "{ [key: string]: string; }",
        "required": false,
        "defaultValue": "{}",
        "description": "Основные стили компонента."
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "required": false,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
      },
      {
        "name": "key",
        "type": "Key | null",
        "required": false,
        "description": ""
      }
    ]
  },
  "ToastPlateDesktop": {
    "description": "",
    "props": [
      {
        "name": "titleClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для заголовка"
      },
      {
        "name": "contentClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для контентной области"
      },
      {
        "name": "actionSectionClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для области с кнопкой действия"
      },
      {
        "name": "badge",
        "type": "unsafe_BadgeProps | StatusBadgeViews",
        "required": false,
        "description": "Вид бэйджа"
      },
      {
        "name": "leftAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот слева, заменяет стандартную иконку"
      },
      {
        "name": "actionButton",
        "type": "ReactNode",
        "required": false,
        "description": "Кнопка действия"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования"
      },
      {
        "name": "hasCloser",
        "type": "boolean",
        "required": false,
        "description": "Управляет отображением кнопки закрытия уведомления"
      },
      {
        "name": "closerWrapperClassName",
        "type": "string",
        "required": false,
        "description": "Доп. класс враппера кнопки \"закрыть\"."
      },
      {
        "name": "closerClassName",
        "type": "string",
        "required": false,
        "description": "Доп. класс кнопки \"закрыть\"."
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Растягивает компонент на ширину контейнера"
      },
      {
        "name": "onClose",
        "type": "((event?: MouseEvent<HTMLButtonElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик клика по крестику"
      },
      {
        "name": "getBadgeIcons",
        "type": "Partial<Record<StatusBadgeViews, Partial<Record<StatusBadgeSizes, StatusBadgeIcon>>>>",
        "required": false,
        "description": "Функция, с помощью которой можно переопределить иконки в StatusBadge"
      },
      {
        "name": "colors",
        "type": "\"default\" | \"inverted\"",
        "required": false,
        "description": "Набор цветов для компонента"
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "required": false,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
      },
      {
        "name": "key",
        "type": "Key | null",
        "required": false,
        "description": ""
      }
    ]
  },
  "ToastPlateMobile": {
    "description": "",
    "props": [
      {
        "name": "titleClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для заголовка"
      },
      {
        "name": "contentClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для контентной области"
      },
      {
        "name": "actionSectionClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для области с кнопкой действия"
      },
      {
        "name": "badge",
        "type": "unsafe_BadgeProps | StatusBadgeViews",
        "required": false,
        "description": "Вид бэйджа"
      },
      {
        "name": "leftAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот слева, заменяет стандартную иконку"
      },
      {
        "name": "actionButton",
        "type": "ReactNode",
        "required": false,
        "description": "Кнопка действия"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования"
      },
      {
        "name": "hasCloser",
        "type": "boolean",
        "required": false,
        "description": "Управляет отображением кнопки закрытия уведомления"
      },
      {
        "name": "closerWrapperClassName",
        "type": "string",
        "required": false,
        "description": "Доп. класс враппера кнопки \"закрыть\"."
      },
      {
        "name": "closerClassName",
        "type": "string",
        "required": false,
        "description": "Доп. класс кнопки \"закрыть\"."
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Растягивает компонент на ширину контейнера"
      },
      {
        "name": "onClose",
        "type": "((event?: MouseEvent<HTMLButtonElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик клика по крестику"
      },
      {
        "name": "getBadgeIcons",
        "type": "Partial<Record<StatusBadgeViews, Partial<Record<StatusBadgeSizes, StatusBadgeIcon>>>>",
        "required": false,
        "description": "Функция, с помощью которой можно переопределить иконки в StatusBadge"
      },
      {
        "name": "colors",
        "type": "\"default\" | \"inverted\"",
        "required": false,
        "description": "Набор цветов для компонента"
      },
      {
        "name": "bottomButtonPosition",
        "type": "boolean",
        "required": false,
        "description": "Положение кнопки под заголовком компонента"
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "required": false,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
      },
      {
        "name": "key",
        "type": "Key | null",
        "required": false,
        "description": ""
      }
    ]
  }
}