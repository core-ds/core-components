{
  "TooltipResponsive": {
    "description": "",
    "props": [
      {
        "name": "content",
        "type": "ReactNode",
        "required": true,
        "description": "Контент тултипа"
      },
      {
        "name": "position",
        "type": "Position",
        "required": false,
        "description": "Позиционирование тултипа"
      },
      {
        "name": "onOpenDelay",
        "type": "number",
        "required": false,
        "description": "Задержка перед открытием тултипа"
      },
      {
        "name": "onCloseDelay",
        "type": "number",
        "required": false,
        "description": "Задержка перед закрытием тултипа"
      },
      {
        "name": "trigger",
        "type": "Trigger",
        "required": false,
        "description": "Событие, по которому происходит открытие тултипа"
      },
      {
        "name": "open",
        "type": "boolean",
        "required": false,
        "description": "Если `true`, то тултип будет открыт"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования"
      },
      {
        "name": "children",
        "type": "ReactElement<any, string | JSXElementConstructor<any>>",
        "required": true,
        "description": "Дочерние элементы тултипа.\nПри срабатывании событий на них, тултип будет открываться"
      },
      {
        "name": "offset",
        "type": "[number, number]",
        "required": false,
        "description": "Смещение тултипа"
      },
      {
        "name": "getPortalContainer",
        "type": "(() => HTMLElement)",
        "required": false,
        "description": "Функция, возвращающая контейнер, в который будет рендериться тултип"
      },
      {
        "name": "arrowClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для стрелочки"
      },
      {
        "name": "contentClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для контента"
      },
      {
        "name": "popoverClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для поповера"
      },
      {
        "name": "targetClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для обертки над дочерними элементами"
      },
      {
        "name": "view",
        "type": "\"tooltip\" | \"hint\"",
        "required": false,
        "description": "Вид тултипа"
      },
      {
        "name": "updatePopover",
        "type": "MutableRefObject<(() => void)>",
        "required": false,
        "description": "Хранит функцию, с помощью которой можно обновить положение компонента"
      },
      {
        "name": "zIndex",
        "type": "number",
        "required": false,
        "description": "z-index компонента"
      },
      {
        "name": "targetRef",
        "type": "MutableRefObject<HTMLElement | null>",
        "required": false,
        "description": "Реф для обертки над дочерними элементами"
      },
      {
        "name": "fallbackPlacements",
        "type": "Position[]",
        "required": false,
        "description": "Если тултип не помещается в переданной позиции (position), он попробует открыться в другой позиции,\nпо очереди для каждой позиции из этого списка.\nЕсли не передавать, то тултип открывается в противоположном направлении от переданного position."
      },
      {
        "name": "preventOverflow",
        "type": "boolean",
        "required": false,
        "description": "Запрещает тултипу менять свою позицию, если он не влезает в видимую область."
      },
      {
        "name": "availableHeight",
        "type": "boolean | (() => Element | null)",
        "required": false,
        "description": "Позволяет тултипу подствраивать свою высоту под границы экрана, если из-за величины контента он выходит за рамки видимой области экрана"
      },
      {
        "name": "anchor",
        "type": "RefElement",
        "required": false,
        "description": "Элемент, относительно которого будет позиционировать тултип."
      },
      {
        "name": "colors",
        "type": "\"default\" | \"inverted\"",
        "required": false,
        "description": "Набор цветов для компонента"
      },
      {
        "name": "useAnchorWidth",
        "type": "boolean",
        "required": false,
        "description": "Использовать ширину родительского элемента"
      },
      {
        "name": "withTransition",
        "type": "boolean",
        "required": false,
        "description": "Показывать тултип с анимацией"
      },
      {
        "name": "targetTag",
        "type": "\"div\" | \"span\"",
        "required": false,
        "defaultValue": "div",
        "description": "Тэг для target обертки"
      },
      {
        "name": "onTargetClick",
        "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик клика по целевому элементу\nСобытие всплытия останавливается до вызова этого обработчика"
      },
      {
        "name": "onOpen",
        "type": "((event?: MouseEvent<HTMLElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик открытия"
      },
      {
        "name": "onClose",
        "type": "((event?: MouseEvent<HTMLElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик закрытия"
      },
      {
        "name": "actionButtonTitle",
        "type": "string",
        "required": false,
        "description": "Заголовок кнопки в футере"
      },
      {
        "name": "hasCloser",
        "type": "boolean",
        "required": false,
        "description": "Наличие компонента крестика\n@deprecated (используйте bottomSheetProps.hasCloser)"
      },
      {
        "name": "bottomSheetProps",
        "type": "Partial<BottomSheetProps>",
        "required": false,
        "description": "Дополнительные пропсы компонента BottomSheet"
      },
      {
        "name": "breakpoint",
        "type": "number",
        "required": false,
        "defaultValue": "1024",
        "description": "Контрольная точка, с нее начинается desktop версия"
      },
      {
        "name": "client",
        "type": "\"desktop\" | \"mobile\"",
        "required": false,
        "description": "Версия, которая будет использоваться при серверном рендеринге"
      },
      {
        "name": "defaultMatchMediaValue",
        "type": "boolean | (() => boolean)",
        "required": false,
        "defaultValue": "client === undefined ? undefined : client === 'desktop'",
        "description": "Значение по-умолчанию для хука useMatchMedia\n@deprecated Используйте client"
      }
    ]
  },
  "TooltipDesktop": {
    "description": "",
    "props": [
      {
        "name": "content",
        "type": "ReactNode",
        "required": true,
        "description": "Контент тултипа"
      },
      {
        "name": "position",
        "type": "Position",
        "required": false,
        "description": "Позиционирование тултипа"
      },
      {
        "name": "onOpenDelay",
        "type": "number",
        "required": false,
        "defaultValue": 300,
        "description": "Задержка перед открытием тултипа"
      },
      {
        "name": "onCloseDelay",
        "type": "number",
        "required": false,
        "defaultValue": 300,
        "description": "Задержка перед закрытием тултипа"
      },
      {
        "name": "onOpen",
        "type": "(() => void)",
        "required": false,
        "description": "Обработчик открытия тултипа"
      },
      {
        "name": "onClose",
        "type": "(() => void)",
        "required": false,
        "description": "Обработчик закрытия тултипа"
      },
      {
        "name": "trigger",
        "type": "Trigger",
        "required": false,
        "defaultValue": "hover",
        "description": "Событие, по которому происходит открытие тултипа"
      },
      {
        "name": "open",
        "type": "boolean",
        "required": false,
        "description": "Если `true`, то тултип будет открыт"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования"
      },
      {
        "name": "children",
        "type": "ReactElement<any, string | JSXElementConstructor<any>>",
        "required": true,
        "description": "Дочерние элементы тултипа.\nПри срабатывании событий на них, тултип будет открываться"
      },
      {
        "name": "offset",
        "type": "[number, number]",
        "required": false,
        "defaultValue": "[0, 16]",
        "description": "Смещение тултипа"
      },
      {
        "name": "getPortalContainer",
        "type": "(() => HTMLElement)",
        "required": false,
        "description": "Функция, возвращающая контейнер, в который будет рендериться тултип"
      },
      {
        "name": "arrowClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для стрелочки"
      },
      {
        "name": "contentClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для контента"
      },
      {
        "name": "popoverClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для поповера"
      },
      {
        "name": "targetClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для обертки над дочерними элементами"
      },
      {
        "name": "view",
        "type": "\"tooltip\" | \"hint\"",
        "required": false,
        "defaultValue": "tooltip",
        "description": "Вид тултипа"
      },
      {
        "name": "updatePopover",
        "type": "MutableRefObject<(() => void)>",
        "required": false,
        "description": "Хранит функцию, с помощью которой можно обновить положение компонента"
      },
      {
        "name": "zIndex",
        "type": "number",
        "required": false,
        "description": "z-index компонента"
      },
      {
        "name": "targetRef",
        "type": "MutableRefObject<HTMLElement | null>",
        "required": false,
        "defaultValue": null,
        "description": "Реф для обертки над дочерними элементами"
      },
      {
        "name": "fallbackPlacements",
        "type": "Position[]",
        "required": false,
        "description": "Если тултип не помещается в переданной позиции (position), он попробует открыться в другой позиции,\nпо очереди для каждой позиции из этого списка.\nЕсли не передавать, то тултип открывается в противоположном направлении от переданного position."
      },
      {
        "name": "preventOverflow",
        "type": "boolean",
        "required": false,
        "defaultValue": true,
        "description": "Запрещает тултипу менять свою позицию, если он не влезает в видимую область."
      },
      {
        "name": "availableHeight",
        "type": "boolean | (() => Element | null)",
        "required": false,
        "defaultValue": false,
        "description": "Позволяет тултипу подствраивать свою высоту под границы экрана, если из-за величины контента он выходит за рамки видимой области экрана"
      },
      {
        "name": "anchor",
        "type": "RefElement",
        "required": false,
        "defaultValue": null,
        "description": "Элемент, относительно которого будет позиционировать тултип."
      },
      {
        "name": "colors",
        "type": "\"default\" | \"inverted\"",
        "required": false,
        "defaultValue": "default",
        "description": "Набор цветов для компонента"
      },
      {
        "name": "useAnchorWidth",
        "type": "boolean",
        "required": false,
        "description": "Использовать ширину родительского элемента"
      },
      {
        "name": "withTransition",
        "type": "boolean",
        "required": false,
        "defaultValue": true,
        "description": "Показывать тултип с анимацией"
      },
      {
        "name": "targetTag",
        "type": "\"div\" | \"span\"",
        "required": false,
        "defaultValue": "div",
        "description": "Тэг для target обертки"
      },
      {
        "name": "onTargetClick",
        "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик клика по целевому элементу\nСобытие всплытия останавливается до вызова этого обработчика"
      }
    ]
  },
  "TooltipMobile": {
    "description": "",
    "props": [
      {
        "name": "onClose",
        "type": "(() => void)",
        "required": false,
        "description": "Обработчик закрытия"
      },
      {
        "name": "open",
        "type": "boolean",
        "required": false,
        "description": "Управление видимостью"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования.\nДля заголовка используется модификатор -header\nИдентификатор для систем автоматизированного тестирования"
      },
      {
        "name": "children",
        "type": "ReactNode & ReactElement<any, string | JSXElementConstructor<any>>",
        "required": false,
        "description": "Контент\nДочерние элементы тултипа.\nПри срабатывании событий на них, тултип будет открываться"
      },
      {
        "name": "contentClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс"
      },
      {
        "name": "zIndex",
        "type": "number",
        "required": false,
        "description": "z-index компонента"
      },
      {
        "name": "hasCloser",
        "type": "boolean",
        "required": false,
        "description": "Наличие компонента крестика"
      },
      {
        "name": "adjustContainerHeight",
        "type": "((height: number) => number)",
        "required": false,
        "description": "Метод, позволяющий донастраивать высоту контейнера для BottomSheet, например с учётом safe-area"
      },
      {
        "name": "title",
        "type": "ReactNode",
        "required": false,
        "description": "Заголовок"
      },
      {
        "name": "titleSize",
        "type": "\"default\" | \"compact\"",
        "required": false,
        "description": "Размер заголовка"
      },
      {
        "name": "subtitle",
        "type": "ReactNode",
        "required": false,
        "description": "Подзаголовок."
      },
      {
        "name": "container",
        "type": "(() => Element)",
        "required": false,
        "description": "Нода, компонент или функция возвращающая их\n\nКонтейнер к которому будут добавляться порталы"
      },
      {
        "name": "usePortal",
        "type": "boolean",
        "required": false,
        "description": "Рендерить ли в контейнер через портал."
      },
      {
        "name": "className",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс"
      },
      {
        "name": "containerProps",
        "type": "HTMLAttributes<HTMLDivElement>",
        "required": false,
        "description": "Дополнительные пропсы на контейнер."
      },
      {
        "name": "containerClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс"
      },
      {
        "name": "backgroundColor",
        "type": "\"primary\" | \"secondary\"",
        "required": false,
        "description": "Цвет фона"
      },
      {
        "name": "headerClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс шапки"
      },
      {
        "name": "footerClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс футера"
      },
      {
        "name": "addonClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для аддонов"
      },
      {
        "name": "closerClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для компонента крестика"
      },
      {
        "name": "backerClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для компонента стрелки назад"
      },
      {
        "name": "modalClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для компонента модального окна"
      },
      {
        "name": "modalWrapperClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для обертки модального окна"
      },
      {
        "name": "showSwipeMarker",
        "type": "boolean",
        "required": false,
        "defaultValue": "true",
        "description": "Дефолтный маркер"
      },
      {
        "name": "swipeableMarkerClassName",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "swipeableMarker",
        "type": "ReactElement<any, string | JSXElementConstructor<any>>",
        "required": false,
        "description": "Кастомный маркер"
      },
      {
        "name": "transitionProps",
        "type": "Partial<TransitionProps<undefined>>",
        "required": false,
        "description": "TransitionProps, прокидываются в компонент CSSTransitionProps."
      },
      {
        "name": "swipeable",
        "type": "boolean",
        "required": false,
        "defaultValue": "true",
        "description": "Будет ли свайпаться шторка"
      },
      {
        "name": "swipeableContent",
        "type": "boolean",
        "required": false,
        "description": "Будет ли свайпаться контент"
      },
      {
        "name": "swipeThreshold",
        "type": "number",
        "required": false,
        "description": "Порог свайпа"
      },
      {
        "name": "leftAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот слева"
      },
      {
        "name": "rightAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот справа"
      },
      {
        "name": "bottomAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот снизу"
      },
      {
        "name": "hasBacker",
        "type": "boolean",
        "required": false,
        "description": "Наличие компонента стрелки назад"
      },
      {
        "name": "backButtonProps",
        "type": "Omit<BackArrowAddonProps, \"view\" | \"textOpacity\" | \"onClick\">",
        "required": false,
        "description": "Дополнительные пропсы для кнопки \"Назад\""
      },
      {
        "name": "titleAlign",
        "type": "BottomSheetTitleAlign",
        "required": false,
        "description": "Выравнивание заголовка"
      },
      {
        "name": "stickyHeader",
        "type": "boolean",
        "required": false,
        "description": "Фиксирует шапку"
      },
      {
        "name": "stickyFooter",
        "type": "boolean",
        "required": false,
        "description": "Фиксирует футер"
      },
      {
        "name": "initialHeight",
        "type": "\"default\" | \"full\"",
        "required": false,
        "description": "Высота шторки"
      },
      {
        "name": "hideOverlay",
        "type": "boolean",
        "required": false,
        "description": "Будет ли виден оверлэй"
      },
      {
        "name": "hideHeader",
        "type": "boolean",
        "required": false,
        "description": "Будет ли видна шапка"
      },
      {
        "name": "trimTitle",
        "type": "boolean",
        "required": false,
        "description": "Будет ли обрезан заголовок"
      },
      {
        "name": "disableOverlayClick",
        "type": "boolean",
        "required": false,
        "description": "Запретить закрытие шторки кликом на оверлэй"
      },
      {
        "name": "disableBlockingScroll",
        "type": "boolean",
        "required": false,
        "description": "Отключает блокировку скролла при открытии модального окна"
      },
      {
        "name": "disableFocusLock",
        "type": "boolean",
        "required": false,
        "description": "Отключает ловушку фокуса"
      },
      {
        "name": "ignoreScreenChange",
        "type": "boolean",
        "required": false,
        "description": "@deprecated данный проп больше не используется, временно оставлен для обратной совместимости\nНе анимировать шторку при изменении размера вьюпорта"
      },
      {
        "name": "backdropProps",
        "type": "(Partial<BackdropProps> & Record<string, unknown>)",
        "required": false,
        "description": "Свойства для Бэкдропа"
      },
      {
        "name": "scrollableContainerRef",
        "type": "RefObject<HTMLElement>",
        "required": false,
        "description": "Реф на контейнер, в котором происходит скролл"
      },
      {
        "name": "bottomSheetInstanceRef",
        "type": "RefObject<{ scrollToArea: (idx: number) => void; }>",
        "required": false,
        "description": "Реф для управления компонентом."
      },
      {
        "name": "sheetContainerRef",
        "type": "RefObject<HTMLElement>",
        "required": false,
        "description": "Реф на контейнер, в котором находится шторка"
      },
      {
        "name": "magneticAreas",
        "type": "(string | number)[]",
        "required": false,
        "description": "Магнитные области видимой высоты шторки.\nМожно использовать значения в пикселях - 10(число), либо в процентах - 10%(строка).\nПо-умолчанию -[0, window.innerHeight - '24px']\nмассив должен состоять минимум из 2 элементов"
      },
      {
        "name": "initialActiveAreaIndex",
        "type": "number",
        "required": false,
        "description": "Индекс точки из magneticAreas, к которому нужно примагнититься при первом открытии шторки."
      },
      {
        "name": "scrollLocked",
        "type": "boolean",
        "required": false,
        "description": "Отключает скролл контентной области."
      },
      {
        "name": "hideScrollbar",
        "type": "boolean",
        "required": false,
        "description": "Скрыть скроллбар внутри шторки"
      },
      {
        "name": "headerOffset",
        "type": "number",
        "required": false,
        "description": "Верхний отступ шторки, если она открыта на максимальную высоту"
      },
      {
        "name": "keepMounted",
        "type": "boolean",
        "required": false,
        "description": "Содержимое bottom-sheet всегда в DOM"
      },
      {
        "name": "disableAutoFocus",
        "type": "boolean",
        "required": false,
        "description": "Отключает автоматический перевод фокуса на bottom-sheet при открытии"
      },
      {
        "name": "disableRestoreFocus",
        "type": "boolean",
        "required": false,
        "description": "Отключает восстановление фокуса на предыдущем элементе после закрытия bottom-sheet"
      },
      {
        "name": "disableEscapeKeyDown",
        "type": "boolean",
        "required": false,
        "description": "Отключает вызов `onClose` при нажатии Escape"
      },
      {
        "name": "onBack",
        "type": "(() => void)",
        "required": false,
        "description": "Обработчик нажатия на стрелку назад"
      },
      {
        "name": "onMagnetize",
        "type": "((index: number) => void)",
        "required": false,
        "description": "Вызывается в начале анимации притягивания к одной из `magneticAreas`"
      },
      {
        "name": "onMagnetizeEnd",
        "type": "((index: number) => void)",
        "required": false,
        "description": "Вызывается после окончания анимации притягивания"
      },
      {
        "name": "onOffsetChange",
        "type": "((offset: number, percent: number) => void)",
        "required": false,
        "description": "Вызывается при изменении положения шторки"
      },
      {
        "name": "onSwipeStart",
        "type": "((event: HandledEvents) => void)",
        "required": false,
        "description": "Вызывается в начале свайпа"
      },
      {
        "name": "onSwipeEnd",
        "type": "((event: HandledEvents | null) => void)",
        "required": false,
        "description": "Вызывается после окончания свайпа"
      },
      {
        "name": "iOSLock",
        "type": "boolean",
        "required": false,
        "description": "Блокирует скролл когда модальное окно открыто. Работает только на iOS"
      },
      {
        "name": "virtualKeyboard",
        "type": "boolean",
        "required": false,
        "description": "Учитывать высоту виртуальной клавиатуры"
      },
      {
        "name": "onOpen",
        "type": "(() => void)",
        "required": false,
        "description": "Обработчик открытия тултипа"
      },
      {
        "name": "content",
        "type": "ReactNode",
        "required": true,
        "description": "Контент тултипа"
      },
      {
        "name": "getPortalContainer",
        "type": "(() => HTMLElement)",
        "required": false,
        "description": "Функция, возвращающая контейнер, в который будет рендериться тултип"
      },
      {
        "name": "targetClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для обертки над дочерними элементами"
      },
      {
        "name": "targetRef",
        "type": "MutableRefObject<HTMLElement | null>",
        "required": false,
        "description": "Реф для обертки над дочерними элементами"
      },
      {
        "name": "targetTag",
        "type": "\"div\" | \"span\"",
        "required": false,
        "defaultValue": "div",
        "description": "Тэг для target обертки"
      },
      {
        "name": "onTargetClick",
        "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик клика по целевому элементу\nСобытие всплытия останавливается до вызова этого обработчика"
      },
      {
        "name": "actionButtonTitle",
        "type": "string",
        "required": false,
        "defaultValue": "Понятно",
        "description": "Заголовок кнопки в футере"
      }
    ]
  }
}