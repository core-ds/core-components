{
  "Popover": {
    "description": "",
    "props": [
      {
        "name": "open",
        "type": "boolean",
        "required": true,
        "description": "Управление состоянием поповера (открыт/закрыт)"
      },
      {
        "name": "anchorElement",
        "type": "RefElement",
        "required": true,
        "description": "Элемент, относительного которого появляется поповер"
      },
      {
        "name": "useAnchorWidth",
        "type": "boolean",
        "required": false,
        "description": "Использовать ширину родительского элемента"
      },
      {
        "name": "position",
        "type": "Position",
        "required": false,
        "defaultValue": "left",
        "description": "Позиционирование поповера"
      },
      {
        "name": "preventFlip",
        "type": "boolean",
        "required": false,
        "description": "Запрещает поповеру менять свою позицию.\nНапример, если места снизу недостаточно, то он все равно будет показан снизу"
      },
      {
        "name": "preventOverflow",
        "type": "boolean",
        "required": false,
        "defaultValue": true,
        "description": "Запрещает поповеру менять свою позицию, если он не влезает в видимую область."
      },
      {
        "name": "availableHeight",
        "type": "boolean | (() => Element | null)",
        "required": false,
        "defaultValue": false,
        "description": "Позволяет поповеру подствраивать свою высоту под границы экрана/элемента, если из-за величины контента он выходит за рамки области экрана/элемента"
      },
      {
        "name": "withArrow",
        "type": "boolean",
        "required": false,
        "defaultValue": false,
        "description": "Если `true`, будет отрисована стрелочка"
      },
      {
        "name": "offset",
        "type": "[number, number]",
        "required": false,
        "defaultValue": "[0, 0]",
        "description": "Смещение поповера.\nЕсли позиционирование top, bottom, то [x, y].\nЕсли позиционирование left, right то [y, x]."
      },
      {
        "name": "popperClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для поповера"
      },
      {
        "name": "arrowClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для стрелочки"
      },
      {
        "name": "getPortalContainer",
        "type": "(() => HTMLElement)",
        "required": false,
        "description": "Функция, возвращающая контейнер, в который будет рендериться поповер"
      },
      {
        "name": "transition",
        "type": "CSSTransitionProps<undefined>",
        "required": false,
        "defaultValue": "{\n    timeout: 150,\n}",
        "description": "CSSTransitionProps, прокидываются в компонент CSSTransitionProps."
      },
      {
        "name": "transitionDuration",
        "type": "TransitionDuration<string & {}>",
        "required": false,
        "defaultValue": "`${transition.timeout}ms`",
        "description": "Выставляет кастомное свойство transition-duration"
      },
      {
        "name": "withTransition",
        "type": "boolean",
        "required": false,
        "defaultValue": true,
        "description": "Рендерит компонент, обернутый в Transition"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования"
      },
      {
        "name": "update",
        "type": "MutableRefObject<(() => void)>",
        "required": false,
        "description": "Хранит функцию, с помощью которой можно обновить положение компонента"
      },
      {
        "name": "className",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс"
      },
      {
        "name": "zIndex",
        "type": "number",
        "required": false,
        "defaultValue": 50,
        "description": "z-index компонента"
      },
      {
        "name": "fallbackPlacements",
        "type": "Position[]",
        "required": false,
        "description": "Если поповер не помещается в переданной позиции (position), он попробует открыться в другой позиции,\nпо очереди для каждой позиции из этого списка.\nЕсли не передавать, то поповер открывается в противоположном направлении от переданного position."
      },
      {
        "name": "children",
        "type": "ReactNode",
        "required": false,
        "description": "Контент"
      },
      {
        "name": "scrollableContentClassName",
        "type": "string",
        "required": false,
        "description": "Класс для скролл контейнера"
      },
      {
        "name": "arrowToEdgeMinDistance",
        "type": "number",
        "required": false,
        "defaultValue": 24,
        "description": "Минимальное расстояние стрелки до края поповера"
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "required": false,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
      },
      {
        "name": "key",
        "type": "Key | null",
        "required": false,
        "description": ""
      }
    ]
  }
}