{
  "Collapse": {
    "description": "",
    "props": [
      {
        "name": "expanded",
        "type": "boolean",
        "required": false,
        "description": "Состояние компонента"
      },
      {
        "name": "collapsedLabel",
        "type": "string",
        "required": false,
        "description": "Текст ссылки в `expanded` состоянии"
      },
      {
        "name": "expandedLabel",
        "type": "string",
        "required": false,
        "description": "Текст ссылки в `collapsed` состоянии"
      },
      {
        "name": "children",
        "type": "ReactNode",
        "required": false,
        "description": "Дочерние элементы `Collapse`"
      },
      {
        "name": "className",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс обертки"
      },
      {
        "name": "expandedContentClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для скрываемого контента"
      },
      {
        "name": "id",
        "type": "string",
        "required": false,
        "description": "Идентификатор компонента в DOM"
      },
      {
        "name": "defaultExpanded",
        "type": "boolean",
        "required": false,
        "defaultValue": false,
        "description": "Начальное состояние uncontrolled компонента"
      },
      {
        "name": "onExpandedChange",
        "type": "((expanded: boolean) => void)",
        "required": false,
        "description": "Обработчик смены состояний `expanded/collapsed`"
      },
      {
        "name": "onTransitionEnd",
        "type": "((expanded: boolean) => void)",
        "required": false,
        "description": "Обработчик события завершения анимации"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования"
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "required": false,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
      },
      {
        "name": "key",
        "type": "Key | null",
        "required": false,
        "description": ""
      }
    ]
  }
}