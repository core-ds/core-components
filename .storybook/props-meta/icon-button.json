{
  "IconButton": {
    "description": "",
    "props": [
      {
        "name": "icon",
        "type": "ElementType<{ className?: string | undefined; }> | ReactElement<{ className?: string | undefined; }, string | JSXElementConstructor<any>>",
        "required": true,
        "description": "Компонент иконки"
      },
      {
        "name": "view",
        "type": "\"primary\" | \"secondary\" | \"transparent\" | \"tertiary\" | \"negative\"",
        "required": false,
        "defaultValue": "primary",
        "description": "Тип кнопки"
      },
      {
        "name": "size",
        "type": "\"s\" | \"xxs\" | \"xs\" | 24 | 32 | 40 | 48 | 56",
        "required": false,
        "defaultValue": 48,
        "description": "Размер компонента\n@description xxs, xs, s deprecated, используйте вместо них 24, 32, 40 соответственно"
      },
      {
        "name": "className",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс"
      },
      {
        "name": "transparentBg",
        "type": "boolean",
        "required": false,
        "defaultValue": false,
        "description": "Включает прозрачный фон"
      },
      {
        "name": "alignIcon",
        "type": "\"center\" | \"left\" | \"right\"",
        "required": false,
        "defaultValue": "center",
        "description": "Выравнивание иконки"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования"
      },
      {
        "name": "colors",
        "type": "\"default\" | \"inverted\"",
        "required": false,
        "defaultValue": "default",
        "description": "Набор цветов для компонента"
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "type",
        "type": "\"button\" | \"submit\" | \"reset\"",
        "required": false,
        "description": ""
      },
      {
        "name": "value",
        "type": "string | number | readonly string[]",
        "required": false,
        "description": ""
      },
      {
        "name": "Component",
        "type": "ElementType<any>",
        "required": false,
        "description": "Позволяет использовать кастомный компонент для кнопки (например Link из роутера)"
      },
      {
        "name": "href",
        "type": "string",
        "required": false,
        "description": "Выводит ссылку в виде кнопки"
      },
      {
        "name": "loading",
        "type": "boolean",
        "required": false,
        "defaultValue": "false",
        "description": "Показать лоадер"
      },
      {
        "name": "breakpoint",
        "type": "number",
        "required": false,
        "defaultValue": "1024",
        "description": "Контрольная точка, с нее начинается desktop версия"
      },
      {
        "name": "target",
        "type": "HTMLAttributeAnchorTarget",
        "required": false,
        "description": ""
      },
      {
        "name": "download",
        "type": "any",
        "required": false,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLButtonElement>",
        "required": false,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
      },
      {
        "name": "key",
        "type": "Key | null",
        "required": false,
        "description": ""
      }
    ]
  }
}