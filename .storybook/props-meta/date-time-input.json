{
  "DateTimeInputResponsive": {
    "description": "",
    "props": [
      {
        "name": "size",
        "type": "\"s\" | \"m\" | \"l\" | \"xl\" | 40 | 48 | 56 | 64 | 72",
        "required": false,
        "description": "Размер компонента\n@description s, m, l, xl deprecated, используйте вместо них 48, 56, 64, 72 соответственно"
      },
      {
        "name": "type",
        "type": "\"number\" | \"email\" | \"money\" | \"password\" | \"tel\" | \"text\"",
        "required": false,
        "description": "Атрибут type"
      },
      {
        "name": "value",
        "type": "string",
        "required": false,
        "description": "Значение поля ввода"
      },
      {
        "name": "defaultValue",
        "type": "string",
        "required": false,
        "description": "Начальное значение поля"
      },
      {
        "name": "onChange",
        "type": "((event: ChangeEvent<HTMLInputElement> | null, payload: { date: Date; value: string; }) => void)",
        "required": false,
        "description": "Обработчик изменения значения"
      },
      {
        "name": "onClick",
        "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик клика по полю"
      },
      {
        "name": "onMouseDown",
        "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик MouseDown по полю"
      },
      {
        "name": "accept",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "alt",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "autoComplete",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "capture",
        "type": "boolean | \"user\" | \"environment\"",
        "required": false,
        "description": ""
      },
      {
        "name": "checked",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "\"\" | \"anonymous\" | \"use-credentials\"",
        "required": false,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "height",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "list",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "max",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "maxLength",
        "type": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "min",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "minLength",
        "type": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "multiple",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "pattern",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "placeholder",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "readOnly",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "required",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "src",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "step",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "width",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Растягивает компонент на ширину контейнера"
      },
      {
        "name": "clear",
        "type": "boolean",
        "required": false,
        "description": "Крестик для очистки поля"
      },
      {
        "name": "colors",
        "type": "\"default\" | \"inverted\"",
        "required": false,
        "description": "Набор цветов для компонента"
      },
      {
        "name": "error",
        "type": "ReactNode",
        "required": false,
        "description": "Отображение ошибки"
      },
      {
        "name": "success",
        "type": "boolean",
        "required": false,
        "description": "Отображение иконки успеха"
      },
      {
        "name": "hint",
        "type": "ReactNode",
        "required": false,
        "description": "Текст подсказки"
      },
      {
        "name": "label",
        "type": "ReactNode",
        "required": false,
        "description": "Лейбл компонента"
      },
      {
        "name": "labelView",
        "type": "\"inner\" | \"outer\"",
        "required": false,
        "description": "Вид лейбла внутри / снаружи"
      },
      {
        "name": "wrapperRef",
        "type": "Ref<HTMLDivElement>",
        "required": false,
        "description": "Ref для обертки input"
      },
      {
        "name": "leftAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот слева"
      },
      {
        "name": "rightAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот справа"
      },
      {
        "name": "leftAddonsProps",
        "type": "HTMLAttributes<HTMLDivElement>",
        "required": false,
        "description": "Свойства для обертки левых аддонов"
      },
      {
        "name": "rightAddonsProps",
        "type": "HTMLAttributes<HTMLDivElement>",
        "required": false,
        "description": "Свойства для обертки правых аддонов"
      },
      {
        "name": "bottomAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот под инпутом"
      },
      {
        "name": "fieldClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для поля"
      },
      {
        "name": "inputClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс инпута\nДополнительный класс для инпута"
      },
      {
        "name": "labelClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для лейбла"
      },
      {
        "name": "addonsClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для аддонов"
      },
      {
        "name": "focusedClassName",
        "type": "string",
        "required": false,
        "description": "Класс, который будет установлен при фокусе"
      },
      {
        "name": "filledClassName",
        "type": "string",
        "required": false,
        "description": "Класс, который будет установлен, если в поле есть значение"
      },
      {
        "name": "onClear",
        "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик нажатия на кнопку очистки"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования.\nДля FormControl используется модификатор -form-control"
      },
      {
        "name": "disableUserInput",
        "type": "boolean",
        "required": false,
        "description": "Запрещает ввод с клавиатуры\nЗапретить ввод с клавиатуры"
      },
      {
        "name": "breakpoint",
        "type": "number",
        "required": false,
        "defaultValue": "1024\n1024",
        "description": "Контрольная точка, с нее начинается desktop версия"
      },
      {
        "name": "client",
        "type": "\"desktop\" | \"mobile\"",
        "required": false,
        "description": "Версия, которая будет использоваться при серверном рендеринге"
      },
      {
        "name": "defaultMatchMediaValue",
        "type": "boolean | (() => boolean)",
        "required": false,
        "description": "Значение по-умолчанию для хука useMatchMedia\n@deprecated Используйте client"
      },
      {
        "name": "popoverClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для поповера"
      },
      {
        "name": "picker",
        "type": "boolean",
        "required": false,
        "description": "Обработчик изменения значения"
      },
      {
        "name": "onComplete",
        "type": "((event: ChangeEvent<HTMLInputElement> | null, payload: { date: Date; value: string; }) => void)",
        "required": false,
        "description": "Обработчик окончания ввода"
      },
      {
        "name": "Calendar",
        "type": "ElementType<any>",
        "required": false,
        "description": "Компонент календаря"
      },
      {
        "name": "calendarProps",
        "type": "(CalendarDesktopProps & Record<string, unknown>) | ({ title?: string; open: boolean; onClose?: (() => void); allowSelectionFromEmptyRange?: boolean | undefined; ... 5 more ...; resetButtonContent?: string | undefined; } & ... 4 more ... & Record<...>) | undefined",
        "required": false,
        "description": "Доп. пропсы для календаря"
      },
      {
        "name": "defaultMonth",
        "type": "number",
        "required": false,
        "description": "Месяц в календаре по умолчанию (timestamp)"
      },
      {
        "name": "minDate",
        "type": "number",
        "required": false,
        "description": "Минимальная дата, доступная для выбора (timestamp)"
      },
      {
        "name": "maxDate",
        "type": "number",
        "required": false,
        "description": "Максимальная дата, доступная для выбора (timestamp)"
      },
      {
        "name": "events",
        "type": "(number | Date)[]",
        "required": false,
        "description": "Список событий"
      },
      {
        "name": "offDays",
        "type": "(number | Date)[]",
        "required": false,
        "description": "Список выходных"
      },
      {
        "name": "defaultOpen",
        "type": "boolean",
        "required": false,
        "description": "Состояние открытия по умолчанию"
      },
      {
        "name": "popoverPosition",
        "type": "Position",
        "required": false,
        "description": "Позиционирование поповера с календарем"
      },
      {
        "name": "zIndexPopover",
        "type": "number",
        "required": false,
        "description": "z-index Popover"
      },
      {
        "name": "preventFlip",
        "type": "boolean",
        "required": false,
        "description": "Запрещает поповеру менять свою позицию.\nНапример, если места снизу недостаточно,то он все равно будет показан снизу"
      },
      {
        "name": "useAnchorWidth",
        "type": "boolean",
        "required": false,
        "description": "Календарь будет принимать ширину инпута"
      },
      {
        "name": "ref",
        "type": "Ref<HTMLInputElement>",
        "required": false,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
      },
      {
        "name": "key",
        "type": "Key | null",
        "required": false,
        "description": ""
      }
    ]
  },
  "DateTimeInput": {
    "description": "",
    "props": [
      {
        "name": "size",
        "type": "\"s\" | \"m\" | \"l\" | \"xl\" | 40 | 48 | 56 | 64 | 72",
        "required": false,
        "description": "Размер компонента\n@description s, m, l, xl deprecated, используйте вместо них 48, 56, 64, 72 соответственно"
      },
      {
        "name": "type",
        "type": "\"number\" | \"email\" | \"money\" | \"password\" | \"tel\" | \"text\"",
        "required": false,
        "description": "Атрибут type"
      },
      {
        "name": "value",
        "type": "string",
        "required": false,
        "description": "Значение поля ввода"
      },
      {
        "name": "defaultValue",
        "type": "string",
        "required": false,
        "defaultValue": "",
        "description": "Начальное значение поля"
      },
      {
        "name": "onClick",
        "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик клика по полю"
      },
      {
        "name": "onMouseDown",
        "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик MouseDown по полю"
      },
      {
        "name": "accept",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "alt",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "autoComplete",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "capture",
        "type": "boolean | \"user\" | \"environment\"",
        "required": false,
        "description": ""
      },
      {
        "name": "checked",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "\"\" | \"anonymous\" | \"use-credentials\"",
        "required": false,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "height",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "list",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "max",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "maxLength",
        "type": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "min",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "minLength",
        "type": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "multiple",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "pattern",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "placeholder",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "readOnly",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "required",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "src",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "step",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "width",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Растягивает компонент на ширину контейнера"
      },
      {
        "name": "clear",
        "type": "boolean",
        "required": false,
        "description": "Крестик для очистки поля"
      },
      {
        "name": "colors",
        "type": "\"default\" | \"inverted\"",
        "required": false,
        "description": "Набор цветов для компонента"
      },
      {
        "name": "error",
        "type": "ReactNode",
        "required": false,
        "description": "Отображение ошибки"
      },
      {
        "name": "success",
        "type": "boolean",
        "required": false,
        "description": "Отображение иконки успеха"
      },
      {
        "name": "hint",
        "type": "ReactNode",
        "required": false,
        "description": "Текст подсказки"
      },
      {
        "name": "label",
        "type": "ReactNode",
        "required": false,
        "description": "Лейбл компонента"
      },
      {
        "name": "labelView",
        "type": "\"inner\" | \"outer\"",
        "required": false,
        "description": "Вид лейбла внутри / снаружи"
      },
      {
        "name": "wrapperRef",
        "type": "Ref<HTMLDivElement>",
        "required": false,
        "description": "Ref для обертки input"
      },
      {
        "name": "leftAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот слева"
      },
      {
        "name": "rightAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот справа"
      },
      {
        "name": "leftAddonsProps",
        "type": "HTMLAttributes<HTMLDivElement>",
        "required": false,
        "description": "Свойства для обертки левых аддонов"
      },
      {
        "name": "rightAddonsProps",
        "type": "HTMLAttributes<HTMLDivElement>",
        "required": false,
        "description": "Свойства для обертки правых аддонов"
      },
      {
        "name": "bottomAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот под инпутом"
      },
      {
        "name": "fieldClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для поля"
      },
      {
        "name": "inputClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс инпута\nДополнительный класс для инпута"
      },
      {
        "name": "labelClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для лейбла"
      },
      {
        "name": "addonsClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для аддонов"
      },
      {
        "name": "focusedClassName",
        "type": "string",
        "required": false,
        "description": "Класс, который будет установлен при фокусе"
      },
      {
        "name": "filledClassName",
        "type": "string",
        "required": false,
        "description": "Класс, который будет установлен, если в поле есть значение"
      },
      {
        "name": "onClear",
        "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик нажатия на кнопку очистки"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования.\nДля FormControl используется модификатор -form-control"
      },
      {
        "name": "disableUserInput",
        "type": "boolean",
        "required": false,
        "defaultValue": false,
        "description": "Запрещает ввод с клавиатуры\nЗапретить ввод с клавиатуры"
      },
      {
        "name": "breakpoint",
        "type": "number",
        "required": false,
        "defaultValue": "1024",
        "description": "Контрольная точка, с нее начинается desktop версия"
      },
      {
        "name": "client",
        "type": "\"desktop\" | \"mobile\"",
        "required": false,
        "description": "Версия, которая будет использоваться при серверном рендеринге"
      },
      {
        "name": "defaultMatchMediaValue",
        "type": "boolean | (() => boolean)",
        "required": false,
        "description": "Значение по-умолчанию для хука useMatchMedia\n@deprecated Используйте client"
      },
      {
        "name": "popoverClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для поповера"
      },
      {
        "name": "picker",
        "type": "boolean",
        "required": false,
        "description": "Обработчик изменения значения"
      },
      {
        "name": "onChange",
        "type": "((event: ChangeEvent<HTMLInputElement> | null, payload: { date: Date; value: string; }) => void)",
        "required": false,
        "description": "Обработчик изменения значения"
      },
      {
        "name": "onComplete",
        "type": "((event: ChangeEvent<HTMLInputElement> | null, payload: { date: Date; value: string; }) => void)",
        "required": false,
        "description": "Обработчик окончания ввода"
      },
      {
        "name": "Calendar",
        "type": "ElementType<any>",
        "required": false,
        "description": "Компонент календаря"
      },
      {
        "name": "calendarProps",
        "type": "(CalendarDesktopProps & Record<string, unknown>) | ({ title?: string; open: boolean; onClose?: (() => void); allowSelectionFromEmptyRange?: boolean | undefined; ... 5 more ...; resetButtonContent?: string | undefined; } & ... 4 more ... & Record<...>) | undefined",
        "required": false,
        "defaultValue": "{}",
        "description": "Доп. пропсы для календаря"
      },
      {
        "name": "defaultMonth",
        "type": "number",
        "required": false,
        "description": "Месяц в календаре по умолчанию (timestamp)"
      },
      {
        "name": "minDate",
        "type": "number",
        "required": false,
        "defaultValue": "calendarProps.minDate",
        "description": "Минимальная дата, доступная для выбора (timestamp)"
      },
      {
        "name": "maxDate",
        "type": "number",
        "required": false,
        "defaultValue": "calendarProps.maxDate",
        "description": "Максимальная дата, доступная для выбора (timestamp)"
      },
      {
        "name": "events",
        "type": "(number | Date)[]",
        "required": false,
        "defaultValue": "calendarProps.events || []",
        "description": "Список событий"
      },
      {
        "name": "offDays",
        "type": "(number | Date)[]",
        "required": false,
        "defaultValue": "calendarProps.offDays || []",
        "description": "Список выходных"
      },
      {
        "name": "defaultOpen",
        "type": "boolean",
        "required": false,
        "defaultValue": false,
        "description": "Состояние открытия по умолчанию"
      },
      {
        "name": "popoverPosition",
        "type": "Position",
        "required": false,
        "defaultValue": "bottom-start",
        "description": "Позиционирование поповера с календарем"
      },
      {
        "name": "zIndexPopover",
        "type": "number",
        "required": false,
        "description": "z-index Popover"
      },
      {
        "name": "preventFlip",
        "type": "boolean",
        "required": false,
        "description": "Запрещает поповеру менять свою позицию.\nНапример, если места снизу недостаточно,то он все равно будет показан снизу"
      },
      {
        "name": "useAnchorWidth",
        "type": "boolean",
        "required": false,
        "description": "Календарь будет принимать ширину инпута"
      },
      {
        "name": "view",
        "type": "\"desktop\" | \"mobile\"",
        "required": false,
        "defaultValue": "desktop",
        "description": "Отображение компонента в мобильном или десктопном виде"
      },
      {
        "name": "InputComponent",
        "type": "ElementType<any>",
        "required": false,
        "description": "Компонент инпута"
      },
      {
        "name": "ref",
        "type": "Ref<HTMLInputElement>",
        "required": false,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
      },
      {
        "name": "key",
        "type": "Key | null",
        "required": false,
        "description": ""
      }
    ]
  },
  "DateTimeInputDesktop": {
    "description": "",
    "props": [
      {
        "name": "size",
        "type": "\"s\" | \"m\" | \"l\" | \"xl\" | 40 | 48 | 56 | 64 | 72",
        "required": false,
        "description": "Размер компонента\n@description s, m, l, xl deprecated, используйте вместо них 48, 56, 64, 72 соответственно"
      },
      {
        "name": "type",
        "type": "\"number\" | \"email\" | \"money\" | \"password\" | \"tel\" | \"text\"",
        "required": false,
        "description": "Атрибут type"
      },
      {
        "name": "value",
        "type": "string",
        "required": false,
        "description": "Значение поля ввода"
      },
      {
        "name": "defaultValue",
        "type": "string",
        "required": false,
        "description": "Начальное значение поля"
      },
      {
        "name": "onChange",
        "type": "((event: ChangeEvent<HTMLInputElement> | null, payload: { date: Date; value: string; }) => void)",
        "required": false,
        "description": "Обработчик изменения значения"
      },
      {
        "name": "onClick",
        "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик клика по полю"
      },
      {
        "name": "onMouseDown",
        "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик MouseDown по полю"
      },
      {
        "name": "accept",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "alt",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "autoComplete",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "capture",
        "type": "boolean | \"user\" | \"environment\"",
        "required": false,
        "description": ""
      },
      {
        "name": "checked",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "\"\" | \"anonymous\" | \"use-credentials\"",
        "required": false,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "height",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "list",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "max",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "maxLength",
        "type": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "min",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "minLength",
        "type": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "multiple",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "pattern",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "placeholder",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "readOnly",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "required",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "src",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "step",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "width",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Растягивает компонент на ширину контейнера"
      },
      {
        "name": "clear",
        "type": "boolean",
        "required": false,
        "description": "Крестик для очистки поля"
      },
      {
        "name": "colors",
        "type": "\"default\" | \"inverted\"",
        "required": false,
        "description": "Набор цветов для компонента"
      },
      {
        "name": "error",
        "type": "ReactNode",
        "required": false,
        "description": "Отображение ошибки"
      },
      {
        "name": "success",
        "type": "boolean",
        "required": false,
        "description": "Отображение иконки успеха"
      },
      {
        "name": "hint",
        "type": "ReactNode",
        "required": false,
        "description": "Текст подсказки"
      },
      {
        "name": "label",
        "type": "ReactNode",
        "required": false,
        "description": "Лейбл компонента"
      },
      {
        "name": "labelView",
        "type": "\"inner\" | \"outer\"",
        "required": false,
        "description": "Вид лейбла внутри / снаружи"
      },
      {
        "name": "wrapperRef",
        "type": "Ref<HTMLDivElement>",
        "required": false,
        "description": "Ref для обертки input"
      },
      {
        "name": "leftAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот слева"
      },
      {
        "name": "rightAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот справа"
      },
      {
        "name": "leftAddonsProps",
        "type": "HTMLAttributes<HTMLDivElement>",
        "required": false,
        "description": "Свойства для обертки левых аддонов"
      },
      {
        "name": "rightAddonsProps",
        "type": "HTMLAttributes<HTMLDivElement>",
        "required": false,
        "description": "Свойства для обертки правых аддонов"
      },
      {
        "name": "bottomAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот под инпутом"
      },
      {
        "name": "fieldClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для поля"
      },
      {
        "name": "inputClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс инпута\nДополнительный класс для инпута"
      },
      {
        "name": "labelClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для лейбла"
      },
      {
        "name": "addonsClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для аддонов"
      },
      {
        "name": "focusedClassName",
        "type": "string",
        "required": false,
        "description": "Класс, который будет установлен при фокусе"
      },
      {
        "name": "filledClassName",
        "type": "string",
        "required": false,
        "description": "Класс, который будет установлен, если в поле есть значение"
      },
      {
        "name": "onClear",
        "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик нажатия на кнопку очистки"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования.\nДля FormControl используется модификатор -form-control"
      },
      {
        "name": "disableUserInput",
        "type": "boolean",
        "required": false,
        "description": "Запрещает ввод с клавиатуры\nЗапретить ввод с клавиатуры"
      },
      {
        "name": "breakpoint",
        "type": "number",
        "required": false,
        "defaultValue": "1024",
        "description": "Контрольная точка, с нее начинается desktop версия"
      },
      {
        "name": "client",
        "type": "\"desktop\" | \"mobile\"",
        "required": false,
        "description": "Версия, которая будет использоваться при серверном рендеринге"
      },
      {
        "name": "defaultMatchMediaValue",
        "type": "boolean | (() => boolean)",
        "required": false,
        "description": "Значение по-умолчанию для хука useMatchMedia\n@deprecated Используйте client"
      },
      {
        "name": "popoverClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для поповера"
      },
      {
        "name": "picker",
        "type": "boolean",
        "required": false,
        "description": "Обработчик изменения значения"
      },
      {
        "name": "onComplete",
        "type": "((event: ChangeEvent<HTMLInputElement> | null, payload: { date: Date; value: string; }) => void)",
        "required": false,
        "description": "Обработчик окончания ввода"
      },
      {
        "name": "Calendar",
        "type": "ElementType<any>",
        "required": false,
        "description": "Компонент календаря"
      },
      {
        "name": "calendarProps",
        "type": "(CalendarDesktopProps & Record<string, unknown>) | ({ title?: string; open: boolean; onClose?: (() => void); allowSelectionFromEmptyRange?: boolean | undefined; ... 5 more ...; resetButtonContent?: string | undefined; } & ... 4 more ... & Record<...>) | undefined",
        "required": false,
        "description": "Доп. пропсы для календаря"
      },
      {
        "name": "defaultMonth",
        "type": "number",
        "required": false,
        "description": "Месяц в календаре по умолчанию (timestamp)"
      },
      {
        "name": "minDate",
        "type": "number",
        "required": false,
        "description": "Минимальная дата, доступная для выбора (timestamp)"
      },
      {
        "name": "maxDate",
        "type": "number",
        "required": false,
        "description": "Максимальная дата, доступная для выбора (timestamp)"
      },
      {
        "name": "events",
        "type": "(number | Date)[]",
        "required": false,
        "description": "Список событий"
      },
      {
        "name": "offDays",
        "type": "(number | Date)[]",
        "required": false,
        "description": "Список выходных"
      },
      {
        "name": "defaultOpen",
        "type": "boolean",
        "required": false,
        "description": "Состояние открытия по умолчанию"
      },
      {
        "name": "popoverPosition",
        "type": "Position",
        "required": false,
        "description": "Позиционирование поповера с календарем"
      },
      {
        "name": "zIndexPopover",
        "type": "number",
        "required": false,
        "description": "z-index Popover"
      },
      {
        "name": "preventFlip",
        "type": "boolean",
        "required": false,
        "description": "Запрещает поповеру менять свою позицию.\nНапример, если места снизу недостаточно,то он все равно будет показан снизу"
      },
      {
        "name": "useAnchorWidth",
        "type": "boolean",
        "required": false,
        "description": "Календарь будет принимать ширину инпута"
      },
      {
        "name": "ref",
        "type": "Ref<HTMLInputElement>",
        "required": false,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
      },
      {
        "name": "key",
        "type": "Key | null",
        "required": false,
        "description": ""
      }
    ]
  },
  "DateTimeInputMobile": {
    "description": "",
    "props": [
      {
        "name": "size",
        "type": "\"s\" | \"m\" | \"l\" | \"xl\" | 40 | 48 | 56 | 64 | 72",
        "required": false,
        "description": "Размер компонента\n@description s, m, l, xl deprecated, используйте вместо них 48, 56, 64, 72 соответственно"
      },
      {
        "name": "type",
        "type": "\"number\" | \"email\" | \"money\" | \"password\" | \"tel\" | \"text\"",
        "required": false,
        "description": "Атрибут type"
      },
      {
        "name": "value",
        "type": "string",
        "required": false,
        "description": "Значение поля ввода"
      },
      {
        "name": "defaultValue",
        "type": "string",
        "required": false,
        "description": "Начальное значение поля"
      },
      {
        "name": "onChange",
        "type": "((event: ChangeEvent<HTMLInputElement> | null, payload: { date: Date; value: string; }) => void)",
        "required": false,
        "description": "Обработчик изменения значения"
      },
      {
        "name": "onClick",
        "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик клика по полю"
      },
      {
        "name": "onMouseDown",
        "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик MouseDown по полю"
      },
      {
        "name": "accept",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "alt",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "autoComplete",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "capture",
        "type": "boolean | \"user\" | \"environment\"",
        "required": false,
        "description": ""
      },
      {
        "name": "checked",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "\"\" | \"anonymous\" | \"use-credentials\"",
        "required": false,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "height",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "list",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "max",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "maxLength",
        "type": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "min",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "minLength",
        "type": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "multiple",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "pattern",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "placeholder",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "readOnly",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "required",
        "type": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "src",
        "type": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "step",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "width",
        "type": "string | number",
        "required": false,
        "description": ""
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Растягивает компонент на ширину контейнера"
      },
      {
        "name": "clear",
        "type": "boolean",
        "required": false,
        "description": "Крестик для очистки поля"
      },
      {
        "name": "colors",
        "type": "\"default\" | \"inverted\"",
        "required": false,
        "description": "Набор цветов для компонента"
      },
      {
        "name": "error",
        "type": "ReactNode",
        "required": false,
        "description": "Отображение ошибки"
      },
      {
        "name": "success",
        "type": "boolean",
        "required": false,
        "description": "Отображение иконки успеха"
      },
      {
        "name": "hint",
        "type": "ReactNode",
        "required": false,
        "description": "Текст подсказки"
      },
      {
        "name": "label",
        "type": "ReactNode",
        "required": false,
        "description": "Лейбл компонента"
      },
      {
        "name": "labelView",
        "type": "\"inner\" | \"outer\"",
        "required": false,
        "description": "Вид лейбла внутри / снаружи"
      },
      {
        "name": "wrapperRef",
        "type": "Ref<HTMLDivElement>",
        "required": false,
        "description": "Ref для обертки input"
      },
      {
        "name": "leftAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот слева"
      },
      {
        "name": "rightAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот справа"
      },
      {
        "name": "leftAddonsProps",
        "type": "HTMLAttributes<HTMLDivElement>",
        "required": false,
        "description": "Свойства для обертки левых аддонов"
      },
      {
        "name": "rightAddonsProps",
        "type": "HTMLAttributes<HTMLDivElement>",
        "required": false,
        "description": "Свойства для обертки правых аддонов"
      },
      {
        "name": "bottomAddons",
        "type": "ReactNode",
        "required": false,
        "description": "Слот под инпутом"
      },
      {
        "name": "fieldClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для поля"
      },
      {
        "name": "inputClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс инпута\nДополнительный класс для инпута"
      },
      {
        "name": "labelClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для лейбла"
      },
      {
        "name": "addonsClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для аддонов"
      },
      {
        "name": "focusedClassName",
        "type": "string",
        "required": false,
        "description": "Класс, который будет установлен при фокусе"
      },
      {
        "name": "filledClassName",
        "type": "string",
        "required": false,
        "description": "Класс, который будет установлен, если в поле есть значение"
      },
      {
        "name": "onClear",
        "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)",
        "required": false,
        "description": "Обработчик нажатия на кнопку очистки"
      },
      {
        "name": "dataTestId",
        "type": "string",
        "required": false,
        "description": "Идентификатор для систем автоматизированного тестирования.\nДля FormControl используется модификатор -form-control"
      },
      {
        "name": "disableUserInput",
        "type": "boolean",
        "required": false,
        "description": "Запрещает ввод с клавиатуры\nЗапретить ввод с клавиатуры"
      },
      {
        "name": "breakpoint",
        "type": "number",
        "required": false,
        "defaultValue": "1024",
        "description": "Контрольная точка, с нее начинается desktop версия"
      },
      {
        "name": "client",
        "type": "\"desktop\" | \"mobile\"",
        "required": false,
        "description": "Версия, которая будет использоваться при серверном рендеринге"
      },
      {
        "name": "defaultMatchMediaValue",
        "type": "boolean | (() => boolean)",
        "required": false,
        "description": "Значение по-умолчанию для хука useMatchMedia\n@deprecated Используйте client"
      },
      {
        "name": "popoverClassName",
        "type": "string",
        "required": false,
        "description": "Дополнительный класс для поповера"
      },
      {
        "name": "picker",
        "type": "boolean",
        "required": false,
        "description": "Обработчик изменения значения"
      },
      {
        "name": "onComplete",
        "type": "((event: ChangeEvent<HTMLInputElement> | null, payload: { date: Date; value: string; }) => void)",
        "required": false,
        "description": "Обработчик окончания ввода"
      },
      {
        "name": "Calendar",
        "type": "ElementType<any>",
        "required": false,
        "description": "Компонент календаря"
      },
      {
        "name": "calendarProps",
        "type": "(CalendarDesktopProps & Record<string, unknown>) | ({ title?: string; open: boolean; onClose?: (() => void); allowSelectionFromEmptyRange?: boolean | undefined; ... 5 more ...; resetButtonContent?: string | undefined; } & ... 4 more ... & Record<...>) | undefined",
        "required": false,
        "description": "Доп. пропсы для календаря"
      },
      {
        "name": "defaultMonth",
        "type": "number",
        "required": false,
        "description": "Месяц в календаре по умолчанию (timestamp)"
      },
      {
        "name": "minDate",
        "type": "number",
        "required": false,
        "description": "Минимальная дата, доступная для выбора (timestamp)"
      },
      {
        "name": "maxDate",
        "type": "number",
        "required": false,
        "description": "Максимальная дата, доступная для выбора (timestamp)"
      },
      {
        "name": "events",
        "type": "(number | Date)[]",
        "required": false,
        "description": "Список событий"
      },
      {
        "name": "offDays",
        "type": "(number | Date)[]",
        "required": false,
        "description": "Список выходных"
      },
      {
        "name": "defaultOpen",
        "type": "boolean",
        "required": false,
        "description": "Состояние открытия по умолчанию"
      },
      {
        "name": "popoverPosition",
        "type": "Position",
        "required": false,
        "description": "Позиционирование поповера с календарем"
      },
      {
        "name": "zIndexPopover",
        "type": "number",
        "required": false,
        "description": "z-index Popover"
      },
      {
        "name": "preventFlip",
        "type": "boolean",
        "required": false,
        "description": "Запрещает поповеру менять свою позицию.\nНапример, если места снизу недостаточно,то он все равно будет показан снизу"
      },
      {
        "name": "useAnchorWidth",
        "type": "boolean",
        "required": false,
        "description": "Календарь будет принимать ширину инпута"
      },
      {
        "name": "ref",
        "type": "Ref<HTMLInputElement>",
        "required": false,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom"
      },
      {
        "name": "key",
        "type": "Key | null",
        "required": false,
        "description": ""
      }
    ]
  }
}