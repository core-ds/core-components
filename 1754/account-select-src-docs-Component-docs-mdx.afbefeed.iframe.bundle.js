"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6891,1341],{"./node_modules/@mdx-js/react/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{MDXContext:function(){return MDXContext},MDXProvider:function(){return MDXProvider},useMDXComponents:function(){return useMDXComponents},withMDXComponents:function(){return withMDXComponents}});var react=__webpack_require__("./node_modules/react/index.js");let MDXContext=react.createContext({});function withMDXComponents(Component){return boundMDXComponent;function boundMDXComponent(props){let allComponents=useMDXComponents(props.components);return react.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){let contextComponents=react.useContext(MDXContext);return react.useMemo(()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components},[contextComponents,components])}let emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react.createElement(MDXContext.Provider,{value:allComponents},children)}},"./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{r:function(){return DocsRenderer}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/react-dom-shim/dist/react-18.mjs"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),defaultComponents={code:_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.bD,a:_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Ct,..._storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.lO},ErrorBoundary=class extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(){super(...arguments),this.state={hasError:!1}}static getDerivedStateFromError(){return{hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err)}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,children)}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components},TDocs=_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.WI;return new Promise((resolve,reject)=>{__webpack_require__.e(1341).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@mdx-js/react/index.js")).then(({MDXProvider})=>(0,_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__.l)(react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorBoundary,{showException:reject,key:Math.random()},react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXProvider,{components},react__WEBPACK_IMPORTED_MODULE_0__.createElement(TDocs,{context,docsParameter}))),element)).then(()=>resolve())})},this.unmount=element=>{(0,_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__.K)(element)}}}},"./node_modules/@storybook/addon-docs/dist/index.mjs":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{$4:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.$4},Ed:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Ed},UG:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.UG},h_:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.h_},oG:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.oG}}),__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")},"./node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.js":function(module,__unused_webpack_exports,__webpack_require__){var mod,secondTarget,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to},mdx_react_shim_exports={};module.exports=__copyProps(__defProp({},"__esModule",{value:!0}),mdx_react_shim_exports),mod=__webpack_require__("./node_modules/@mdx-js/react/index.js"),secondTarget=module.exports,__copyProps(mdx_react_shim_exports,mod,"default"),secondTarget&&__copyProps(secondTarget,mod,"default")},"./packages/account-select/src/docs/Component.docs.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:function(){return Component_docs}}),__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mdx_react_shim=__webpack_require__("./node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),blocks=__webpack_require__("./.storybook/blocks/index.ts"),Component_stories=__webpack_require__("./packages/account-select/src/docs/Component.stories.tsx");function _createMdxContent(props){let _components=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p"},(0,mdx_react_shim.useMDXComponents)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(_components.h2,{id:"выбор-счёта",children:"Выбор счёта"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const options = [\n        {\n            key: '1',\n            content: (\n                <PureCell verticalPadding='default'>\n                    <PureCell.Content>\n                        <PureCell.Main>\n                            <Typography.Text color='secondary' view='component'>\n                                Экспресс-счёт \xb7\xb71234\n                            </Typography.Text>\n                            <Amount\n                                value={100000099}\n                                minority={100}\n                                currency='RUR'\n                                bold='major'\n                                transparentMinor={true}\n                            />\n                        </PureCell.Main>\n                    </PureCell.Content>\n                </PureCell>\n            ),\n        },\n        {\n            key: '2',\n            content: (\n                <PureCell verticalPadding='default'>\n                    <PureCell.Content>\n                        <PureCell.Main>\n                            <Typography.Text color='secondary' view='component'>\n                                Экспресс-счёт \xb7\xb71234\n                            </Typography.Text>\n                            <Amount\n                                value={100000099}\n                                minority={100}\n                                currency='RUR'\n                                bold='major'\n                                transparentMinor={true}\n                            />\n                        </PureCell.Main>\n                    </PureCell.Content>\n                </PureCell>\n            ),\n        },\n        {\n            key: '3',\n            content: (\n                <PureCell verticalPadding='default'>\n                    <PureCell.Content>\n                        <PureCell.Main>\n                            <Typography.Text color='secondary' view='component'>\n                                Экспресс-счёт \xb7\xb74567\n                            </Typography.Text>\n                            <Amount\n                                value={0}\n                                minority={100}\n                                currency='RUR'\n                                bold='major'\n                                transparentMinor={true}\n                            />\n                        </PureCell.Main>\n                    </PureCell.Content>\n                </PureCell>\n            ),\n        },\n    ];\n    return <AccountSelect label='Куда' options={options} />;\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"выбор-карты",children:"Выбор карты"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const options = [\n        {\n            key: '1',\n            content: (\n                <PureCell verticalPadding='default'>\n                    <PureCell.Graphics verticalAlign='center'>\n                        <ProductCover.Single size={48} />\n                    </PureCell.Graphics>\n                    <PureCell.Content>\n                        <PureCell.Main>\n                            <Typography.Text color='secondary' view='component'>\n                                Карта с преимуществами\n                            </Typography.Text>\n                            <Amount\n                                value={100000099}\n                                minority={100}\n                                currency='RUR'\n                                bold='major'\n                                transparentMinor={true}\n                            />\n                        </PureCell.Main>\n                    </PureCell.Content>\n                </PureCell>\n            ),\n        },\n        {\n            key: '2',\n            content: (\n                <PureCell verticalPadding='default'>\n                    <PureCell.Graphics verticalAlign='center'>\n                        <ProductCover.Single size={48} />\n                    </PureCell.Graphics>\n                    <PureCell.Content>\n                        <PureCell.Main>\n                            <Typography.Text color='secondary' view='component'>\n                                Карта с кредитным лимитом\n                            </Typography.Text>\n                            <Amount\n                                value={100000099}\n                                transparentMinor={true}\n                                minority={100}\n                                currency='RUR'\n                                bold='major'\n                            />\n                        </PureCell.Main>\n                    </PureCell.Content>\n                </PureCell>\n            ),\n        },\n    ];\n    return (\n        <AccountSelect\n            label='Карта получателя'\n            fieldProps={{ leftAddons: <ProductCover.Single size={48} /> }}\n            options={options}\n        />\n    );\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"добавление-новой-карты-отправителя",children:"Добавление новой карты отправителя"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Для карты отправителя можно использовать механику с запросом CVV или без него.\nПосле ввода 6-го символа определяется банк и\xa0платёжная система. При необходимости, можно настроить отображение различных рубашек карт для банков РФ. В примере для карты начинающейся с номера 1234 56 будет определён банк и изменится рубашка."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const options = [\n        {\n            key: '1',\n            content: (\n                <PureCell verticalPadding='default'>\n                    <PureCell.Graphics verticalAlign='center'>\n                        <ProductCover.Single\n                            size={48}\n                            baseUrl='https://online.alfabank.ru/cards-images/cards/'\n                            layers='BACKGROUND,LOGO,PAYMENT_SYSTEM'\n                            cardId='RM'\n                        />\n                    </PureCell.Graphics>\n                    <PureCell.Content>\n                        <PureCell.Main>\n                            <Typography.Text color='secondary' view='component'>\n                                Карта с преимуществами\n                            </Typography.Text>\n                            <Amount\n                                value={100000099}\n                                minority={100}\n                                currency='RUR'\n                                bold='major'\n                                transparentMinor={true}\n                            />\n                        </PureCell.Main>\n                    </PureCell.Content>\n                </PureCell>\n            ),\n        },\n        {\n            key: '2',\n            content: (\n                <PureCell verticalPadding='default'>\n                    <PureCell.Graphics verticalAlign='center'>\n                        <ProductCover.Single\n                            size={48}\n                            baseUrl='https://online.alfabank.ru/cards-images/cards/'\n                            layers='BACKGROUND,LOGO,PAYMENT_SYSTEM'\n                            cardId='RM'\n                        />\n                    </PureCell.Graphics>\n                    <PureCell.Content>\n                        <PureCell.Main>\n                            <Typography.Text color='secondary' view='component'>\n                                Карта с кредитным лимитом\n                            </Typography.Text>\n                            <Amount\n                                value={100000099}\n                                transparentMinor={true}\n                                minority={100}\n                                currency='RUR'\n                                bold='major'\n                            />\n                        </PureCell.Main>\n                    </PureCell.Content>\n                </PureCell>\n            ),\n        },\n    ];\n\n    const [cvv, setCvv] = React.useState(true);\n    const [expiry, setExpiry] = React.useState(true);\n    const [cardImage, setCardImage] = React.useState(undefined);\n    const handleInput = (data) => {\n        if (data.number.startsWith('123456')) {\n            setCardImage({\n                baseUrl: 'https://online.alfabank.ru/cards-images/cards/',\n                layers: 'BACKGROUND,LOGO,PAYMENT_SYSTEM',\n                cardId: 'RM',\n            });\n        }\n    };\n\n    return (\n        <div>\n            <AccountSelect\n                label='Карта отправителя'\n                fieldProps={{ leftAddons: <ProductCover.Single size={48} /> }}\n                options={options}\n                cardAddingProps={{\n                    content: (\n                        <PureCell verticalPadding='default'>\n                            <PureCell.Graphics verticalAlign='center'>\n                                <ProductCover.Single\n                                    size={48}\n                                    iconColor='var(--color-light-neutral-700)'\n                                    backgroundColor='var(--color-light-neutral-200)'\n                                    icon={PlusMIcon}\n                                />\n                            </PureCell.Graphics>\n                            <PureCell.Content>\n                                <PureCell.Main>\n                                    <PureCell.Text titleColor='primary' view='primary-medium'>\n                                        Новая карта\n                                    </PureCell.Text>\n                                </PureCell.Main>\n                            </PureCell.Content>\n                        </PureCell>\n                    ),\n                    needCvv: cvv,\n                    needExpiryDate: expiry,\n                    onInput: handleInput,\n                    cardImage,\n                }}\n            />\n            <Gap size='m' />\n            <Switch\n                checked={cvv}\n                label='Нужен CVV'\n                onChange={() => {\n                    setCvv((prevState) => !prevState);\n                }}\n            />\n            <Gap size='s' />\n            <Switch\n                checked={expiry}\n                label='Нужна дата окончания действия карты'\n                onChange={() => {\n                    setExpiry((prevState) => !prevState);\n                }}\n            />\n        </div>\n    );\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"добавление-новой-карты-получателя",children:"Добавление новой карты получателя"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const options = [\n        {\n            key: '1',\n            content: (\n                <PureCell verticalPadding='default'>\n                    <PureCell.Graphics verticalAlign='center'>\n                        <ProductCover.Single\n                            size={48}\n                            baseUrl='https://online.alfabank.ru/cards-images/cards/'\n                            layers='BACKGROUND,LOGO,PAYMENT_SYSTEM'\n                            cardId='RM'\n                        />\n                    </PureCell.Graphics>\n                    <PureCell.Content>\n                        <PureCell.Main>\n                            <PureCell.Text titleColor='secondary' view='primary-small'>\n                                Карта с преимуществами\n                            </PureCell.Text>\n                            <PureCell.Amount\n                                value={100000099}\n                                minorUnits={100}\n                                currency='RUR'\n                                color='primary'\n                                view={'withZeroMinorPart'}\n                                transparentMinor={true}\n                            />\n                        </PureCell.Main>\n                    </PureCell.Content>\n                </PureCell>\n            ),\n        },\n        {\n            key: '2',\n            content: (\n                <PureCell verticalPadding='default'>\n                    <PureCell.Graphics verticalAlign='center'>\n                        <ProductCover.Single\n                            size={48}\n                            baseUrl='https://online.alfabank.ru/cards-images/cards/'\n                            layers='BACKGROUND,LOGO,PAYMENT_SYSTEM'\n                            cardId='RM'\n                        />\n                    </PureCell.Graphics>\n                    <PureCell.Content>\n                        <PureCell.Main>\n                            <PureCell.Text titleColor='secondary' view='primary-small'>\n                                Карта с кредитным лимитом\n                            </PureCell.Text>\n                            <PureCell.Amount\n                                value={100099}\n                                minorUnits={100}\n                                currency='RUR'\n                                color='primary'\n                                view={'withZeroMinorPart'}\n                                transparentMinor={true}\n                            />\n                        </PureCell.Main>\n                    </PureCell.Content>\n                </PureCell>\n            ),\n        },\n    ];\n\n    const [cardImage, setCardImage] = React.useState(undefined);\n    const handleInput = (data) => {\n        if (data.number.startsWith('123456')) {\n            setCardImage({\n                baseUrl: 'https://online.alfabank.ru/cards-images/cards/',\n                layers: 'BACKGROUND,LOGO,PAYMENT_SYSTEM',\n                cardId: 'RM',\n            });\n        }\n    };\n\n    return (\n        <div>\n            <AccountSelect\n                size='xl'\n                label='Карта получателя'\n                fieldProps={{ leftAddons: <ProductCover.Single size={48} /> }}\n                options={options}\n                cardAddingProps={{\n                    content: (\n                        <PureCell verticalPadding='default'>\n                            <PureCell.Graphics verticalAlign='center'>\n                                <ProductCover.Single\n                                    size={48}\n                                    iconColor='var(--color-light-neutral-700)'\n                                    backgroundColor='var(--color-light-neutral-200)'\n                                    icon={PlusMIcon}\n                                />\n                            </PureCell.Graphics>\n                            <PureCell.Content>\n                                <PureCell.Main>\n                                    <PureCell.Text titleColor='primary' view='primary-medium'>\n                                        Новая карта\n                                    </PureCell.Text>\n                                </PureCell.Main>\n                            </PureCell.Content>\n                        </PureCell>\n                    ),\n                    needCvv: false,\n                    needExpiryDate: false,\n                    onInput: handleInput,\n                    cardImage,\n                }}\n            />\n        </div>\n    );\n});\n"})})]})}var description=function(props={}){let{wrapper:MDXLayout}=Object.assign({},(0,mdx_react_shim.useMDXComponents)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)},Component_mobile=__webpack_require__("./packages/account-select/src/mobile/Component.mobile.tsx"),Component_desktop=__webpack_require__("./packages/account-select/src/desktop/Component.desktop.tsx");function development_createMdxContent(props){let _components=Object.assign({h2:"h2",pre:"pre",code:"code"},(0,mdx_react_shim.useMDXComponents)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(_components.h2,{id:"подключение",children:"Подключение"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"import { AccountSelectResponsive } from '@alfalab/core-components/account-select';\nimport { AccountSelectDesktop } from '@alfalab/core-components/account-select/desktop';\nimport { AccountSelectMobile } from '@alfalab/core-components/account-select/mobile';\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"свойства",children:"Свойства"}),"\n",(0,jsx_runtime.jsx)(blocks.Ft,{components:{AccountSelectMobile:Component_mobile.W,AccountSelectDesktop:Component_desktop.o}})]})}var development=function(props={}){let{wrapper:MDXLayout}=Object.assign({},(0,mdx_react_shim.useMDXComponents)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(development_createMdxContent,props)})):development_createMdxContent(props)};function Component_docs_createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{of:Component_stories}),"\n",(0,jsx_runtime.jsx)(blocks.yt,{name:"AccountSelect",children:"Поле с выпадающим списком для выбора счёта или карты."}),"\n",(0,jsx_runtime.jsx)(blocks.mQ,{description:(0,jsx_runtime.jsx)(description,{}),development:(0,jsx_runtime.jsx)(development,{})})]})}var Component_docs=function(props={}){let{wrapper:MDXLayout}=Object.assign({},(0,mdx_react_shim.useMDXComponents)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(Component_docs_createMdxContent,props)})):Component_docs_createMdxContent(props)}}}]);