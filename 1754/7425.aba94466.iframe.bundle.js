"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7425],{"./packages/account-select/src/components/custom-field/index.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{J:function(){return CustomField}});var objectSpread2=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),objectWithoutProperties=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react=__webpack_require__("./node_modules/react/index.js"),desktop=__webpack_require__("./dist/form-control/modern/desktop/index.js"),mobile=__webpack_require__("./dist/form-control/modern/mobile/index.js"),shared=__webpack_require__("./dist/select/modern/shared/index.js"),constants=__webpack_require__("./packages/account-select/src/constants.ts"),defineProperty=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"),slicedToArray=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),index_esm=__webpack_require__("./packages/account-select/node_modules/@maskito/react/index.esm.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),modern=__webpack_require__("./dist/product-cover/modern/index.js"),context=__webpack_require__("./packages/account-select/src/context.ts"),getMaskedCardNumber=function(value){if(!value||value.length<16)return value;var lastFour=value.replace(/\s/g,"").slice(-4);return"\xb7\xb7".concat(lastFour)},parseDate=function(expiryString){if(!(null!=expiryString&&expiryString.includes("/")))throw Error('Неверный формат даты. Ожидается формат "ММ/ГГ"');var _expiryString$split=expiryString.split("/"),_expiryString$split2=(0,slicedToArray.Z)(_expiryString$split,2),monthStr=_expiryString$split2[0],yearStr=_expiryString$split2[1],month=parseInt(monthStr,10)-1,year=parseInt(yearStr,10)+2e3;if(month<0||month>11)throw Error("Неверный месяц. Должен быть от 01 до 12");if(year<2e3||year>2099)throw Error("Неверный год. Должен быть от 00 до 99");return new Date(year,month+1,0)},isNumericString=function(str){return/^\d+$/.test(str)},validateCardNumber=function(value){var trimmedValue=value.replace(/\s/g,"");return 16===trimmedValue.length&&isNumericString(trimmedValue)},validateExpiry=function(value){if(5!==value.length)return!1;var _value$split=value.split("/"),_value$split2=(0,slicedToArray.Z)(_value$split,2),month=_value$split2[0],year=_value$split2[1],currentYear=new Date().getFullYear()%100,currentMonth=new Date().getMonth()+1,monthNum=parseInt(month,10),yearNum=parseInt(year,10);return monthNum>=1&&monthNum<=12&&yearNum>=currentYear&&(yearNum>currentYear||monthNum>=currentMonth)},validateCvv=function(value){return"number"==typeof value?3===value.toString().length:(null==value?void 0:value.length)===3&&isNumericString(value)},index_module={multistepInput:"multistepInput_P3ThC",cardNumberInput:"cardNumberInput_bGAs9",cardNumberInputValid:"cardNumberInputValid_aPIIc",expiryInput:"expiryInput_BLw5Z",cvvInput:"cvvInput_vwgCY",multistepCardInputWrapper:"multistepCardInputWrapper_Fp57l",inputs:"inputs_PZVdR"},jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),MultiStepCardInput=(0,react.memo)(function(_ref){var _cardImage$size,onSubmit=_ref.onSubmit,onInput=_ref.onInput,cardImage=_ref.cardImage,_ref$needCvv=_ref.needCvv,needCvv=void 0===_ref$needCvv||_ref$needCvv,_ref$needExpiryDate=_ref.needExpiryDate,needExpiryDate=void 0===_ref$needExpiryDate||_ref$needExpiryDate,_ref$expiryAsDate=_ref.expiryAsDate,expiryAsDate=void 0===_ref$expiryAsDate||_ref$expiryAsDate,size=_ref.size,_useState=(0,react.useState)(1),_useState2=(0,slicedToArray.Z)(_useState,2),step=_useState2[0],setStep=_useState2[1],_useState3=(0,react.useState)(""),_useState4=(0,slicedToArray.Z)(_useState3,2),cardNumber=_useState4[0],setCardNumber=_useState4[1],_useState5=(0,react.useState)(""),_useState6=(0,slicedToArray.Z)(_useState5,2),cardExpiry=_useState6[0],setCardExpiry=_useState6[1],_useState7=(0,react.useState)(""),_useState8=(0,slicedToArray.Z)(_useState7,2),cardCvv=_useState8[0],setCardCvv=_useState8[1],_useState9=(0,react.useState)(!1),_useState0=(0,slicedToArray.Z)(_useState9,2),isCardNumberFocused=_useState0[0],setIsCardNumberFocused=_useState0[1],isShowExpiry=needExpiryDate&&step>=2&&validateCardNumber(cardNumber),isShowCvv=needCvv&&step>=3&&validateCardNumber(cardNumber)&&validateExpiry(String(cardExpiry)),setError=(0,context.R)().setError,numberRef=(0,react.useRef)(null),expiryRef=(0,react.useRef)(null),cvvRef=(0,react.useRef)(null),numberMaskRef=(0,index_esm.I)({options:constants.hZ}),expiryMaskRef=(0,index_esm.I)({options:(0,objectSpread2.Z)((0,objectSpread2.Z)({},constants.IL),{},{postprocessors:[function(state){var value=state.value;return(0,slicedToArray.Z)(state.selection,2)[1]>=5&&!validateExpiry(value)?setError("Введена неверная дата"):setError(null),state}]})}),cvvMaskRef=(0,index_esm.I)({options:constants.g1}),numberRefCallback=(0,react.useCallback)(function(element){numberRef.current=element,numberMaskRef(element)},[numberMaskRef]),expiryRefCallback=(0,react.useCallback)(function(element){expiryRef.current=element,expiryMaskRef(element)},[expiryMaskRef]),cvvRefCallback=(0,react.useCallback)(function(element){cvvRef.current=element,cvvMaskRef(element)},[cvvMaskRef]);return(0,react.useEffect)(function(){null==onInput||onInput((0,objectSpread2.Z)((0,objectSpread2.Z)({number:cardNumber},needExpiryDate&&{expiryDate:cardExpiry}),needCvv&&cardCvv&&{cvv:cardCvv}))},[cardNumber,cardExpiry,cardCvv,needExpiryDate,needCvv]),(0,react.useEffect)(function(){if(1===step){var _numberRef$current;null===(_numberRef$current=numberRef.current)||void 0===_numberRef$current||_numberRef$current.focus()}},[step]),(0,jsx_runtime.jsxs)("div",{className:index_module.multistepCardInputWrapper,onClick:function onClick(e){return e.stopPropagation()},"aria-hidden":"true",children:[(0,jsx_runtime.jsx)(modern.ProductCover.Single,(0,objectSpread2.Z)((0,objectSpread2.Z)({cardNumber:cardNumber.length>=16?Number(cardNumber):void 0},cardImage),{},{size:null!==(_cardImage$size=null==cardImage?void 0:cardImage.size)&&void 0!==_cardImage$size?_cardImage$size:constants.zG[size]})),(0,jsx_runtime.jsxs)("div",{className:index_module.inputs,children:[(0,jsx_runtime.jsx)("input",{ref:numberRefCallback,type:"text",value:isCardNumberFocused||!validateCardNumber(cardNumber)?cardNumber.replace(/\s/g,"").replace(/(\d{4})(?=\d)/g,"$1 "):getMaskedCardNumber(cardNumber),onInput:function(_ref2){var _numberRef$current2,cleanValue=_ref2.target.value.replace(/\s/g,"");setCardNumber(cleanValue),validateCardNumber(cleanValue)&&(needExpiryDate?(setStep(2),setTimeout(function(){var _expiryRef$current;return null===(_expiryRef$current=expiryRef.current)||void 0===_expiryRef$current?void 0:_expiryRef$current.focus()},100)):(null===(_numberRef$current2=numberRef.current)||void 0===_numberRef$current2||_numberRef$current2.blur(),null==onSubmit||onSubmit({number:cleanValue})))},onFocus:function(){setIsCardNumberFocused(!0),setTimeout(function(){var current=numberRef.current;if(current){var length=current.value.length;current.setSelectionRange(length,length)}},0)},onBlur:function(e){setError(validateCardNumber(e.target.value)?null:"Номер карты введён неверно"),setIsCardNumberFocused(!1)},className:classnames_default()(index_module.multistepInput,index_module.cardNumberInput,(0,defineProperty.Z)({},index_module.cardNumberInputValid,validateCardNumber(cardNumber))),inputMode:"numeric",pattern:"[0-9]*"}),isShowExpiry&&(0,jsx_runtime.jsx)("input",{ref:expiryRefCallback,type:"text",value:String(cardExpiry),onInput:function(_ref3){var _expiryRef$current2,value=_ref3.target.value;setCardExpiry(value),validateExpiry(value)&&(needCvv?(setStep(3),setTimeout(function(){var _cvvRef$current;return null===(_cvvRef$current=cvvRef.current)||void 0===_cvvRef$current?void 0:_cvvRef$current.focus()},100)):(null===(_expiryRef$current2=expiryRef.current)||void 0===_expiryRef$current2||_expiryRef$current2.blur(),null==onSubmit||onSubmit({number:cardNumber,expiryDate:expiryAsDate?parseDate(value):value})))},onBlur:function(e){setError(validateExpiry(e.target.value)?null:"Срок действия карты введён неверно")},className:classnames_default()(index_module.multistepInput,index_module.expiryInput),inputMode:"numeric",pattern:"[0-9]*",placeholder:"ММ/ГГ"}),isShowCvv&&(0,jsx_runtime.jsx)("input",{ref:cvvRefCallback,type:"password",value:cardCvv||"",onInput:function(_ref4){var _cvvRef$current2,value=_ref4.target.value;setCardCvv(value),validateCvv(value)&&(null===(_cvvRef$current2=cvvRef.current)||void 0===_cvvRef$current2||_cvvRef$current2.blur(),null==onSubmit||onSubmit({number:cardNumber,expiryDate:expiryAsDate?parseDate(cardExpiry):cardExpiry,cvv:value}))},onBlur:function(e){setError(validateCvv(e.target.value)?null:"Нужно заполнить CVV")},className:classnames_default()(index_module.multistepInput,index_module.cvvInput),inputMode:"numeric",pattern:"[0-9]*",placeholder:"CVC",maxLength:3})]})]})});try{MultiStepCardInput.displayName="MultiStepCardInput",MultiStepCardInput.__docgenInfo={description:"",displayName:"MultiStepCardInput",props:{onInput:{defaultValue:null,description:"Обработчик ввода для новой карты",name:"onInput",required:!1,type:{name:"((value: CardData) => void) | undefined"}},onSubmit:{defaultValue:null,description:"Обработчик отправки новой карты",name:"onSubmit",required:!1,type:{name:"((value: CardData) => void) | undefined"}},needCvv:{defaultValue:null,description:"Нужно ли отображать поле для ввода CVV",name:"needCvv",required:!1,type:{name:"boolean | undefined"}},needExpiryDate:{defaultValue:null,description:"Нужно ли отображать поле для ввода срока действия карты",name:"needExpiryDate",required:!1,type:{name:"boolean | undefined"}},expiryAsDate:{defaultValue:null,description:"Нужно ли отправлять срок действия карты в формате Date",name:"expiryAsDate",required:!1,type:{name:"boolean | undefined"}},cardImage:{defaultValue:null,description:"Данные карты для отображения",name:"cardImage",required:!1,type:{name:"SingleProps | undefined"}},size:{defaultValue:null,description:"",name:"size",required:!0,type:{name:"40 | 48 | 56 | 64 | 72"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/account-select/src/components/multi-step-card-input/index.tsx#MultiStepCardInput"]={docgenInfo:MultiStepCardInput.__docgenInfo,name:"MultiStepCardInput",path:"packages/account-select/src/components/multi-step-card-input/index.tsx#MultiStepCardInput"})}catch(__react_docgen_typescript_loader_error){}var _excluded=["innerProps","selected","label","onSubmit","onInput","needCvv","needExpiryDate","expiryAsDate","view","cardImage","leftAddons","valueRenderer","size"],CustomField=function(_ref){var innerProps=_ref.innerProps,selected=_ref.selected,label=_ref.label,onSubmit=_ref.onSubmit,onInput=_ref.onInput,needCvv=_ref.needCvv,needExpiryDate=_ref.needExpiryDate,expiryAsDate=_ref.expiryAsDate,_ref$view=_ref.view,cardImage=_ref.cardImage,leftAddons=_ref.leftAddons,valueRenderer=_ref.valueRenderer,size=_ref.size,restProps=(0,objectWithoutProperties.Z)(_ref,_excluded),FormControlComponent="mobile"===(void 0===_ref$view?"desktop":_ref$view)?mobile.FormControlMobile:desktop.FormControlDesktop;return(0,jsx_runtime.jsx)(shared.Field,(0,objectSpread2.Z)((0,objectSpread2.Z)({FormControlComponent:FormControlComponent,size:size,label:selected?null:label,selected:selected,innerProps:innerProps,leftAddons:selected?void 0:leftAddons,addonsClassName:"leftAddon_yapZV"},restProps),{},{valueRenderer:function(_ref2){var selectedOption=_ref2.selected,selectedOptions=_ref2.selectedMultiple;return(null==selectedOption?void 0:selectedOption.key)===constants._x?(0,jsx_runtime.jsx)(MultiStepCardInput,{onSubmit:onSubmit,onInput:onInput,cardImage:cardImage,needCvv:needCvv,needExpiryDate:needExpiryDate,expiryAsDate:expiryAsDate,size:size}):valueRenderer&&selected?valueRenderer({selected:selectedOption,selectedMultiple:selectedOptions}):null==selectedOption?void 0:selectedOption.content}}))};try{CustomField.displayName="CustomField",CustomField.__docgenInfo={description:"",displayName:"CustomField",props:{view:{defaultValue:{value:"desktop"},description:"",name:"view",required:!1,type:{name:'"desktop" | "mobile" | undefined'}},className:{defaultValue:null,description:"Дополнительный класс",name:"className",required:!1,type:{name:"string | undefined"}},selected:{defaultValue:null,description:"Выбранный пункт",name:"selected",required:!1,type:{name:"OptionShape | undefined"}},selectedMultiple:{defaultValue:null,description:"Список выбранных пунктов",name:"selectedMultiple",required:!1,type:{name:"OptionShape[] | undefined"}},setSelectedItems:{defaultValue:null,description:"Метод для ручной установки выбранных пунктов",name:"setSelectedItems",required:!0,type:{name:"(selected: OptionShape[]) => void"}},toggleMenu:{defaultValue:null,description:"Метод переключающий видимость выпадающего списка",name:"toggleMenu",required:!0,type:{name:"() => void"}},multiple:{defaultValue:null,description:"Флаг, можно ли выбрать несколько значений",name:"multiple",required:!1,type:{name:"boolean | undefined"}},open:{defaultValue:null,description:"Флаг, открыто ли меню",name:"open",required:!1,type:{name:"boolean | undefined"}},disabled:{defaultValue:null,description:"Флаг, поле заблокировано",name:"disabled",required:!1,type:{name:"boolean | undefined"}},label:{defaultValue:null,description:"Лейбл поля",name:"label",required:!1,type:{name:"ReactNode"}},labelView:{defaultValue:null,description:"Вид лейбла внутри / снаружи",name:"labelView",required:!1,type:{name:'"inner" | "outer" | undefined'}},placeholder:{defaultValue:null,description:"Плейсхолдер поля",name:"placeholder",required:!1,type:{name:"string | undefined"}},error:{defaultValue:null,description:"Отображение ошибки",name:"error",required:!1,type:{name:"ReactNode"}},success:{defaultValue:null,description:"Отображение иконки успеха",name:"success",required:!1,type:{name:"boolean | undefined"}},hint:{defaultValue:null,description:"Подсказка под полем",name:"hint",required:!1,type:{name:"ReactNode"}},Arrow:{defaultValue:null,description:"Компонент стрелки",name:"Arrow",required:!1,type:{name:"false | ReactElement<any, string | JSXElementConstructor<any>> | null | undefined"}},valueRenderer:{defaultValue:null,description:"Кастомный рендер выбранного пункта",name:"valueRenderer",required:!1,type:{name:"(({ selected, selectedMultiple, }: { selected?: OptionShape | undefined; selectedMultiple: OptionShape[]; valueSeparator?: string | undefined; }) => ReactNode) | undefined"}},valueSeparator:{defaultValue:null,description:"Кастомный разделитель выбранных пунктов",name:"valueSeparator",required:!1,type:{name:"string | undefined"}},innerProps:{defaultValue:null,description:"Внутренние свойства, которые должны быть установлены компоненту.",name:"innerProps",required:!0,type:{name:"{ onBlur?: ((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void) | undefined; onFocus?: ((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void) | undefined; onClick?: ((event: MouseEvent<...>) => void) | undefined; tabIndex?: number | undefined; id: string; } & RefAttributes<......"}},dataTestId:{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования",name:"dataTestId",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/account-select/src/components/custom-field/index.tsx#CustomField"]={docgenInfo:CustomField.__docgenInfo,name:"CustomField",path:"packages/account-select/src/components/custom-field/index.tsx#CustomField"})}catch(__react_docgen_typescript_loader_error){}},"./packages/account-select/src/constants.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{IL:function(){return EXPIRY_MASK},_x:function(){return ADD_CARD_KEY},g1:function(){return CVV_MASK},hZ:function(){return CARD_MASK},zG:function(){return PRODUCT_COVER_SIZE_MAPPER}});var ADD_CARD_KEY="#ADD_NEW_CARD",PRODUCT_COVER_SIZE_MAPPER={40:32,48:32,56:40,64:40,72:48},CARD_MASK={mask:[/\d/,/\d/,/\d/,/\d/," ",/\d/,/\d/,/\d/,/\d/," ",/\d/,/\d/,/\d/,/\d/," ",/\d/,/\d/,/\d/,/\d/]},EXPIRY_MASK={mask:[/\d/,/\d/,"/",/\d/,/\d/]},CVV_MASK={mask:[/\d/,/\d/,/\d/]}},"./packages/account-select/src/context.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{R:function(){return useAccountSelectContext},r:function(){return AccountSelectContext}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),AccountSelectContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({setError:function setError(){}}),useAccountSelectContext=function(){return(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(AccountSelectContext)}},"./packages/account-select/src/desktop/Component.desktop.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{o:function(){return AccountSelectDesktop}});var toConsumableArray=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),slicedToArray=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),objectWithoutProperties=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),objectSpread2=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),react=__webpack_require__("./node_modules/react/index.js"),modern=__webpack_require__("./dist/popover/modern/index.js"),shared=__webpack_require__("./dist/select/modern/shared/index.js"),custom_field=__webpack_require__("./packages/account-select/src/components/custom-field/index.tsx"),constants=__webpack_require__("./packages/account-select/src/constants.ts"),context=__webpack_require__("./packages/account-select/src/context.ts"),index_module={accountSelect:"accountSelect_SJG4U",optionContent:"optionContent_blh1r"},jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["OptionsList","Optgroup","Option","closeOnSelect","options","cardAddingProps","dataTestId","onChange","size"],_excluded2=["content"],DefaultOption=function(props){return(0,jsx_runtime.jsx)(shared.BaseOption,(0,objectSpread2.Z)((0,objectSpread2.Z)({},props),{},{children:(0,jsx_runtime.jsx)("div",{className:index_module.optionContent,children:props.option.content})}))},AccountSelectDesktop=(0,react.forwardRef)(function(_ref,ref){var _ref$OptionsList=_ref.OptionsList,OptionsList=void 0===_ref$OptionsList?shared.OptionsList:_ref$OptionsList,_ref$Optgroup=_ref.Optgroup,Optgroup=void 0===_ref$Optgroup?shared.Optgroup:_ref$Optgroup,_ref$Option=_ref.Option,_ref$closeOnSelect=_ref.closeOnSelect,options=_ref.options,cardAddingProps=_ref.cardAddingProps,dataTestId=_ref.dataTestId,onChange=_ref.onChange,_ref$size=_ref.size,size=void 0===_ref$size?72:_ref$size,restProps=(0,objectWithoutProperties.Z)(_ref,_excluded),_useState=(0,react.useState)(null),_useState2=(0,slicedToArray.Z)(_useState,2),error=_useState2[0],setError=_useState2[1],_ref2=cardAddingProps||{},content=_ref2.content,restCardAddingProps=(0,objectWithoutProperties.Z)(_ref2,_excluded2),enhancedOptions=(0,react.useMemo)(function(){return content?[{key:constants._x,content:content,value:constants._x}].concat((0,toConsumableArray.Z)(options)):options},[content,options]),contextValue=(0,react.useMemo)(function(){return{setError:setError}},[setError]);return(0,jsx_runtime.jsx)(context.r.Provider,{value:contextValue,children:(0,jsx_runtime.jsx)(shared.BaseSelect,(0,objectSpread2.Z)((0,objectSpread2.Z)({dataTestId:dataTestId,className:index_module.accountSelect,error:error,view:"desktop",Popover:modern.Popover,ref:ref,onChange:function(payload){setError(null),null==onChange||onChange(payload)},options:enhancedOptions,closeOnSelect:void 0===_ref$closeOnSelect||_ref$closeOnSelect,Option:void 0===_ref$Option?DefaultOption:_ref$Option,Field:custom_field.J,Optgroup:Optgroup,OptionsList:OptionsList,Arrow:shared.Arrow,optionClassName:index_module.option,size:size},restProps),{},{fieldProps:(0,objectSpread2.Z)((0,objectSpread2.Z)((0,objectSpread2.Z)({},restProps.fieldProps),restCardAddingProps),{},{size:size})}))})});try{AccountSelectDesktop.displayName="AccountSelectDesktop",AccountSelectDesktop.__docgenInfo={description:"",displayName:"AccountSelectDesktop",props:{cardAddingProps:{defaultValue:null,description:"Пропсы для добавления новой карты",name:"cardAddingProps",required:!1,type:{name:"CardAddingProps | undefined"}},size:{defaultValue:{value:"72"},description:"Размер компонента\n@description s, m, l, xl deprecated, используйте вместо них 48, 56, 64, 72 соответственно",name:"size",required:!1,type:{name:'"s" | "m" | "l" | "xl" | 40 | 48 | 56 | 64 | 72 | undefined'}},onChange:{defaultValue:null,description:"Обработчик выбора",name:"onChange",required:!1,type:{name:"((payload: BaseSelectChangePayload) => void) | undefined"}},disabled:{defaultValue:null,description:"Управление возможностью выбора значения",name:"disabled",required:!1,type:{name:"boolean | undefined"}},multiple:{defaultValue:null,description:"Возможность выбрать несколько значений",name:"multiple",required:!1,type:{name:"boolean | undefined"}},name:{defaultValue:null,description:"Атрибут name",name:"name",required:!1,type:{name:"string | undefined"}},placeholder:{defaultValue:null,description:"Плейсхолдер поля",name:"placeholder",required:!1,type:{name:"string | undefined"}},className:{defaultValue:null,description:"Дополнительный класс",name:"className",required:!1,type:{name:"string | undefined"}},id:{defaultValue:null,description:"Атрибут id",name:"id",required:!1,type:{name:"string | undefined"}},onFocus:{defaultValue:null,description:"Обработчик фокуса поля",name:"onFocus",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void) | undefined"}},onBlur:{defaultValue:null,description:"Обработчик блюра поля",name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void) | undefined"}},onScroll:{defaultValue:null,description:"Обработчик скрола",name:"onScroll",required:!1,type:{name:"((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined"}},block:{defaultValue:null,description:"Растягивает компонент на ширину контейнера",name:"block",required:!1,type:{name:"boolean | undefined"}},clear:{defaultValue:null,description:"Флаг, показать крестик для очистки поля",name:"clear",required:!1,type:{name:"boolean | undefined"}},error:{defaultValue:null,description:"Отображение ошибки",name:"error",required:!1,type:{name:"ReactNode"}},hint:{defaultValue:null,description:"Подсказка под полем",name:"hint",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"Лейбл поля",name:"label",required:!1,type:{name:"ReactNode"}},labelView:{defaultValue:null,description:"Вид лейбла внутри / снаружи",name:"labelView",required:!1,type:{name:'"inner" | "outer" | undefined'}},fieldClassName:{defaultValue:null,description:"Дополнительный класс для поля",name:"fieldClassName",required:!1,type:{name:"string | undefined"}},onClear:{defaultValue:null,description:"Обработчик нажатия на крестик для очистки поля",name:"onClear",required:!1,type:{name:"((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined"}},dataTestId:{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования.\nДля пункта меню используется модификатор -option, компонента поиска -search,\nкомпонента выпадающего меню -options-list, компонента BottomSheet -bottom-sheet,\nкомпонента поля -field, компонета FormControl -field-form-control",name:"dataTestId",required:!1,type:{name:"string | undefined"}},open:{defaultValue:null,description:"Управление открытием",name:"open",required:!1,type:{name:"boolean | undefined"}},popoverProps:{defaultValue:null,description:"Дополнительные пропсы для Popover",name:"popoverProps",required:!1,type:{name:'Omit<PopoverProps, "className" | "dataTestId" | "open" | "position" | "zIndex" | "update" | "anchorElement" | "preventFlip"> | undefined'}},environment:{defaultValue:{value:"window"},description:"Контекст окружения для downshift.js",name:"environment",required:!1,type:{name:"Environment | undefined"}},onOpen:{defaultValue:null,description:"Обработчик открытия\\закрытия селекта",name:"onOpen",required:!1,type:{name:"((payload: { open?: boolean | undefined; name?: string | undefined; }) => void) | undefined"}},updatePopover:{defaultValue:null,description:"Хранит функцию, с помощью которой можно обновить положение поповера",name:"updatePopover",required:!1,type:{name:"MutableRefObject<(() => void) | undefined> | undefined"}},preventFlip:{defaultValue:null,description:"Запрещает поповеру менять свою позицию.\nНапример, если места снизу недостаточно,то он все равно будет показан снизу",name:"preventFlip",required:!1,type:{name:"boolean | undefined"}},selected:{defaultValue:null,description:"Список value выбранных пунктов (controlled-селект)",name:"selected",required:!1,type:{name:"string | OptionShape | (string | OptionShape)[] | null | undefined"}},fieldProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент поля",name:"fieldProps",required:!1,type:{name:"unknown"}},optionsListClassName:{defaultValue:null,description:"Дополнительный класс выпадающего меню",name:"optionsListClassName",required:!1,type:{name:"string | undefined"}},optionClassName:{defaultValue:null,description:"Дополнительный класс для пункта меню",name:"optionClassName",required:!1,type:{name:"string | undefined"}},optionGroupClassName:{defaultValue:null,description:"Дополнительный класс для компонента группы пунктов",name:"optionGroupClassName",required:!1,type:{name:"string | undefined"}},popperClassName:{defaultValue:null,description:"Дополнительный класс для поповера",name:"popperClassName",required:!1,type:{name:"string | undefined"}},options:{defaultValue:null,description:"Список вариантов выбора",name:"options",required:!0,type:{name:"(OptionShape | GroupShape)[]"}},defaultOpen:{defaultValue:null,description:"Начальное состояние селекта",name:"defaultOpen",required:!1,type:{name:"boolean | undefined"}},optionsSize:{defaultValue:null,description:"Размер пунктов меню\n@description s, m, l, xl deprecated, используйте вместо них 48, 56, 64, 72 соответственно",name:"optionsSize",required:!1,type:{name:'"s" | "m" | "l" | "xl" | 40 | 48 | 56 | 64 | 72 | undefined'}},optionsListWidth:{defaultValue:null,description:"Управляет шириной выпадающего меню.\nШирину определяет контент, либо ширина равна ширине поля",name:"optionsListWidth",required:!1,type:{name:'"content" | "field" | undefined'}},allowUnselect:{defaultValue:null,description:"Позволяет снять выбранное значение",name:"allowUnselect",required:!1,type:{name:"boolean | undefined"}},closeOnSelect:{defaultValue:{value:"true"},description:"Закрывать меню после выбора?",name:"closeOnSelect",required:!1,type:{name:"boolean | undefined"}},circularNavigation:{defaultValue:null,description:"При навигации с клавиатуры переходить от последнего пункта меню к первому и наоборот.",name:"circularNavigation",required:!1,type:{name:"boolean | undefined"}},popoverPosition:{defaultValue:null,description:"Позиционирование выпадающего списка",name:"popoverPosition",required:!1,type:{name:"Position | undefined"}},visibleOptions:{defaultValue:null,description:"Количество видимых пунктов меню (5 = 5.5)",name:"visibleOptions",required:!1,type:{name:"number | undefined"}},valueRenderer:{defaultValue:null,description:"Кастомный рендер выбранного пункта",name:"valueRenderer",required:!1,type:{name:"(({ selected, selectedMultiple, }: { selected?: OptionShape | undefined; selectedMultiple: OptionShape[]; valueSeparator?: string | undefined; }) => ReactNode) | undefined"}},valueSeparator:{defaultValue:null,description:"Кастомный разделитель выбранных пунктов (Работает когда не прокинут valueRenderer)",name:"valueSeparator",required:!1,type:{name:"string | undefined"}},Arrow:{defaultValue:null,description:"Компонент стрелки",name:"Arrow",required:!1,type:{name:"false | ComponentType<ArrowProps> | null | undefined"}},optionsListProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент списка",name:"optionsListProps",required:!1,type:{name:"unknown"}},optionProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент пункта меню",name:"optionProps",required:!1,type:{name:"unknown"}},groupOptionProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент группового пункта меню",name:"groupOptionProps",required:!1,type:{name:"AnyObject | undefined"}},OptionsList:{defaultValue:{value:"forwardRef<HTMLDivElement, OptionsListProps>(\n    (\n        {\n            size = 48,\n            className,\n            optionGroupClassName,\n            footerClassName,\n            scrollbarClassName,\n            Option,\n            getOptionProps,\n            groupOptionProps = {},\n            options = [],\n            Optgroup = DefaultOptgroup,\n            dataTestId,\n            emptyPlaceholder,\n            visibleOptions = DEFAULT_VISIBLE_OPTIONS,\n            onScroll,\n            open,\n            header,\n            footer,\n            showFooter = true,\n            optionsListWidth,\n            nativeScrollbar: nativeScrollbarProp,\n            flatOptions = [],\n            setHighlightedIndex,\n            selectedItems,\n            search,\n            setSelectedItems,\n            multiple,\n            limitDynamicOptionGroupSize = false,\n        },\n        ref,\n    ) => {\n        const [scrollTop, setScrollTop] = useState(true);\n        const [scrollBottom, setScrollBottom] = useState(false);\n\n        const query = '(max-width: 1023px)';\n        let [nativeScrollbar] = useMatchMedia(query, () =>\n            isClient() ? window.matchMedia(query).matches : true,\n        );\n\n        nativeScrollbar = Boolean(nativeScrollbarProp ?? nativeScrollbar);\n\n        const handleScroll = useCallback(\n            (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n                const scrolledToHeader = event.currentTarget.scrollTop <= 0;\n                const scrolledToFooter =\n                    event.currentTarget.scrollHeight - event.currentTarget.offsetHeight <=\n                    event.currentTarget.scrollTop;\n\n                setScrollTop(scrolledToHeader);\n                setScrollBottom(scrolledToFooter);\n\n                onScroll?.(event);\n            },\n            [onScroll],\n        );\n\n        const renderOption = (option: OptionShape, index: number) => (\n            <Option key={option.key} {...getOptionProps(option, index)} />\n        );\n\n        const listRef = useRef<HTMLDivElement>(null);\n        const scrollbarRef = useRef<HTMLDivElement>(null);\n        const counter = createCounter();\n        const renderGroup = (group: GroupShape) => {\n            const groupSelectedItems = selectedItems?.filter(({ key: selectedItemKey }) =>\n                group.options.some((option) => option.key === selectedItemKey),\n            );\n            const handleSelectedItems = (items: OptionShape[]) => {\n                setSelectedItems(\n                    (\n                        selectedItems?.filter(\n                            ({ key: selectedItemKey }) =>\n                                !group.options.some((option) => option.key === selectedItemKey),\n                        ) ?? []\n                    ).concat(items),\n                );\n            };\n\n            return (\n                <Optgroup\n                    className={optionGroupClassName}\n                    label={group.label}\n                    key={group.label}\n                    size={size}\n                    options={group.options}\n                    selectedItems={groupSelectedItems}\n                    setSelectedItems={handleSelectedItems}\n                    search={search}\n                    multiple={multiple}\n                    {...groupOptionProps}\n                >\n                    {group.options.map((option) => renderOption(option, counter()))}\n                </Optgroup>\n            );\n        };\n\n        const actualOptionsCount = limitDynamicOptionGroupSize && options.length > 0;\n\n        const [measured, height] = useVisibleOptions({\n            visibleOptions,\n            listRef,\n            open,\n            options,\n            actualOptionsCount,\n            size: actualOptionsCount\n                ? (() => {\n                      switch (typeof size) {\n                          case 'string':\n                              throw new Error(\n                                  'OptionsList with `limitDynamicOptionGroupSize` enabled needs a `size` with number type',\n                              );\n                          default:\n                              return size;\n                      }\n                  })()\n                : undefined,\n        });\n\n        if (options.length === 0 && !emptyPlaceholder && !header && !footer) {\n            return null;\n        }\n\n        const renderListItems = () => (\n            <React.Fragment>\n                {options.map((option) =>\n                    isGroup(option) ? renderGroup(option) : renderOption(option, counter()),\n                )}\n\n                {emptyPlaceholder && options.length === 0 && (\n                    <div className={styles.emptyPlaceholder}>{emptyPlaceholder}</div>\n                )}\n            </React.Fragment>\n        );\n\n        const renderWithCustomScrollbar = () => {\n            const scrollableNodeProps = {\n                onScroll: handleScroll,\n                'data-test-id': dataTestId,\n                ref: ref as React.RefObject<HTMLDivElement>,\n            };\n\n            return (\n                <Scrollbar\n                    className={cn(styles.scrollable, scrollbarClassName)}\n                    ref={scrollbarRef}\n                    style={{ height }}\n                    horizontalAutoStretch={optionsListWidth === 'content'}\n                    scrollableNodeProps={scrollableNodeProps}\n                    contentNodeProps={{ ref: listRef }}\n                    maskProps={{\n                        /*\n                         * Для корректного подсчета высоты опций(иначе для optionsListWidth: 'field'\n                         * высота опции всегда будет равна высоте одной строчки)\n                         */\n                        className: cn({\n                            [styles.mask]: optionsListWidth === 'content' && !measured,\n                        }),\n                    }}\n                >\n                    {renderListItems()}\n                </Scrollbar>\n            );\n        };\n\n        const renderWithNativeScrollbar = () => (\n            <div\n                className={cn(styles.scrollable, scrollbarClassName)}\n                ref={mergeRefs([listRef, ref])}\n                onScroll={handleScroll}\n                style={{ height }}\n            >\n                {renderListItems()}\n            </div>\n        );\n\n        const resetHighlightedIndex = () => setHighlightedIndex?.(-1);\n\n        return (\n            <div\n                {...(nativeScrollbar && { 'data-test-id': dataTestId })}\n                className={cn(styles.optionsList, styles[SIZE_TO_CLASSNAME_MAP[size]], className)}\n            >\n                {header && (\n                    <div\n                        className={cn(styles.optionsListHeader, {\n                            [styles.headerHighlighted]: !scrollTop,\n                        })}\n                        onMouseEnter={resetHighlightedIndex}\n                    >\n                        {header}\n                    </div>\n                )}\n\n                {nativeScrollbar ? renderWithNativeScrollbar() : renderWithCustomScrollbar()}\n\n                {showFooter && footer && (\n                    <div\n                        onMouseEnter={resetHighlightedIndex}\n                        className={cn(styles.optionsListFooter, footerClassName, {\n                            [styles.withBorder]:\n                                visibleOptions &&\n                                flatOptions.length > visibleOptions &&\n                                !scrollBottom,\n                        })}\n                    >\n                        {footer}\n                    </div>\n                )}\n            </div>\n        );\n    },\n)"},description:"Компонент выпадающего меню",name:"OptionsList",required:!1,type:{name:"ComponentType<OptionsListProps & RefAttributes<HTMLDivElement>> | undefined"}},Optgroup:{defaultValue:{value:"({ children, className, label, size = 48 }: OptgroupProps) => (\n    <React.Fragment>\n        <div className={cn(styles.optgroup, className, styles[SIZE_TO_CLASSNAME_MAP[size]])}>\n            <span className={styles.label}>{label}</span>\n        </div>\n        {children}\n    </React.Fragment>\n)"},description:"Компонент группы",name:"Optgroup",required:!1,type:{name:"ComponentType<OptgroupProps> | undefined"}},Option:{defaultValue:{value:"(props: OptionProps) => (\n    <BaseOption {...props}>\n        <div className={styles.optionContent}>{props.option.content}</div>\n    </BaseOption>\n)"},description:"Компонент пункта меню",name:"Option",required:!1,type:{name:"ComponentType<OptionProps> | undefined"}},zIndexPopover:{defaultValue:null,description:"z-index поповера",name:"zIndexPopover",required:!1,type:{name:"number | undefined"}},showEmptyOptionsList:{defaultValue:null,description:"Показывать OptionsList, если он пустой",name:"showEmptyOptionsList",required:!1,type:{name:"boolean | undefined"}},limitDynamicOptionGroupSize:{defaultValue:null,description:"Ограничение динамического размера группы вариантов выбора",name:"limitDynamicOptionGroupSize",required:!1,type:{name:"boolean | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/account-select/src/desktop/Component.desktop.tsx#AccountSelectDesktop"]={docgenInfo:AccountSelectDesktop.__docgenInfo,name:"AccountSelectDesktop",path:"packages/account-select/src/desktop/Component.desktop.tsx#AccountSelectDesktop"})}catch(__react_docgen_typescript_loader_error){}},"./packages/account-select/src/mobile/Component.mobile.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{W:function(){return AccountSelectMobile}});var _home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_alfalab_core_components_select_mobile__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./dist/select/modern/mobile/index.js"),_components_custom_field__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/account-select/src/components/custom-field/index.tsx"),_constants__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./packages/account-select/src/constants.ts"),_context__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./packages/account-select/src/context.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["cardAddingProps","options","closeOnSelect","dataTestId","block","onChange","size"],_excluded2=["content"],MobileCustomField=function(props){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_components_custom_field__WEBPACK_IMPORTED_MODULE_3__.J,(0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_4__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_4__.Z)({},props),{},{view:"mobile"}))},AccountSelectMobile=(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function(_ref,ref){var cardAddingProps=_ref.cardAddingProps,options=_ref.options,_ref$closeOnSelect=_ref.closeOnSelect,dataTestId=_ref.dataTestId,_ref$block=_ref.block,onChange=_ref.onChange,_ref$size=_ref.size,size=void 0===_ref$size?72:_ref$size,restProps=(0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties_js__WEBPACK_IMPORTED_MODULE_5__.Z)(_ref,_excluded),_useState=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),_useState2=(0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_6__.Z)(_useState,2),error=_useState2[0],setError=_useState2[1],_ref2=null!=cardAddingProps?cardAddingProps:{},content=_ref2.content,restCardAddingProps=(0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties_js__WEBPACK_IMPORTED_MODULE_5__.Z)(_ref2,_excluded2),enhancedOptions=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function(){return content?[{key:_constants__WEBPACK_IMPORTED_MODULE_7__._x,content:content,value:_constants__WEBPACK_IMPORTED_MODULE_7__._x}].concat((0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray_js__WEBPACK_IMPORTED_MODULE_8__.Z)(options)):options},[content,options]),contextValue=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function(){return{setError:setError}},[setError]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_context__WEBPACK_IMPORTED_MODULE_9__.r.Provider,{value:contextValue,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_alfalab_core_components_select_mobile__WEBPACK_IMPORTED_MODULE_1__.SelectMobile,(0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_4__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_4__.Z)({block:void 0===_ref$block||_ref$block,dataTestId:dataTestId,error:error,ref:ref,onChange:function(payload){setError(null),null==onChange||onChange(payload)},size:size},restProps),{},{options:enhancedOptions,closeOnSelect:void 0===_ref$closeOnSelect||_ref$closeOnSelect,Field:MobileCustomField,isBottomSheet:!0,fieldProps:(0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_4__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_4__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_4__.Z)({},restProps.fieldProps),restCardAddingProps),{},{size:size})}))})});try{AccountSelectMobile.displayName="AccountSelectMobile",AccountSelectMobile.__docgenInfo={description:"",displayName:"AccountSelectMobile",props:{cardAddingProps:{defaultValue:null,description:"Пропсы для добавления новой карты",name:"cardAddingProps",required:!1,type:{name:"CardAddingProps | undefined"}},size:{defaultValue:{value:"72"},description:"Размер компонента\n@description s, m, l, xl deprecated, используйте вместо них 48, 56, 64, 72 соответственно",name:"size",required:!1,type:{name:'"s" | "m" | "l" | "xl" | 40 | 48 | 56 | 64 | 72 | undefined'}},onChange:{defaultValue:null,description:"Обработчик выбора",name:"onChange",required:!1,type:{name:"((payload: BaseSelectChangePayload) => void) | undefined"}},disabled:{defaultValue:null,description:"Управление возможностью выбора значения",name:"disabled",required:!1,type:{name:"boolean | undefined"}},multiple:{defaultValue:null,description:"Возможность выбрать несколько значений",name:"multiple",required:!1,type:{name:"boolean | undefined"}},name:{defaultValue:null,description:"Атрибут name",name:"name",required:!1,type:{name:"string | undefined"}},placeholder:{defaultValue:null,description:"Плейсхолдер поля",name:"placeholder",required:!1,type:{name:"string | undefined"}},className:{defaultValue:null,description:"Дополнительный класс",name:"className",required:!1,type:{name:"string | undefined"}},id:{defaultValue:null,description:"Атрибут id",name:"id",required:!1,type:{name:"string | undefined"}},onFocus:{defaultValue:null,description:"Обработчик фокуса поля",name:"onFocus",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void) | undefined"}},onBlur:{defaultValue:null,description:"Обработчик блюра поля",name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void) | undefined"}},onScroll:{defaultValue:null,description:"Обработчик скрола",name:"onScroll",required:!1,type:{name:"((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined"}},block:{defaultValue:{value:"true"},description:"Растягивает компонент на ширину контейнера",name:"block",required:!1,type:{name:"boolean | undefined"}},clear:{defaultValue:null,description:"Флаг, показать крестик для очистки поля",name:"clear",required:!1,type:{name:"boolean | undefined"}},error:{defaultValue:null,description:"Отображение ошибки",name:"error",required:!1,type:{name:"ReactNode"}},hint:{defaultValue:null,description:"Подсказка под полем",name:"hint",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"Лейбл поля",name:"label",required:!1,type:{name:"ReactNode"}},labelView:{defaultValue:null,description:"Вид лейбла внутри / снаружи",name:"labelView",required:!1,type:{name:'"inner" | "outer" | undefined'}},fieldClassName:{defaultValue:null,description:"Дополнительный класс для поля",name:"fieldClassName",required:!1,type:{name:"string | undefined"}},onClear:{defaultValue:null,description:"Обработчик нажатия на крестик для очистки поля",name:"onClear",required:!1,type:{name:"((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined"}},dataTestId:{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования.\nДля пункта меню используется модификатор -option, компонента поиска -search,\nкомпонента выпадающего меню -options-list, компонента BottomSheet -bottom-sheet,\nкомпонента поля -field, компонета FormControl -field-form-control",name:"dataTestId",required:!1,type:{name:"string | undefined"}},open:{defaultValue:null,description:"Управление открытием",name:"open",required:!1,type:{name:"boolean | undefined"}},popoverProps:{defaultValue:null,description:"Дополнительные пропсы для Popover",name:"popoverProps",required:!1,type:{name:'Omit<PopoverProps, "className" | "dataTestId" | "open" | "position" | "zIndex" | "update" | "anchorElement" | "preventFlip"> | undefined'}},environment:{defaultValue:{value:"window"},description:"Контекст окружения для downshift.js",name:"environment",required:!1,type:{name:"Environment | undefined"}},onOpen:{defaultValue:null,description:"Обработчик открытия\\закрытия селекта",name:"onOpen",required:!1,type:{name:"((payload: { open?: boolean | undefined; name?: string | undefined; }) => void) | undefined"}},updatePopover:{defaultValue:null,description:"Хранит функцию, с помощью которой можно обновить положение поповера",name:"updatePopover",required:!1,type:{name:"MutableRefObject<(() => void) | undefined> | undefined"}},preventFlip:{defaultValue:null,description:"Запрещает поповеру менять свою позицию.\nНапример, если места снизу недостаточно,то он все равно будет показан снизу",name:"preventFlip",required:!1,type:{name:"boolean | undefined"}},selected:{defaultValue:null,description:"Список value выбранных пунктов (controlled-селект)",name:"selected",required:!1,type:{name:"string | OptionShape | (string | OptionShape)[] | null | undefined"}},fieldProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент поля",name:"fieldProps",required:!1,type:{name:"unknown"}},optionsListClassName:{defaultValue:null,description:"Дополнительный класс выпадающего меню",name:"optionsListClassName",required:!1,type:{name:"string | undefined"}},optionClassName:{defaultValue:null,description:"Дополнительный класс для пункта меню",name:"optionClassName",required:!1,type:{name:"string | undefined"}},optionGroupClassName:{defaultValue:null,description:"Дополнительный класс для компонента группы пунктов",name:"optionGroupClassName",required:!1,type:{name:"string | undefined"}},popperClassName:{defaultValue:null,description:"Дополнительный класс для поповера",name:"popperClassName",required:!1,type:{name:"string | undefined"}},options:{defaultValue:null,description:"Список вариантов выбора",name:"options",required:!0,type:{name:"(OptionShape | GroupShape)[]"}},defaultOpen:{defaultValue:null,description:"Начальное состояние селекта",name:"defaultOpen",required:!1,type:{name:"boolean | undefined"}},optionsSize:{defaultValue:null,description:"Размер пунктов меню\n@description s, m, l, xl deprecated, используйте вместо них 48, 56, 64, 72 соответственно",name:"optionsSize",required:!1,type:{name:'"s" | "m" | "l" | "xl" | 40 | 48 | 56 | 64 | 72 | undefined'}},optionsListWidth:{defaultValue:null,description:"Управляет шириной выпадающего меню.\nШирину определяет контент, либо ширина равна ширине поля",name:"optionsListWidth",required:!1,type:{name:'"content" | "field" | undefined'}},allowUnselect:{defaultValue:null,description:"Позволяет снять выбранное значение",name:"allowUnselect",required:!1,type:{name:"boolean | undefined"}},closeOnSelect:{defaultValue:{value:"true"},description:"Закрывать меню после выбора?",name:"closeOnSelect",required:!1,type:{name:"boolean | undefined"}},circularNavigation:{defaultValue:null,description:"При навигации с клавиатуры переходить от последнего пункта меню к первому и наоборот.",name:"circularNavigation",required:!1,type:{name:"boolean | undefined"}},popoverPosition:{defaultValue:null,description:"Позиционирование выпадающего списка",name:"popoverPosition",required:!1,type:{name:"Position | undefined"}},visibleOptions:{defaultValue:null,description:"Количество видимых пунктов меню (5 = 5.5)",name:"visibleOptions",required:!1,type:{name:"number | undefined"}},valueRenderer:{defaultValue:null,description:"Кастомный рендер выбранного пункта",name:"valueRenderer",required:!1,type:{name:"(({ selected, selectedMultiple, }: { selected?: OptionShape | undefined; selectedMultiple: OptionShape[]; valueSeparator?: string | undefined; }) => ReactNode) | undefined"}},valueSeparator:{defaultValue:null,description:"Кастомный разделитель выбранных пунктов (Работает когда не прокинут valueRenderer)",name:"valueSeparator",required:!1,type:{name:"string | undefined"}},Arrow:{defaultValue:null,description:"Компонент стрелки",name:"Arrow",required:!1,type:{name:"false | ComponentType<ArrowProps> | null | undefined"}},optionsListProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент списка",name:"optionsListProps",required:!1,type:{name:"unknown"}},optionProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент пункта меню",name:"optionProps",required:!1,type:{name:"unknown"}},groupOptionProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент группового пункта меню",name:"groupOptionProps",required:!1,type:{name:"AnyObject | undefined"}},OptionsList:{defaultValue:null,description:"Компонент выпадающего меню",name:"OptionsList",required:!1,type:{name:"ComponentType<OptionsListProps & RefAttributes<HTMLDivElement>> | undefined"}},Optgroup:{defaultValue:null,description:"Компонент группы",name:"Optgroup",required:!1,type:{name:"ComponentType<OptgroupProps> | undefined"}},Option:{defaultValue:null,description:"Компонент пункта меню",name:"Option",required:!1,type:{name:"ComponentType<OptionProps> | undefined"}},zIndexPopover:{defaultValue:null,description:"z-index поповера",name:"zIndexPopover",required:!1,type:{name:"number | undefined"}},showEmptyOptionsList:{defaultValue:null,description:"Показывать OptionsList, если он пустой",name:"showEmptyOptionsList",required:!1,type:{name:"boolean | undefined"}},limitDynamicOptionGroupSize:{defaultValue:null,description:"Ограничение динамического размера группы вариантов выбора",name:"limitDynamicOptionGroupSize",required:!1,type:{name:"boolean | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/account-select/src/mobile/Component.mobile.tsx#AccountSelectMobile"]={docgenInfo:AccountSelectMobile.__docgenInfo,name:"AccountSelectMobile",path:"packages/account-select/src/mobile/Component.mobile.tsx#AccountSelectMobile"})}catch(__react_docgen_typescript_loader_error){}}}]);