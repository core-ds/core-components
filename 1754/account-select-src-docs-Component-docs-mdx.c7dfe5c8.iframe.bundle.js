"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6891,2260,1341],{"./node_modules/@mdx-js/react/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{MDXContext:function(){return MDXContext},MDXProvider:function(){return MDXProvider},useMDXComponents:function(){return useMDXComponents},withMDXComponents:function(){return withMDXComponents}});var react=__webpack_require__("./node_modules/react/index.js");let MDXContext=react.createContext({});function withMDXComponents(Component){return boundMDXComponent;function boundMDXComponent(props){let allComponents=useMDXComponents(props.components);return react.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){let contextComponents=react.useContext(MDXContext);return react.useMemo(()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components},[contextComponents,components])}let emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react.createElement(MDXContext.Provider,{value:allComponents},children)}},"./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{r:function(){return DocsRenderer}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/react-dom-shim/dist/react-18.mjs"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),defaultComponents={code:_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.bD,a:_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Ct,..._storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.lO},ErrorBoundary=class extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(){super(...arguments),this.state={hasError:!1}}static getDerivedStateFromError(){return{hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err)}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,children)}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components},TDocs=_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.WI;return new Promise((resolve,reject)=>{__webpack_require__.e(1341).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@mdx-js/react/index.js")).then(({MDXProvider})=>(0,_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__.l)(react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorBoundary,{showException:reject,key:Math.random()},react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXProvider,{components},react__WEBPACK_IMPORTED_MODULE_0__.createElement(TDocs,{context,docsParameter}))),element)).then(()=>resolve())})},this.unmount=element=>{(0,_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__.K)(element)}}}},"./node_modules/@storybook/addon-docs/dist/index.mjs":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{$4:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.$4},Ed:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Ed},UG:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.UG},h_:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.h_},oG:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.oG}}),__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")},"./node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.js":function(module,__unused_webpack_exports,__webpack_require__){var mod,secondTarget,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to},mdx_react_shim_exports={};module.exports=__copyProps(__defProp({},"__esModule",{value:!0}),mdx_react_shim_exports),mod=__webpack_require__("./node_modules/@mdx-js/react/index.js"),secondTarget=module.exports,__copyProps(mdx_react_shim_exports,mod,"default"),secondTarget&&__copyProps(secondTarget,mod,"default")},"./packages/account-select/src/docs/Component.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},account_select_desktop:function(){return account_select_desktop},account_select_mobile:function(){return account_select_mobile}});var _account_select_deskt,_account_select_deskt2,_account_select_deskt3,_account_select_mobil,_account_select_mobil2,_account_select_mobil3,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),_desktop__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./packages/account-select/src/desktop/Component.desktop.tsx"),_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./dist/pure-cell/modern/index.js"),_alfalab_core_components_product_cover__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./dist/product-cover/modern/index.js"),_alfalab_icons_glyph_PlusMIcon__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@alfalab/icons-glyph/PlusMIcon.js"),_mobile__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./packages/account-select/src/mobile/Component.mobile.tsx"),_alfalab_core_components_amount__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./dist/amount/modern/index.js"),_alfalab_core_components_typography__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./dist/typography/modern/index.js"),_constants__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./packages/account-select/src/constants.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/react/jsx-runtime.js"),baseCard={baseUrl:"https://online.alfabank.ru/cards-images/cards/",layers:"BACKGROUND,LOGO,PAYMENT_SYSTEM",cardId:"RM"},meta={title:"Components/AccountSelect",component:_desktop__WEBPACK_IMPORTED_MODULE_8__.o,id:"AccountSelect"},DATA=[{text:"Карта с преимуществами",amount:100000099,id:"1"},{text:"Карта с кредитным лимитом",amount:999999,id:"2"},{text:"Карта с вашим дизайном",amount:0,id:"3"}],getOptions=function(){var platform=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"desktop";return DATA.map(function(el){return{key:el.id,value:el,content:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__.PureCell,{verticalPadding:"default",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__.PureCell.Graphics,{verticalAlign:"center",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_product_cover__WEBPACK_IMPORTED_MODULE_3__.ProductCover.Single,{size:"desktop"===platform?48:40})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__.PureCell.Content,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__.PureCell.Main,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_typography__WEBPACK_IMPORTED_MODULE_6__.Typography.Text,{color:"secondary",view:"primary-small",children:el.text}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_amount__WEBPACK_IMPORTED_MODULE_5__.Amount,{value:el.amount,minority:100,currency:"RUR",bold:"major",transparentMinor:!0})]})})]})}})},account_select_desktop={name:"AccountSelectDesktop",render:function render(){var size=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("size",[40,48,56,64,72],72),_useState=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(void 0),_useState2=(0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_9__.Z)(_useState,2),cardImage=_useState2[0],setCardImage=_useState2[1];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_desktop__WEBPACK_IMPORTED_MODULE_8__.o,{size:size,onChange:function onChange(e){console.log(e)},valueRenderer:function valueRenderer(_ref){var selected=_ref.selected;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__.PureCell,{verticalPadding:"none",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__.PureCell.Graphics,{verticalAlign:"center",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_product_cover__WEBPACK_IMPORTED_MODULE_3__.ProductCover.Single,{size:_constants__WEBPACK_IMPORTED_MODULE_10__.zG[size]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__.PureCell.Content,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__.PureCell.Main,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_typography__WEBPACK_IMPORTED_MODULE_6__.Typography.Text,{color:"secondary",view:"primary-small",children:null==selected?void 0:selected.value.text}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_amount__WEBPACK_IMPORTED_MODULE_5__.Amount,{value:null==selected?void 0:selected.value.amount,minority:100,currency:"RUR",bold:"major",transparentMinor:!0})]})})]})},label:(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("label","Элемент"),fieldProps:{leftAddons:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_product_cover__WEBPACK_IMPORTED_MODULE_3__.ProductCover.Single,{size:_constants__WEBPACK_IMPORTED_MODULE_10__.zG[size]})},cardAddingProps:{content:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__.PureCell,{verticalPadding:"default",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__.PureCell.Graphics,{verticalAlign:"center",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_product_cover__WEBPACK_IMPORTED_MODULE_3__.ProductCover.Single,{size:48,iconColor:"var(--color-light-neutral-700)",backgroundColor:"var(--color-light-neutral-200)",icon:_alfalab_icons_glyph_PlusMIcon__WEBPACK_IMPORTED_MODULE_4__.PlusMIcon})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__.PureCell.Content,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__.PureCell.Main,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_typography__WEBPACK_IMPORTED_MODULE_6__.Typography.Text,{view:"component-primary",children:"Новая карта"})})})]}),onInput:function(data){data.number.startsWith("111111")&&setCardImage(baseCard)},onSubmit:function(data){console.log(data)},needCvv:(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("needCvv",!0),needExpiryDate:(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("needExpiryDate",!0),expiryAsDate:(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("expiryAsDate",!0),cardImage:cardImage},options:getOptions()})}},account_select_mobile={name:"AccountSelectMobile",render:function render(){var size=(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.select)("size",[40,48,56,64,72],72);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_mobile__WEBPACK_IMPORTED_MODULE_11__.W,{size:size,label:(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("label","Элемент"),options:getOptions("mobile"),fieldProps:{leftAddons:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_product_cover__WEBPACK_IMPORTED_MODULE_3__.ProductCover.Single,{size:_constants__WEBPACK_IMPORTED_MODULE_10__.zG[size]})},valueRenderer:function valueRenderer(_ref2){var selected=_ref2.selected;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__.PureCell,{verticalPadding:"none",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__.PureCell.Graphics,{verticalAlign:"center",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_product_cover__WEBPACK_IMPORTED_MODULE_3__.ProductCover.Single,{size:_constants__WEBPACK_IMPORTED_MODULE_10__.zG[size]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__.PureCell.Content,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__.PureCell.Main,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_typography__WEBPACK_IMPORTED_MODULE_6__.Typography.Text,{color:"secondary",view:"primary-small",children:null==selected?void 0:selected.value.text}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_amount__WEBPACK_IMPORTED_MODULE_5__.Amount,{value:null==selected?void 0:selected.value.amount,minority:100,currency:"RUR",bold:"major",transparentMinor:!0})]})})]})},cardAddingProps:{content:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__.PureCell,{verticalPadding:"none",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__.PureCell.Graphics,{verticalAlign:"center",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_product_cover__WEBPACK_IMPORTED_MODULE_3__.ProductCover.Single,{size:40,iconColor:"var(--color-light-neutral-700)",backgroundColor:"var(--color-light-neutral-200)",icon:_alfalab_icons_glyph_PlusMIcon__WEBPACK_IMPORTED_MODULE_4__.PlusMIcon})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__.PureCell.Content,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_pure_cell__WEBPACK_IMPORTED_MODULE_2__.PureCell.Main,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_alfalab_core_components_typography__WEBPACK_IMPORTED_MODULE_6__.Typography.Text,{view:"component-primary",children:"Новая карта"})})})]}),needCvv:(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("needCvv",!0),needExpiryDate:(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("needExpiryDate",!0),expiryAsDate:(0,_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)("expiryAsDate",!0)}})}};__webpack_exports__.default=meta,account_select_desktop.parameters=(0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_12__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_12__.Z)({},account_select_desktop.parameters),{},{docs:(0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_12__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_12__.Z)({},null===(_account_select_deskt=account_select_desktop.parameters)||void 0===_account_select_deskt?void 0:_account_select_deskt.docs),{},{source:(0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_12__.Z)({originalSource:"{\n  name: 'AccountSelectDesktop',\n  render: () => {\n    const size = select('size', [40, 48, 56, 64, 72], 72);\n    const [cardImage, setCardImage] = useState<typeof baseCard | undefined>(undefined);\n    const handleInput = (data: CardData) => {\n      if (data.number.startsWith('111111')) {\n        setCardImage(baseCard);\n      }\n    };\n    const handleSubmit = (data: CardData) => {\n      console.log(data);\n    };\n    return <AccountSelectDesktop size={size} onChange={e => {\n      console.log(e);\n    }} valueRenderer={({\n      selected\n    }) => {\n      return <PureCell verticalPadding='none'>\n                            <PureCell.Graphics verticalAlign='center'>\n                                <ProductCover.Single size={PRODUCT_COVER_SIZE_MAPPER[size]} />\n                            </PureCell.Graphics>\n                            <PureCell.Content>\n                                <PureCell.Main>\n                                    <Typography.Text color='secondary' view='primary-small'>\n                                        {selected?.value.text}\n                                    </Typography.Text>\n                                    <Amount value={selected?.value.amount} minority={100} currency='RUR' bold='major' transparentMinor={true} />\n                                </PureCell.Main>\n                            </PureCell.Content>\n                        </PureCell>;\n    }} label={text('label', 'Элемент')} fieldProps={{\n      leftAddons: <ProductCover.Single size={PRODUCT_COVER_SIZE_MAPPER[size]} />\n    }} cardAddingProps={{\n      content: <PureCell verticalPadding='default'>\n                            <PureCell.Graphics verticalAlign='center'>\n                                <ProductCover.Single size={48} iconColor='var(--color-light-neutral-700)' backgroundColor='var(--color-light-neutral-200)' icon={PlusMIcon} />\n                            </PureCell.Graphics>\n                            <PureCell.Content>\n                                <PureCell.Main>\n                                    <Typography.Text view='component-primary'>\n                                        Новая карта\n                                    </Typography.Text>\n                                </PureCell.Main>\n                            </PureCell.Content>\n                        </PureCell>,\n      onInput: handleInput,\n      onSubmit: handleSubmit,\n      needCvv: boolean('needCvv', true),\n      needExpiryDate: boolean('needExpiryDate', true),\n      expiryAsDate: boolean('expiryAsDate', true),\n      cardImage\n    }} options={getOptions()} />;\n  }\n}"},null===(_account_select_deskt2=account_select_desktop.parameters)||void 0===_account_select_deskt2?void 0:null===(_account_select_deskt3=_account_select_deskt2.docs)||void 0===_account_select_deskt3?void 0:_account_select_deskt3.source)})}),account_select_mobile.parameters=(0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_12__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_12__.Z)({},account_select_mobile.parameters),{},{docs:(0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_12__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_12__.Z)({},null===(_account_select_mobil=account_select_mobile.parameters)||void 0===_account_select_mobil?void 0:_account_select_mobil.docs),{},{source:(0,_home_runner_work_core_components_core_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_12__.Z)({originalSource:"{\n  name: 'AccountSelectMobile',\n  render: () => {\n    const size = select('size', [40, 48, 56, 64, 72], 72);\n    return <AccountSelectMobile size={size} label={text('label', 'Элемент')} options={getOptions('mobile')} fieldProps={{\n      leftAddons: <ProductCover.Single size={PRODUCT_COVER_SIZE_MAPPER[size]} />\n    }} valueRenderer={({\n      selected\n    }) => {\n      return <PureCell verticalPadding='none'>\n                            <PureCell.Graphics verticalAlign='center'>\n                                <ProductCover.Single size={PRODUCT_COVER_SIZE_MAPPER[size]} />\n                            </PureCell.Graphics>\n                            <PureCell.Content>\n                                <PureCell.Main>\n                                    <Typography.Text color='secondary' view='primary-small'>\n                                        {selected?.value.text}\n                                    </Typography.Text>\n                                    <Amount value={selected?.value.amount} minority={100} currency='RUR' bold='major' transparentMinor={true} />\n                                </PureCell.Main>\n                            </PureCell.Content>\n                        </PureCell>;\n    }} cardAddingProps={{\n      content: <PureCell verticalPadding='none'>\n                            <PureCell.Graphics verticalAlign='center'>\n                                <ProductCover.Single size={40} iconColor='var(--color-light-neutral-700)' backgroundColor='var(--color-light-neutral-200)' icon={PlusMIcon} />\n                            </PureCell.Graphics>\n                            <PureCell.Content>\n                                <PureCell.Main>\n                                    <Typography.Text view='component-primary'>\n                                        Новая карта\n                                    </Typography.Text>\n                                </PureCell.Main>\n                            </PureCell.Content>\n                        </PureCell>,\n      needCvv: boolean('needCvv', true),\n      needExpiryDate: boolean('needExpiryDate', true),\n      expiryAsDate: boolean('expiryAsDate', true)\n    }} />;\n  }\n}"},null===(_account_select_mobil2=account_select_mobile.parameters)||void 0===_account_select_mobil2?void 0:null===(_account_select_mobil3=_account_select_mobil2.docs)||void 0===_account_select_mobil3?void 0:_account_select_mobil3.source)})});let __namedExportsOrder=["account_select_desktop","account_select_mobile"]},"./packages/account-select/src/docs/Component.docs.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:function(){return Component_docs}}),__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mdx_react_shim=__webpack_require__("./node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),blocks=__webpack_require__("./.storybook/blocks/index.ts"),Component_stories=__webpack_require__("./packages/account-select/src/docs/Component.stories.tsx");function _createMdxContent(props){let _components=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p"},(0,mdx_react_shim.useMDXComponents)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(_components.h2,{id:"выбор-счёта",children:"Выбор счёта"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const DATA = [\n        { text: 'Основной счёт \xb7\xb71234', amount: 100000099, id: '1' },\n        { text: 'Экспресс-счёт \xb7\xb70909', amount: 100000099, id: '2' },\n        { text: 'Депозитный счёт \xb7\xb74567', amount: 0, id: '3' },\n    ];\n    const getOptions = DATA.map((el) => ({\n        key: el.id,\n        value: el,\n        content: (\n            <PureCell verticalPadding='default'>\n                <PureCell.Content>\n                    <PureCell.Main>\n                        <Typography.Text color='secondary' view='primary-small'>\n                            {el.text}\n                        </Typography.Text>\n                        <Amount\n                            value={el.amount}\n                            minority={100}\n                            currency='RUR'\n                            bold='major'\n                            transparentMinor={true}\n                        />\n                    </PureCell.Main>\n                </PureCell.Content>\n            </PureCell>\n        ),\n    }));\n\n    return (\n        <AccountSelect\n            size={56}\n            valueRenderer={({ selected }) => {\n                return (\n                    <PureCell verticalPadding='none'>\n                        <PureCell.Main>\n                            <Typography.Text color='secondary' view='primary-small'>\n                                {selected?.value.text}\n                            </Typography.Text>\n                            <Amount\n                                value={selected?.value.amount}\n                                minority={100}\n                                currency='RUR'\n                                bold='major'\n                                transparentMinor={true}\n                            />\n                        </PureCell.Main>\n                    </PureCell>\n                );\n            }}\n            label='Куда'\n            options={getOptions()}\n        />\n    );\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"выбор-карты",children:"Выбор карты"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const isDesktop = useIsDesktop();\n    const DATA = [\n        { text: 'Карта с преимуществами', amount: 100000099, id: '1' },\n        { text: 'Карта с кредитным лимитом', amount: 999999, id: '2' },\n        { text: 'Карта с вашим дизайном', amount: 0, id: '3' },\n    ];\n    const getOptions = DATA.map((el) => ({\n        key: el.id,\n        value: el,\n        content: (\n            <PureCell verticalPadding='default'>\n                <PureCell.Graphics verticalAlign='center'>\n                    <ProductCover.Single size={isDesktop ? 48 : 40} />\n                </PureCell.Graphics>\n                <PureCell.Content>\n                    <PureCell.Main>\n                        <Typography.Text color='secondary' view='primary-small'>\n                            {el.text}\n                        </Typography.Text>\n                        <Amount\n                            value={el.amount}\n                            minority={100}\n                            currency='RUR'\n                            bold='major'\n                            transparentMinor={true}\n                        />\n                    </PureCell.Main>\n                </PureCell.Content>\n            </PureCell>\n        ),\n    }));\n    return (\n        <AccountSelect\n            label='Карта получателя'\n            valueRenderer={({ selected }) => {\n                return (\n                    <PureCell verticalPadding='none'>\n                        <PureCell.Graphics verticalAlign='center'>\n                            <ProductCover.Single size={isDesktop ? 48 : 40} />\n                        </PureCell.Graphics>\n                        <PureCell.Content>\n                            <PureCell.Main>\n                                <Typography.Text color='secondary' view='primary-small'>\n                                    {selected?.value.text}\n                                </Typography.Text>\n                                <Amount\n                                    value={selected?.value.amount}\n                                    minority={100}\n                                    currency='RUR'\n                                    bold='major'\n                                    transparentMinor={true}\n                                />\n                            </PureCell.Main>\n                        </PureCell.Content>\n                    </PureCell>\n                );\n            }}\n            fieldProps={{ leftAddons: <ProductCover.Single size={isDesktop ? 48 : 40} /> }}\n            options={getOptions()}\n        />\n    );\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"добавление-новой-карты-отправителя",children:"Добавление новой карты отправителя"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Для карты отправителя можно использовать механику с запросом CVV или без него.\nПосле ввода 6-го символа определяется банк и\xa0платёжная система. При необходимости, можно настроить отображение различных рубашек карт для банков РФ. В примере для карты начинающейся с номера 1234 56 будет определён банк и изменится рубашка."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const isDesktop = useIsDesktop();\n    const DATA = [\n        { text: 'Карта с преимуществами', amount: 100000099, id: '1' },\n        { text: 'Карта с кредитным лимитом', amount: 2500000, id: '2' },\n    ];\n    const getOptions = DATA.map((el) => ({\n        key: el.id,\n        value: el,\n        content: (\n            <PureCell verticalPadding='default'>\n                <PureCell.Graphics verticalAlign='center'>\n                    <ProductCover.Single\n                        size={isDesktop ? 48 : 40}\n                        baseUrl='https://online.alfabank.ru/cards-images/cards/'\n                        layers='BACKGROUND,LOGO,PAYMENT_SYSTEM'\n                        cardId='RM'\n                    />\n                </PureCell.Graphics>\n                <PureCell.Content>\n                    <PureCell.Main>\n                        <Typography.Text color='secondary' view='primary-small'>\n                            {el.text}\n                        </Typography.Text>\n                        <Amount\n                            value={el.amount}\n                            minority={100}\n                            currency='RUR'\n                            bold='major'\n                            transparentMinor={true}\n                        />\n                    </PureCell.Main>\n                </PureCell.Content>\n            </PureCell>\n        ),\n    }));\n\n    const [cvv, setCvv] = React.useState(true);\n    const [expiry, setExpiry] = React.useState(true);\n    const [cardImage, setCardImage] = React.useState(undefined);\n    const handleInput = (data) => {\n        if (data.number.startsWith('123456')) {\n            setCardImage({\n                baseUrl: 'https://online.alfabank.ru/cards-images/cards/',\n                layers: 'BACKGROUND,LOGO,PAYMENT_SYSTEM',\n                cardId: 'RM',\n            });\n        }\n    };\n\n    return (\n        <div>\n            <AccountSelect\n                label='Карта отправителя'\n                fieldProps={{ leftAddons: <ProductCover.Single size={isDesktop ? 48 : 40} /> }}\n                options={getOptions()}\n                valueRenderer={({ selected }) => {\n                    return (\n                        <PureCell verticalPadding='none'>\n                            <PureCell.Graphics verticalAlign='center'>\n                                <ProductCover.Single size={isDesktop ? 48 : 40} />\n                            </PureCell.Graphics>\n                            <PureCell.Content>\n                                <PureCell.Main>\n                                    <Typography.Text color='secondary' view='primary-small'>\n                                        {selected?.value.text}\n                                    </Typography.Text>\n                                    <Amount\n                                        value={selected?.value.amount}\n                                        minority={100}\n                                        currency='RUR'\n                                        bold='major'\n                                        transparentMinor={true}\n                                    />\n                                </PureCell.Main>\n                            </PureCell.Content>\n                        </PureCell>\n                    );\n                }}\n                cardAddingProps={{\n                    content: (\n                        <PureCell verticalPadding='default'>\n                            <PureCell.Graphics verticalAlign='center'>\n                                <ProductCover.Single\n                                    size={isDesktop ? 48 : 40}\n                                    iconColor='var(--color-light-neutral-700)'\n                                    backgroundColor='var(--color-light-neutral-200)'\n                                    icon={PlusMIcon}\n                                />\n                            </PureCell.Graphics>\n                            <PureCell.Content>\n                                <PureCell.Main>\n                                    <PureCell.Text titleColor='primary' view='primary-medium'>\n                                        Новая карта\n                                    </PureCell.Text>\n                                </PureCell.Main>\n                            </PureCell.Content>\n                        </PureCell>\n                    ),\n                    needCvv: cvv,\n                    needExpiryDate: expiry,\n                    onInput: handleInput,\n                    cardImage,\n                }}\n            />\n            <Gap size='m' />\n            <Switch\n                checked={cvv}\n                label='Нужен CVV'\n                onChange={() => {\n                    setCvv((prevState) => !prevState);\n                }}\n            />\n            <Gap size='s' />\n            <Switch\n                checked={expiry}\n                label='Нужна дата окончания действия карты'\n                onChange={() => {\n                    setExpiry((prevState) => !prevState);\n                }}\n            />\n        </div>\n    );\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"добавление-новой-карты-получателя",children:"Добавление новой карты получателя"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const isDesktop = useIsDesktop();\n    const DATA = [\n        { text: 'Карта с преимуществами', amount: 100000099, id: '1' },\n        { text: 'Карта с кредитным лимитом', amount: 100099, id: '2' },\n    ];\n    const getOptions = () =>\n        DATA.map((el) => ({\n            key: el.id,\n            value: el,\n            content: (\n                <PureCell verticalPadding='default'>\n                    <PureCell.Graphics verticalAlign='center'>\n                        <ProductCover.Single\n                            size={isDesktop ? 48 : 40}\n                            baseUrl='https://online.alfabank.ru/cards-images/cards/'\n                            layers='BACKGROUND,LOGO,PAYMENT_SYSTEM'\n                            cardId='RM'\n                        />\n                    </PureCell.Graphics>\n                    <PureCell.Content>\n                        <PureCell.Main>\n                            <PureCell.Text titleColor='secondary' view='primary-small'>\n                                {el.text}\n                            </PureCell.Text>\n                            <PureCell.Amount\n                                value={el.amount}\n                                minorUnits={100}\n                                currency='RUR'\n                                color='primary'\n                                view={'withZeroMinorPart'}\n                                transparentMinor={true}\n                            />\n                        </PureCell.Main>\n                    </PureCell.Content>\n                </PureCell>\n            ),\n        }));\n\n    const [cardImage, setCardImage] = React.useState(undefined);\n    const handleInput = (data) => {\n        if (data.number.startsWith('123456')) {\n            setCardImage({\n                baseUrl: 'https://online.alfabank.ru/cards-images/cards/',\n                layers: 'BACKGROUND,LOGO,PAYMENT_SYSTEM',\n                cardId: 'RM',\n            });\n        }\n    };\n\n    return (\n        <div>\n            <AccountSelect\n                label='Карта получателя'\n                fieldProps={{ leftAddons: <ProductCover.Single size={isDesktop ? 48 : 40} /> }}\n                options={getOptions()}\n                valueRenderer={({ selected }) => {\n                    return (\n                        <PureCell verticalPadding='none'>\n                            <PureCell.Graphics verticalAlign='center'>\n                                <ProductCover.Single size={isDesktop ? 48 : 40} />\n                            </PureCell.Graphics>\n                            <PureCell.Content>\n                                <PureCell.Main>\n                                    <Typography.Text color='secondary' view='primary-small'>\n                                        {selected?.value.text}\n                                    </Typography.Text>\n                                    <Amount\n                                        value={selected?.value.amount}\n                                        minority={100}\n                                        currency='RUR'\n                                        bold='major'\n                                        transparentMinor={true}\n                                    />\n                                </PureCell.Main>\n                            </PureCell.Content>\n                        </PureCell>\n                    );\n                }}\n                cardAddingProps={{\n                    content: (\n                        <PureCell verticalPadding='default'>\n                            <PureCell.Graphics verticalAlign='center'>\n                                <ProductCover.Single\n                                    size={isDesktop ? 48 : 40}\n                                    iconColor='var(--color-light-neutral-700)'\n                                    backgroundColor='var(--color-light-neutral-200)'\n                                    icon={PlusMIcon}\n                                />\n                            </PureCell.Graphics>\n                            <PureCell.Content>\n                                <PureCell.Main>\n                                    <PureCell.Text titleColor='primary' view='primary-medium'>\n                                        Новая карта\n                                    </PureCell.Text>\n                                </PureCell.Main>\n                            </PureCell.Content>\n                        </PureCell>\n                    ),\n                    needCvv: false,\n                    needExpiryDate: false,\n                    onInput: handleInput,\n                    cardImage,\n                }}\n            />\n        </div>\n    );\n});\n"})})]})}var description=function(props={}){let{wrapper:MDXLayout}=Object.assign({},(0,mdx_react_shim.useMDXComponents)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)},Component_mobile=__webpack_require__("./packages/account-select/src/mobile/Component.mobile.tsx"),Component_desktop=__webpack_require__("./packages/account-select/src/desktop/Component.desktop.tsx");function development_createMdxContent(props){let _components=Object.assign({h2:"h2",pre:"pre",code:"code"},(0,mdx_react_shim.useMDXComponents)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(_components.h2,{id:"подключение",children:"Подключение"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"import { AccountSelectResponsive } from '@alfalab/core-components/account-select';\nimport { AccountSelectDesktop } from '@alfalab/core-components/account-select/desktop';\nimport { AccountSelectMobile } from '@alfalab/core-components/account-select/mobile';\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"свойства",children:"Свойства"}),"\n",(0,jsx_runtime.jsx)(blocks.Ft,{components:{AccountSelectMobile:Component_mobile.W,AccountSelectDesktop:Component_desktop.o}})]})}var development=function(props={}){let{wrapper:MDXLayout}=Object.assign({},(0,mdx_react_shim.useMDXComponents)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(development_createMdxContent,props)})):development_createMdxContent(props)};function Component_docs_createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{of:Component_stories}),"\n",(0,jsx_runtime.jsx)(blocks.yt,{name:"AccountSelect",children:"Поле с выпадающим списком для выбора счёта или карты."}),"\n",(0,jsx_runtime.jsx)(blocks.mQ,{description:(0,jsx_runtime.jsx)(description,{}),development:(0,jsx_runtime.jsx)(development,{})})]})}var Component_docs=function(props={}){let{wrapper:MDXLayout}=Object.assign({},(0,mdx_react_shim.useMDXComponents)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(Component_docs_createMdxContent,props)})):Component_docs_createMdxContent(props)}},"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Z:function(){return _toConsumableArray}});var arrayLikeToArray=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js");function _arrayWithoutHoles(r){if(Array.isArray(r))return(0,arrayLikeToArray.Z)(r)}function _iterableToArray(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}var unsupportedIterableToArray=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js");function _nonIterableSpread(){throw TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _toConsumableArray(r){return _arrayWithoutHoles(r)||_iterableToArray(r)||(0,unsupportedIterableToArray.Z)(r)||_nonIterableSpread()}}}]);