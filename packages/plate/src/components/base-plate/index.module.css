@import '../../../../vars/src/index.css';
@import './vars.css';

.component {
    position: relative;
    display: inline-flex;
    box-sizing: border-box;
    color: var(--color-light-text-primary);
    width: 100%;
    min-height: 56px;
    padding: var(--gap-12);
    outline: none;

    &:before {
        content: '';
        width: var(--plate-border-left);
        position: absolute;
        height: 100%;
        top: var(--gap-0);
        left: var(--gap-0);
    }
}

.foldable {
    cursor: pointer;
}

.component * {
    box-sizing: border-box;
}

.focused {
    @mixin focus-outline;
}

.inner {
    position: relative;
    width: 100%;
    display: flex;
    justify-content: space-between;
}

.rounded,
.noBorder {
    &:before {
        display: none;
    }
}

.shadow:after {
    content: '';
    position: absolute;
    top: var(--gap-0);
    bottom: var(--gap-0);
    left: var(--gap-0);
    right: var(--gap-0);
    width: 100%;
    height: 100%;
    display: block;
    box-shadow: var(--plate-box-shadow);
    pointer-events: none;
}

.common {
    background-color: var(--color-light-neutral-translucent-200);
    border: var(--plate-border-width) solid var(--color-light-neutral-translucent-700);
    &:before {
        background-color: var(--color-light-neutral-translucent-700);
    }
}

.negative {
    background-color: var(--color-light-status-muted-negative);
    border: var(--plate-border-width) solid var(--color-light-status-negative);
    &:before {
        background-color: var(--color-light-status-negative);
    }
}

.positive {
    background-color: var(--color-light-status-muted-positive);
    border: var(--plate-border-width) solid var(--color-light-status-positive);
    &:before {
        background-color: var(--color-light-status-positive);
    }
}

.attention {
    background-color: var(--color-light-status-muted-attention);
    border: var(--plate-border-width) solid var(--color-light-status-attention);
    &:before {
        background-color: var(--color-light-status-attention);
    }
}

.custom {
    background: var(--plate-background);
    border: var(--plate-border-width) solid var(--plate-border-color);
    &:before {
        background-color: var(--plate-border-color);
    }
}

.rect,
.noBorder {
    border: none;
}

.isHidden {
    display: none;
}

.leftAddons,
.rightAddons {
    display: inline-flex;
    padding: var(--gap-4);
}

.leftAddons {
    flex-shrink: 0;
    min-width: 24px;
    margin-right: var(--gap-4);
}

.subAddons {
    cursor: default;
    align-self: flex-start;
}

.rowReverse {
    display: flex;
    flex-direction: row-reverse;
}

.bold,
.light {
    word-break: break-word;
}

.light {
    @mixin paragraph_primary_small;
    padding: 6px var(--gap-12) 6px var(--gap-4);
}

.foldable .content {
    max-height: 300vh;
}

.content {
    @mixin paragraph_primary_small;

    overflow: hidden;
    transition: max-height 2s ease-in-out;
    cursor: default;

    &.isFolded.isFolded {
        max-height: 0;
        transition: max-height 1s cubic-bezier(0, 1, 0, 1);
    }
}

.contentContainer {
    flex: 1;
    margin-right: auto;

    &.withoutTitle {
        padding-top: var(--gap-2);
    }
}

.limitWidth {
    max-width: var(--plate-width-limit);
}

.description {
    @mixin paragraph_primary_small;
}

.closer,
.folder {
    display: block;
    height: 24px;
    width: 24px;
    opacity: 1;
    transition: opacity 0.2s ease;
    cursor: pointer;
    margin-left: var(--gap-12);

    &:hover {
        opacity: 0.7;
    }

    &:active {
        opacity: 0.5;
    }
}

.folder {
    transition: transform 0.15s ease-in-out, opacity 0.2s ease;
    transform: var(--arrow-transform);

    &.isFolded {
        transform: rotate(0deg);
    }
}

.containerButton {
    display: flex;
}

.subAddons .button {
    &:not(:first-child) {
        margin-right: var(--gap-8);
    }
}

.containerButton .button {
    &:not(:last-child) {
        margin-right: var(--gap-8);
    }
}

.rowLimit1 {
    @mixin row_limit 1;
    word-break: break-all;
}

.rowLimit2 {
    @mixin row_limit 2;
}

.rowLimit3 {
    @mixin row_limit 3;
}
