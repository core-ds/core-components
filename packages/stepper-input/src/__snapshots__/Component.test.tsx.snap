// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StepperInput Snapshots tests should match snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="component component m m hasRightAddons"
      >
        <div
          class="inner inner inner inner filled"
        >
          <div
            class="inputWrapper"
          >
            <div
              class="input"
            >
              <input
                class="input input input"
                inputmode="decimal"
                type="text"
                value="10"
              />
            </div>
          </div>
          <div
            class="addons rightAddons"
          >
            <div
              class="component steppers m"
            >
              <button
                aria-label="уменьшить"
                class="component ghost s s component ghost component ghost cc-icon-button button secondary component"
                type="button"
              >
                <span
                  class="text stretchText"
                >
                  <span
                    class="iconWrapper s center"
                  >
                    <svg
                      class="icon"
                      fill="currentColor"
                      focusable="false"
                      height="24"
                      role="img"
                      viewBox="0 0 24 24"
                      width="24"
                    >
                      <path
                        d="M3 11h18v2H3z"
                      />
                    </svg>
                  </span>
                </span>
              </button>
              <div
                class="separator"
              />
              <button
                aria-label="увеличить"
                class="component ghost s s component ghost component ghost cc-icon-button button secondary component"
                type="button"
              >
                <span
                  class="text stretchText"
                >
                  <span
                    class="iconWrapper s center"
                  >
                    <svg
                      class="icon"
                      fill="currentColor"
                      focusable="false"
                      height="24"
                      role="img"
                      viewBox="0 0 24 24"
                      width="24"
                    >
                      <path
                        d="M11 11H3v2h8v8h2v-8h8v-2h-8V3h-2v8z"
                      />
                    </svg>
                  </span>
                </span>
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="component component m m hasRightAddons"
    >
      <div
        class="inner inner inner inner filled"
      >
        <div
          class="inputWrapper"
        >
          <div
            class="input"
          >
            <input
              class="input input input"
              inputmode="decimal"
              type="text"
              value="10"
            />
          </div>
        </div>
        <div
          class="addons rightAddons"
        >
          <div
            class="component steppers m"
          >
            <button
              aria-label="уменьшить"
              class="component ghost s s component ghost component ghost cc-icon-button button secondary component"
              type="button"
            >
              <span
                class="text stretchText"
              >
                <span
                  class="iconWrapper s center"
                >
                  <svg
                    class="icon"
                    fill="currentColor"
                    focusable="false"
                    height="24"
                    role="img"
                    viewBox="0 0 24 24"
                    width="24"
                  >
                    <path
                      d="M3 11h18v2H3z"
                    />
                  </svg>
                </span>
              </span>
            </button>
            <div
              class="separator"
            />
            <button
              aria-label="увеличить"
              class="component ghost s s component ghost component ghost cc-icon-button button secondary component"
              type="button"
            >
              <span
                class="text stretchText"
              >
                <span
                  class="iconWrapper s center"
                >
                  <svg
                    class="icon"
                    fill="currentColor"
                    focusable="false"
                    height="24"
                    role="img"
                    viewBox="0 0 24 24"
                    width="24"
                  >
                    <path
                      d="M11 11H3v2h8v8h2v-8h8v-2h-8V3h-2v8z"
                    />
                  </svg>
                </span>
              </span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
