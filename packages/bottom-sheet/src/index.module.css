@import '../../themes/src/default.css';
@import './vars.css';

.modal {
    bottom: 0;
    width: 100%;
    max-width: 600px;
    pointer-events: none;
    touch-action: none;
}

.modal.modal {
    background-color: transparent;
    position: fixed;
}

.wrapper {
    transform: translateY(100%);
    pointer-events: none;
    touch-action: none;
    border-top-right-radius: var(--bottom-sheet-top-radius);
    border-top-left-radius: var(--bottom-sheet-top-radius);
    transition: border-radius 0.3s ease;
}

.fullscreen {
    border-radius: 0;
}

.component {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: inherit;
    background-color: var(--color-light-modal-bg-primary);
    pointer-events: all;
    box-shadow: var(--bottom-sheet-shadow);
}

.withTransition {
    transition: var(--bottom-sheet-out-transition);
}

.scrollableContainer {
    overflow: auto;
    display: flex;
    flex-direction: column;
    position: relative;
    height: 100%;
    background-color: inherit;
    border-radius: inherit;
    overscroll-behavior: contain;
}

.marker {
    position: fixed;
    top: var(--gap-2xs);
    right: 0;
    left: 0;
    z-index: 1000;
    width: 36px;
    margin: 0 auto;
}

.defaultMarker {
    height: 4px;
    border-radius: var(--border-radius-xxl);
    background-color: var(--color-light-neutral-translucent-300);
}

.content {
    position: relative;
    z-index: 0;
    display: flex;
    flex-direction: column;
    flex: 1;
    padding: 0 var(--gap-m);
    color: var(--color-light-text-primary);
    background-color: inherit;
    border-radius: inherit;
}

.noHeader {
    padding-top: var(--gap-m);
}

.noFooter {
    padding-bottom: var(--gap-m);
}

.scrollLocked {
    overflow: hidden;
}

.hiddenScrollbar {
    scrollbar-width: none;

    &::-webkit-scrollbar {
        width: 0;
        height: 0;
    }
}

.disabledPointerEvents {
    pointer-events: none;
}

.appear,
.enter {
    & .wrapper {
        transition: none;
    }
}

.appearActive,
.enterActive {
    & .wrapper {
        transition: var(--bottom-sheet-in-transition);
        transform: translateY(0);
    }
}

.enterDone,
.appearDone {
    & .wrapper {
        transform: translateY(0);
    }
}

.exit {
    & .wrapper {
        transform: translateY(0);
    }
}

.exitActive {
    & .wrapper {
        transition: var(--bottom-sheet-out-transition);
        transform: translateY(100%);
    }
}

.safeAreaBottom {
    padding-bottom: env(safe-area-inset-bottom);
}

@mixin bg-class-list;
